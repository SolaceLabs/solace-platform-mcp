{
  "basePath": "/SEMP/v2/monitor",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "About": {
      "properties": {},
      "type": "object"
    },
    "AboutApi": {
      "properties": {
        "platform": {
          "description": "The platform running the SEMP API.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\".",
          "type": "string"
        },
        "sempVersion": {
          "description": "The version of the SEMP API.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AboutApiCollections": {
      "properties": {},
      "type": "object"
    },
    "AboutApiLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this API Description object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AboutApiResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/AboutApiCollections"
        },
        "data": {
          "$ref": "#/definitions/AboutApi"
        },
        "links": {
          "$ref": "#/definitions/AboutApiLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "AboutCollections": {
      "properties": {},
      "type": "object"
    },
    "AboutLinks": {
      "properties": {
        "apiUri": {
          "description": "The URI of this About's API Description object. Available since 2.11.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this About object.",
          "type": "string"
        },
        "userUri": {
          "description": "The URI of this About's User object. Available since 2.11.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AboutResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/AboutCollections"
        },
        "data": {
          "$ref": "#/definitions/About"
        },
        "links": {
          "$ref": "#/definitions/AboutLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "AboutUser": {
      "properties": {
        "globalAccessLevel": {
          "description": "The global access level of the User.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". The allowed values and their meaning are:\n\n<pre>\n\"admin\" - Full administrative access.\n\"none\" - No access.\n\"read-only\" - Read only access.\n\"read-write\" - Read and write access.\n</pre>\n",
          "enum": [
            "admin",
            "none",
            "read-only",
            "read-write"
          ],
          "type": "string"
        },
        "sessionActive": {
          "description": "Indicates whether a session is active for this request.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". Available since 2.24.",
          "type": "boolean"
        },
        "sessionCreateTime": {
          "description": "The timestamp of when the session was created.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.21.",
          "format": "int32",
          "type": "integer"
        },
        "sessionCurrentTime": {
          "description": "The current server timestamp. This is provided as a reference point for the other timestamps provided.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.21.",
          "format": "int32",
          "type": "integer"
        },
        "sessionHardExpiryTime": {
          "description": "The hard expiry time for the session. After this time the session will be invalid, regardless of activity.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.21.",
          "format": "int32",
          "type": "integer"
        },
        "sessionId": {
          "description": "An identifier for the session to differentiate this session from other sessions for the same user. This value is not guaranteed to be unique between active sessions for different users.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". Available since 2.21.",
          "type": "string"
        },
        "sessionIdleExpiryTime": {
          "description": "The session idle expiry time. After this time the session will be invalid if there has been no activity.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.21.",
          "format": "int32",
          "type": "integer"
        },
        "username": {
          "description": "The username of the User.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". Available since 2.17.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AboutUserCollections": {
      "properties": {
        "msgVpns": {
          "$ref": "#/definitions/AboutUserCollectionsMsgVpns"
        }
      },
      "type": "object"
    },
    "AboutUserCollectionsMsgVpns": {
      "properties": {
        "count": {
          "description": "The total number of objects in the msgVpns collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AboutUserLinks": {
      "properties": {
        "msgVpnsUri": {
          "description": "The URI of this User's collection of User Message VPN objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this User object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AboutUserMsgVpn": {
      "properties": {
        "accessLevel": {
          "description": "The Message VPN access level of the User.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". The allowed values and their meaning are:\n\n<pre>\n\"none\" - No access.\n\"read-only\" - Read only access.\n\"read-write\" - Read and write access.\n</pre>\n",
          "enum": [
            "none",
            "read-only",
            "read-write"
          ],
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AboutUserMsgVpnCollections": {
      "properties": {},
      "type": "object"
    },
    "AboutUserMsgVpnLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this User Message VPN object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AboutUserMsgVpnResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/AboutUserMsgVpnCollections"
        },
        "data": {
          "$ref": "#/definitions/AboutUserMsgVpn"
        },
        "links": {
          "$ref": "#/definitions/AboutUserMsgVpnLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "AboutUserMsgVpnsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/AboutUserMsgVpnCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/AboutUserMsgVpn"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/AboutUserMsgVpnLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "AboutUserResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/AboutUserCollections"
        },
        "data": {
          "$ref": "#/definitions/AboutUser"
        },
        "links": {
          "$ref": "#/definitions/AboutUserLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "Broker": {
      "properties": {
        "authBruteForceProtectionEnabled": {
          "description": "Enable or disable protection against brute force password guessing attacks on local management accounts.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.40.",
          "type": "boolean"
        },
        "authClientCertRevocationCheckMode": {
          "description": "The client certificate revocation checking mode used when a client authenticates with a client certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - Do not perform any certificate revocation checking.\n\"ocsp\" - Use the Online Certificate Status Protocol (OCSP) for certificate revocation checking.\n\"crl\" - Use Certificate Revocation Lists (CRL) for certificate revocation checking.\n\"ocsp-crl\" - Use OCSP first, but if OCSP fails to return an unambiguous result, then check via CRL.\n</pre>\n",
          "enum": [
            "none",
            "ocsp",
            "crl",
            "ocsp-crl"
          ],
          "type": "string"
        },
        "averageBindRequestRate": {
          "description": "The one minute average of the bind request rate received by the Broker, in binds per second (binds/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxByteRate": {
          "description": "The one minute average of the message rate received by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxCompressedByteRate": {
          "description": "The one minute average of the compressed message rate received by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxMsgRate": {
          "description": "The one minute average of the message rate received by the Broker, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxUncompressedByteRate": {
          "description": "The one minute average of the uncompressed message rate received by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxByteRate": {
          "description": "The one minute average of the message rate transmitted by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxCompressedByteRate": {
          "description": "The one minute average of the compressed message rate transmitted by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxMsgRate": {
          "description": "The one minute average of the message rate transmitted by the Broker, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxUncompressedByteRate": {
          "description": "The one minute average of the uncompressed message rate transmitted by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "bindRequestRate": {
          "description": "The current bind request rate received by the Broker, in binds per second (binds/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "configSyncAuthenticationClientCertMaxChainDepth": {
          "description": "The maximum depth for a client certificate chain. The depth of a chain is defined as the number of signing CA certificates that are present in the chain back to a trusted self-signed root CA certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "configSyncAuthenticationClientCertValidateDateEnabled": {
          "description": "Enable or disable validation of the \"Not Before\" and \"Not After\" validity dates in the authentication certificate(s).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "type": "boolean"
        },
        "configSyncClientProfileTcpInitialCongestionWindow": {
          "description": "The TCP initial congestion window size for Config Sync clients, in multiples of the TCP Maximum Segment Size (MSS). Changing the value from its default of 2 results in non-compliance with RFC 2581. Contact support before changing this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "configSyncClientProfileTcpKeepaliveCount": {
          "description": "The number of TCP keepalive retransmissions to a client using the Client Profile before declaring that it is not available.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "configSyncClientProfileTcpKeepaliveIdle": {
          "description": "The amount of time a client connection using the Client Profile must remain idle before TCP begins sending keepalive probes, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "configSyncClientProfileTcpKeepaliveInterval": {
          "description": "The amount of time between TCP keepalive retransmissions to a client using the Client Profile when no acknowledgment is received, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "configSyncClientProfileTcpMaxWindow": {
          "description": "The TCP maximum window size for clients using the Client Profile, in kilobytes. Changes are applied to all existing connections. This setting is ignored on the software broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "configSyncClientProfileTcpMss": {
          "description": "The TCP maximum segment size for clients using the Client Profile, in bytes. Changes are applied to all existing connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "configSyncEnabled": {
          "description": "Enable or disable configuration synchronization for High Availability or Disaster Recovery.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "type": "boolean"
        },
        "configSyncLastFailureReason": {
          "description": "The reason for the last transition to a \"Down\" operational status. On transitions to the \"Up\" operational status this value is cleared.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.22.",
          "type": "string"
        },
        "configSyncSynchronizeUsernameEnabled": {
          "description": "Enable or disable the synchronizing of usernames within High Availability groups. The transition from not synchronizing to synchronizing will cause the High Availability mate to fall out of sync. Recommendation: leave this as enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "type": "boolean"
        },
        "configSyncTlsEnabled": {
          "description": "Enable or disable the use of TLS encryption of the configuration synchronization communications between brokers in High Availability groups and/or Disaster Recovery sites.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "type": "boolean"
        },
        "configSyncUp": {
          "description": "Indicates whether the configuration synchronization facility is operational. \"True\" indicates the facility is Up, otherwise it is Down. When \"False\" the configSyncLastFailureReason will provide further detail.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.22.",
          "type": "boolean"
        },
        "cspfVersion": {
          "description": "The current CSPF version.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.17.",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedMsgingDefragmentationEstimatedFragmentation": {
          "description": "An approximation of the amount of disk space consumed, but not used, by the persisted data. Calculated as a percentage of total space.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingDefragmentationEstimatedRecoverableSpace": {
          "description": "An approximation of the amount of disk space recovered upon a successfully completed execution of a defragmentation operation. Expressed in MB.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.18.",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedMsgingDefragmentationLastCompletedOn": {
          "description": "A timestamp reflecting when the last defragmentation completed.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.18.",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedMsgingDefragmentationLastCompletionPercentage": {
          "description": "How much of the message spool was visited during the last defragmentation operation. This number reflects the percentage of the message spool visited in terms of disk space (as opposed to, for example, spool files).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingDefragmentationLastExitCondition": {
          "description": "Reflects how the last defragmentation operation completed.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"success\" - Defragmentation completed successfully.\n\"unmovable-local-transaction\" - Defragmentation stopped after encountering an unmovable local transaction.\n\"unmovable-xa-transaction\" - Defragmentation stopped after encountering an unmovable XA transaction.\n\"incomplete\" - Defragmentation stopped prematurely.\n\"stopped-by-administrator\" - Defragmentation stopped by administrator.\n</pre>\n Available since 2.18.",
          "type": "string"
        },
        "guaranteedMsgingDefragmentationLastExitConditionInformation": {
          "description": "Optional additional information regarding the exit condition of the last defragmentation operation.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.18.",
          "type": "string"
        },
        "guaranteedMsgingDefragmentationScheduleDayList": {
          "description": "The days of the week to schedule defragmentation runs, specified as \"daily\" or as a comma-separated list of days. Days must be specified as \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri, or \"Sat\", with no spaces, and in sorted order from Sunday to Saturday. Please note \"Sun,Mon,Tue,Wed,Thu,Fri,Sat\" is not allowed, use \"daily\" instead.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "type": "string"
        },
        "guaranteedMsgingDefragmentationScheduleEnabled": {
          "description": "Enable or disable schedule-based defragmentation of Guaranteed Messaging spool files.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "type": "boolean"
        },
        "guaranteedMsgingDefragmentationScheduleTimeList": {
          "description": "The times of the day to schedule defragmentation runs, specified as \"hourly\" or as a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There must be no spaces, and times (up to 4) must be in sorted order from 0:00 to 23:59.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "type": "string"
        },
        "guaranteedMsgingDefragmentationStatus": {
          "description": "Defragmentation status of guaranteed messaging.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"idle\" - Defragmentation is not currently running.\n\"pending\" - Defragmentation is preparing to run.\n\"active\" - Defragmentation is in progress.\n</pre>\n Available since 2.18.",
          "type": "string"
        },
        "guaranteedMsgingDefragmentationStatusActiveCompletionPercentage": {
          "description": "The estimated completion percentage of a defragmentation operation currently in progress. Only valid if the defragmentation status is \"Active\".\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingDefragmentationThresholdEnabled": {
          "description": "Enable or disable threshold-based defragmentation of Guaranteed Messaging spool files.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "type": "boolean"
        },
        "guaranteedMsgingDefragmentationThresholdFragmentationPercentage": {
          "description": "Percentage of spool fragmentation needed to trigger defragmentation run. The minimum value allowed is 30%.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingDefragmentationThresholdMinInterval": {
          "description": "Minimum interval of time (in minutes) between defragmentation runs triggered by thresholds.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingDefragmentationThresholdUsagePercentage": {
          "description": "Percentage of spool usage needed to trigger defragmentation run. The minimum value allowed is 30%.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingEnabled": {
          "description": "Enable or disable Guaranteed Messaging.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "type": "boolean"
        },
        "guaranteedMsgingEventCacheUsageThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventCacheUsageThreshold"
        },
        "guaranteedMsgingEventDeliveredUnackedThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventDeliveredUnackedThreshold"
        },
        "guaranteedMsgingEventDiskUsageThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventDiskUsageThreshold"
        },
        "guaranteedMsgingEventEgressFlowCountThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventEgressFlowCountThreshold"
        },
        "guaranteedMsgingEventEndpointCountThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventEndpointCountThreshold"
        },
        "guaranteedMsgingEventIngressFlowCountThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventIngressFlowCountThreshold"
        },
        "guaranteedMsgingEventMsgCountThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventMsgCountThreshold"
        },
        "guaranteedMsgingEventMsgSpoolFileCountThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventMsgSpoolFileCountThreshold"
        },
        "guaranteedMsgingEventMsgSpoolUsageThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventMsgSpoolUsageThreshold"
        },
        "guaranteedMsgingEventTransactedSessionCountThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventTransactedSessionCountThreshold"
        },
        "guaranteedMsgingEventTransactedSessionResourceCountThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventTransactedSessionResourceCountThreshold"
        },
        "guaranteedMsgingEventTransactionCountThreshold": {
          "$ref": "#/definitions/BrokerGuaranteedMsgingEventTransactionCountThreshold"
        },
        "guaranteedMsgingMaxCacheUsage": {
          "description": "Guaranteed messaging cache usage limit. Expressed as a maximum percentage of the NAB's egress queueing. resources that the guaranteed message cache is allowed to use.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedMsgingMaxMsgSpoolUsage": {
          "description": "The maximum total message spool usage allowed across all VPNs on this broker, in megabytes. Recommendation: the maximum value should be less than 90% of the disk space allocated for the guaranteed message spool.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout": {
          "description": "The maximum time, in milliseconds, that can be tolerated for remote acknowledgment of synchronization messages before which the remote system will be considered out of sync.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout": {
          "description": "The maximum time, in milliseconds, that can be tolerated for remote disk writes before which the remote system will be considered out of sync.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "guaranteedMsgingOperationalStatus": {
          "description": "Operational status of guaranteed messaging.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"disabled\" - The operational status of guaranteed messaging is Disabled.\n\"not-ready\" - The operational status of guaranteed messaging is Not Ready.\n\"standby\" - The operational status of guaranteed messaging is Standby.\n\"activating\" - The operational status of guaranteed messaging is Activating.\n\"active\" - The operational status of guaranteed messaging is Active.\n</pre>\n Available since 2.18.",
          "type": "string"
        },
        "guaranteedMsgingTransactionReplicationCompatibilityMode": {
          "description": "The replication compatibility mode for the broker. The default value is `\"legacy\"`. The allowed values and their meaning are:\"legacy\" - All transactions originated by clients are replicated to the standby site without using transactions.\"transacted\" - All transactions originated by clients are replicated to the standby site using transactions.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"legacy\" - All transactions originated by clients are replicated to the standby site without using transactions.\n\"transacted\" - All transactions originated by clients are replicated to the standby site using transactions.\n</pre>\n Available since 2.18.",
          "enum": [
            "legacy",
            "transacted"
          ],
          "type": "string"
        },
        "kafkaBrokerConnectionCount": {
          "description": "The number of connections to Kafka brokers.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.39.",
          "format": "int32",
          "type": "integer"
        },
        "maxKafkaBridgeCount": {
          "description": "The maximum number of Kafka Bridges (Senders + Receivers) allowed.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.39.",
          "format": "int32",
          "type": "integer"
        },
        "maxKafkaBrokerConnectionCount": {
          "description": "The maximum number of connections to Kafka Brokers allowed.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.39.",
          "format": "int32",
          "type": "integer"
        },
        "oauthProfileDefault": {
          "description": "The default OAuth profile for OAuth authenticated SEMP requests.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.24.",
          "type": "string"
        },
        "rxByteCount": {
          "description": "The amount of messages received from clients by the Broker, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "rxByteRate": {
          "description": "The current message rate received by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "rxCompressedByteCount": {
          "description": "The amount of compressed messages received by the Broker, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "rxCompressedByteRate": {
          "description": "The current compressed message rate received by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "rxCompressionRatio": {
          "description": "The compression ratio for messages received by the Broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "type": "string"
        },
        "rxMsgCount": {
          "description": "The number of messages received from clients by the Broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgRate": {
          "description": "The current message rate received by the Broker, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "rxUncompressedByteCount": {
          "description": "The amount of uncompressed messages received by the Broker, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "rxUncompressedByteRate": {
          "description": "The current uncompressed message rate received by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "serviceAmqpEnabled": {
          "description": "Enable or disable the AMQP service. When disabled new AMQP Clients may not connect through the global or per-VPN AMQP listen-ports, and all currently connected AMQP Clients are immediately disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceAmqpTlsListenPort": {
          "description": "TCP port number that AMQP clients can use to connect to the broker using raw TCP over TLS.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceEventConnectionCountThreshold": {
          "$ref": "#/definitions/BrokerServiceEventConnectionCountThreshold"
        },
        "serviceHealthCheckEnabled": {
          "description": "Enable or disable the plain-text health-check service.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceHealthCheckListenPort": {
          "description": "The port number for the plain-text health-check service. The port must be unique across the message backbone. The health-check service must be disabled to change the port.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceHealthCheckTlsEnabled": {
          "description": "Enable or disable the TLS health-check service.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.34.",
          "type": "boolean"
        },
        "serviceHealthCheckTlsListenPort": {
          "description": "The port number for the TLS health-check service. The port must be unique across the message backbone. The health-check service must be disabled to change the port.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.34.",
          "format": "int64",
          "type": "integer"
        },
        "serviceMateLinkEnabled": {
          "description": "Enable or disable the mate-link service.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceMateLinkListenPort": {
          "description": "The port number for the mate-link service. The port must be unique across the message backbone. The mate-link service must be disabled to change the port.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceMqttEnabled": {
          "description": "Enable or disable the MQTT service. When disabled new MQTT Clients may not connect through the per-VPN MQTT listen-ports, and all currently connected MQTT Clients are immediately disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceMsgBackboneEnabled": {
          "description": "Enable or disable the msg-backbone service. When disabled new Clients may not connect through global or per-VPN listen-ports, and all currently connected Clients are immediately disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceRedundancyEnabled": {
          "description": "Enable or disable the redundancy service.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceRedundancyFirstListenPort": {
          "description": "The first listen-port used for the redundancy service. Redundancy uses this port and the subsequent 2 ports. These port must be unique across the message backbone. The redundancy service must be disabled to change this port.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceRestEventOutgoingConnectionCountThreshold": {
          "$ref": "#/definitions/BrokerServiceRestEventOutgoingConnectionCountThreshold"
        },
        "serviceRestIncomingEnabled": {
          "description": "Enable or disable the REST service incoming connections on the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceRestOutgoingEnabled": {
          "description": "Enable or disable the REST service outgoing connections on the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceSempCorsAllowAnyHostEnabled": {
          "description": "Enable or disable cross origin resource requests for the SEMP service.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.24.",
          "type": "boolean"
        },
        "serviceSempLegacyTimeoutEnabled": {
          "description": "Enable or disable extended SEMP timeouts for paged responses. When a request times out, it returns the current page of content, even if the page is not full.  When enabled, the timeout is 60 seconds. When disabled, the timeout is 5 seconds.  The recommended setting is disabled (no legacy-timeout).  This parameter is intended as a temporary workaround to be used until SEMP clients can handle short pages.  This setting will be removed in a future release.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "type": "boolean"
        },
        "serviceSempPlainTextEnabled": {
          "description": "Enable or disable plain-text SEMP service.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceSempPlainTextListenPort": {
          "description": "The TCP port for plain-text SEMP client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceSempSessionIdleTimeout": {
          "description": "The session idle timeout, in minutes. Sessions will be invalidated if there is no activity in this period of time.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.21.",
          "format": "int32",
          "type": "integer"
        },
        "serviceSempSessionMaxLifetime": {
          "description": "The maximum lifetime of a session, in minutes. Sessions will be invalidated after this period of time, regardless of activity.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.21.",
          "format": "int32",
          "type": "integer"
        },
        "serviceSempTlsEnabled": {
          "description": "Enable or disable TLS SEMP service.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceSempTlsListenPort": {
          "description": "The TCP port for TLS SEMP client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceSmfCompressionListenPort": {
          "description": "TCP port number that SMF clients can use to connect to the broker using raw compression TCP.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceSmfEnabled": {
          "description": "Enable or disable the SMF service. When disabled new SMF Clients may not connect through the global listen-ports, and all currently connected SMF Clients are immediately disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceSmfEventConnectionCountThreshold": {
          "$ref": "#/definitions/BrokerServiceSmfEventConnectionCountThreshold"
        },
        "serviceSmfPlainTextListenPort": {
          "description": "TCP port number that SMF clients can use to connect to the broker using raw TCP.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceSmfRoutingControlListenPort": {
          "description": "TCP port number that SMF clients can use to connect to the broker using raw routing control TCP.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceSmfTlsListenPort": {
          "description": "TCP port number that SMF clients can use to connect to the broker using raw TCP over TLS.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceTlsEventConnectionCountThreshold": {
          "$ref": "#/definitions/BrokerServiceTlsEventConnectionCountThreshold"
        },
        "serviceWebTransportEnabled": {
          "description": "Enable or disable the web-transport service. When disabled new web-transport Clients may not connect through the global listen-ports, and all currently connected web-transport Clients are immediately disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "serviceWebTransportPlainTextListenPort": {
          "description": "The TCP port for plain-text WEB client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceWebTransportTlsListenPort": {
          "description": "The TCP port for TLS WEB client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "format": "int64",
          "type": "integer"
        },
        "serviceWebTransportWebUrlSuffix": {
          "description": "Used to specify the Web URL suffix that will be used by Web clients when communicating with the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "string"
        },
        "telemetryTraceDemoExpiryTime": {
          "description": "Indicates when the tracing demo will expire or has expired. When the tracing demo expires, tracing becomes inactive. For more details related to terms, demo mode extension, and purchase, please see: https://solace.com/dt-demo-mode.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.31.",
          "format": "int32",
          "type": "integer"
        },
        "telemetryTraceDemoState": {
          "description": "Indicates whether the tracing demo is ready to be activated, active, or inactive. For more details related to the tracing demo, please see: https://solace.com/dt-demo-mode.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"active\" - The tracing demo is active. The demo expiry time indicates when tracing will become inactive if tracing is not licensed or the broker is not restarted before then. For more details related to terms, demo mode extension, and purchase, please see: https://solace.com/dt-demo-mode.\n\"inactive\" - The tracing demo is not active either because tracing is licensed, thereby enabling continuous tracing operation; or the tracing demo mode is not available on this broker.\n\"inactive-restart-required\" - The tracing demo mode was active, but the expiry time was reached without the installation of a tracing product key or a broker restart. Obtain a license and install the provided product key to enable continuous operation of tracing. Alternatively, restart the broker to reactivate tracing in demo mode. For more details related to terms, demo mode extension, and purchase, please see: https://solace.com/dt-demo-mode.\n\"ready\" - The broker is capable of providing tracing functionality in demo mode. To activate the demo, simply enable tracing. For more details related to terms, demo mode extension, and purchase, please see: https://solace.com/dt-demo-mode.\n</pre>\n Available since 2.31.",
          "type": "string"
        },
        "telemetryTraceMode": {
          "description": "Indicates whether tracing is licensed, requires a license, or is in demo mode. Installing a tracing product key results in licensed mode.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"demo\" - The free tracing demo mode allows for evaluation of tracing before purchasing a license. Please see https://solace.com/dt-demo-mode for more details.\n\"inactive-license-required\" - A tracing license is required for tracing to become operational.\n\"licensed\" - A tracing product key has been installed, enabling continuous operation of tracing.\n</pre>\n Available since 2.31.",
          "type": "string"
        },
        "tlsBlockVersion11Enabled": {
          "description": "Enable or disable the blocking of TLS version 1.1 connections. When blocked, all existing incoming and outgoing TLS 1.1 connections with Clients, SEMP users, and LDAP servers remain connected while new connections are blocked. Note that support for TLS 1.1 will eventually be discontinued, at which time TLS 1.1 connections will be blocked regardless of this setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "tlsCipherSuiteManagementDefaultList": {
          "description": "The colon-separated list of default cipher suites for TLS management connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "tlsCipherSuiteManagementList": {
          "description": "The colon-separated list of cipher suites used for TLS management connections (e.g. SEMP, LDAP). The value \"default\" implies all supported suites ordered from most secure to least secure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "tlsCipherSuiteManagementSupportedList": {
          "description": "The colon-separated list of supported cipher suites for TLS management connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "tlsCipherSuiteMsgBackboneDefaultList": {
          "description": "The colon-separated list of default cipher suites for TLS data connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "tlsCipherSuiteMsgBackboneList": {
          "description": "The colon-separated list of cipher suites used for TLS data connections (e.g. client pub/sub). The value \"default\" implies all supported suites ordered from most secure to least secure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "tlsCipherSuiteMsgBackboneSupportedList": {
          "description": "The colon-separated list of supported cipher suites for TLS data connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "tlsCipherSuiteSecureShellDefaultList": {
          "description": "The colon-separated list of default cipher suites for TLS secure shell connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "tlsCipherSuiteSecureShellList": {
          "description": "The colon-separated list of cipher suites used for TLS secure shell connections (e.g. SSH, SFTP, SCP). The value \"default\" implies all supported suites ordered from most secure to least secure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "tlsCipherSuiteSecureShellSupportedList": {
          "description": "The colon-separated list of supported cipher suites for TLS secure shell connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "tlsCrimeExploitProtectionEnabled": {
          "description": "Enable or disable protection against the CRIME exploit. When enabled, TLS+compressed messaging performance is degraded. This protection should only be disabled if sufficient ACL and authentication features are being employed such that a potential attacker does not have sufficient access to trigger the exploit.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "tlsStandardDomainCertificateAuthoritiesEnabled": {
          "description": "Enable or disable the standard domain certificate authority list.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "boolean"
        },
        "tlsTicketLifetime": {
          "description": "The TLS ticket lifetime in seconds. When a client connects with TLS, a session with a session ticket is created using the TLS ticket lifetime which determines how long the client has to resume the session.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.45. This attribute had been deprecated. TLS session tickets are no longer supported.",
          "format": "int32",
          "type": "integer"
        },
        "tlsVersionSupportedList": {
          "description": "The comma-separated list of supported TLS versions.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "txByteCount": {
          "description": "The amount of messages transmitted to clients by the Broker, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "txByteRate": {
          "description": "The current message rate transmitted by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "txCompressedByteCount": {
          "description": "The amount of compressed messages transmitted by the Broker, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "txCompressedByteRate": {
          "description": "The current compressed message rate transmitted by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "txCompressionRatio": {
          "description": "The compression ratio for messages transmitted by the Broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "type": "string"
        },
        "txMsgCount": {
          "description": "The number of messages transmitted to clients by the Broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "txMsgRate": {
          "description": "The current message rate transmitted by the Broker, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "txUncompressedByteCount": {
          "description": "The amount of uncompressed messages transmitted by the Broker, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "txUncompressedByteRate": {
          "description": "The current uncompressed message rate transmitted by the Broker, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "version": {
          "description": "The version of the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/none\". Available since 2.29.",
          "type": "string"
        },
        "webManagerAllowUnencryptedWizardsEnabled": {
          "description": "Enable or disable the use of unencrypted wizards in the Web-based Manager UI. This setting should be left at its default on all production systems or other systems that need to be secure.  Enabling this option will permit the broker to forward plain-text data to other brokers, making important information or credentials available for snooping.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.28.",
          "type": "boolean"
        },
        "webManagerCustomization": {
          "description": "Reserved for internal use by Solace.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "type": "string"
        },
        "webManagerRedirectHttpEnabled": {
          "description": "Enable or disable redirection of HTTP requests for the broker manager to HTTPS.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.24.",
          "type": "boolean"
        },
        "webManagerRedirectHttpLastFailureReason": {
          "description": "The reason for the last transition to a \"Down\" operational status. On transitions to the \"Up\" operational status this value is cleared.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.24.",
          "type": "string"
        },
        "webManagerRedirectHttpOverrideTlsPort": {
          "description": "The HTTPS port that HTTP requests will be redirected towards in a HTTP 301 redirect response. Zero is a special value that means use the value specified for the SEMP TLS port value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.24.",
          "format": "int32",
          "type": "integer"
        },
        "webManagerRedirectHttpUp": {
          "description": "Indicates whether the HTTP redirects will operationally occur. \"True\" indicates the facility is Up and redirects will occur, otherwise it is Down. When \"False\" the webManagerRedirectHttpLastFailureReason will provide further detail.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.24.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BrokerCollections": {
      "properties": {
        "certAuthorities": {
          "$ref": "#/definitions/BrokerCollectionsCertAuthorities"
        },
        "clientCertAuthorities": {
          "$ref": "#/definitions/BrokerCollectionsClientCertAuthorities"
        },
        "configSyncLocalDatabaseRows": {
          "$ref": "#/definitions/BrokerCollectionsConfigSyncLocalDatabaseRows"
        },
        "dmrClusters": {
          "$ref": "#/definitions/BrokerCollectionsDmrClusters"
        },
        "domainCertAuthorities": {
          "$ref": "#/definitions/BrokerCollectionsDomainCertAuthorities"
        },
        "msgVpns": {
          "$ref": "#/definitions/BrokerCollectionsMsgVpns"
        },
        "oauthProfiles": {
          "$ref": "#/definitions/BrokerCollectionsOauthProfiles"
        },
        "proxies": {
          "$ref": "#/definitions/BrokerCollectionsProxies"
        },
        "sessions": {
          "$ref": "#/definitions/BrokerCollectionsSessions"
        },
        "standardDomainCertAuthorities": {
          "$ref": "#/definitions/BrokerCollectionsStandardDomainCertAuthorities"
        },
        "virtualHostnames": {
          "$ref": "#/definitions/BrokerCollectionsVirtualHostnames"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsCertAuthorities": {
      "properties": {
        "count": {
          "description": "The total number of objects in the certAuthorities collection. Deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsClientCertAuthorities": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clientCertAuthorities collection. Available since 2.19.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsConfigSyncLocalDatabaseRows": {
      "properties": {
        "count": {
          "description": "The total number of objects in the configSyncLocalDatabaseRows collection. Available since 2.22.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsDmrClusters": {
      "properties": {
        "count": {
          "description": "The total number of objects in the dmrClusters collection. Available since 2.11.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsDomainCertAuthorities": {
      "properties": {
        "count": {
          "description": "The total number of objects in the domainCertAuthorities collection. Available since 2.19.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsMsgVpns": {
      "properties": {
        "count": {
          "description": "The total number of objects in the msgVpns collection. Available since 2.11.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsOauthProfiles": {
      "properties": {
        "count": {
          "description": "The total number of objects in the oauthProfiles collection. Available since 2.24.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsProxies": {
      "properties": {
        "count": {
          "description": "The total number of objects in the proxies collection. Available since 2.41.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsSessions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the sessions collection. Available since 2.21.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsStandardDomainCertAuthorities": {
      "properties": {
        "count": {
          "description": "The total number of objects in the standardDomainCertAuthorities collection. Available since 2.19.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerCollectionsVirtualHostnames": {
      "properties": {
        "count": {
          "description": "The total number of objects in the virtualHostnames collection. Available since 2.17.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventCacheUsageThreshold": {
      "description": "The thresholds for the cache usage event at system level, relative to `guaranteedMsgingMaxCacheUsage`. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventDeliveredUnackedThreshold": {
      "description": "The thresholds for the number of delivered but unacknowledged messages event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventDiskUsageThreshold": {
      "description": "The thresholds for the active disk partition usage event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventEgressFlowCountThreshold": {
      "description": "The thresholds for the transmit flow count event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventEndpointCountThreshold": {
      "description": "The thresholds for the endpoints count event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventIngressFlowCountThreshold": {
      "description": "The thresholds for the receive flow count event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventMsgCountThreshold": {
      "description": "The thresholds for the spool message count event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventMsgSpoolFileCountThreshold": {
      "description": "The thresholds for the spool file count event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventMsgSpoolUsageThreshold": {
      "description": "The thresholds for the spool usage event at system level, relative to `maxSpoolUsage`. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventTransactedSessionCountThreshold": {
      "description": "The thresholds for the transacted sessions event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventTransactedSessionResourceCountThreshold": {
      "description": "The thresholds for the transacted session resources at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerGuaranteedMsgingEventTransactionCountThreshold": {
      "description": "The thresholds for the transactions event at system level, relative to the maximum system limit. Available since 2.18.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerLinks": {
      "properties": {
        "aboutUri": {
          "description": "The URI of this Broker's About object.",
          "type": "string"
        },
        "certAuthoritiesUri": {
          "description": "The URI of this Broker's collection of Certificate Authority objects. Deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "clientCertAuthoritiesUri": {
          "description": "The URI of this Broker's collection of Client Certificate Authority objects. Available since 2.19.",
          "type": "string"
        },
        "configSyncLocalDatabaseRowsUri": {
          "description": "The URI of this Broker's collection of Config Sync Local Database objects. Available since 2.22.",
          "type": "string"
        },
        "dmrClustersUri": {
          "description": "The URI of this Broker's collection of Cluster objects. Available since 2.11.",
          "type": "string"
        },
        "domainCertAuthoritiesUri": {
          "description": "The URI of this Broker's collection of Domain Certificate Authority objects. Available since 2.19.",
          "type": "string"
        },
        "msgVpnsUri": {
          "description": "The URI of this Broker's collection of Message VPN objects. Available since 2.11.",
          "type": "string"
        },
        "oauthProfilesUri": {
          "description": "The URI of this Broker's collection of OAuth Profile objects. Available since 2.24.",
          "type": "string"
        },
        "proxiesUri": {
          "description": "The URI of this Broker's collection of Proxy objects. Available since 2.41.",
          "type": "string"
        },
        "sessionsUri": {
          "description": "The URI of this Broker's collection of SEMP Session objects. Available since 2.21.",
          "type": "string"
        },
        "standardDomainCertAuthoritiesUri": {
          "description": "The URI of this Broker's collection of Standard Domain Certificate Authority objects. Available since 2.19.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Broker object.",
          "type": "string"
        },
        "virtualHostnamesUri": {
          "description": "The URI of this Broker's collection of Virtual Hostname objects. Available since 2.17.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BrokerResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/BrokerCollections"
        },
        "data": {
          "$ref": "#/definitions/Broker"
        },
        "links": {
          "$ref": "#/definitions/BrokerLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "BrokerServiceEventConnectionCountThreshold": {
      "description": "The thresholds for the connection count event. Available since 2.17.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerServiceRestEventOutgoingConnectionCountThreshold": {
      "description": "The thresholds for the REST outgoing connection count event. Available since 2.17.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerServiceSmfEventConnectionCountThreshold": {
      "description": "The thresholds for the SMF connection count event. Available since 2.17.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BrokerServiceTlsEventConnectionCountThreshold": {
      "description": "The thresholds for the incoming and outgoing TLS connection count event of the broker. Available since 2.17.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CertAuthoritiesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/CertAuthorityCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/CertAuthority"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/CertAuthorityLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "CertAuthority": {
      "properties": {
        "certAuthorityName": {
          "description": "The name of the Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "certContent": {
          "description": "The PEM formatted content for the trusted root certificate of a Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "crlDayList": {
          "description": "The scheduled CRL refresh day(s), specified as \"daily\" or a comma-separated list of days. Days must be specified as \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces, and in sorted order from Sunday to Saturday.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "crlLastDownloadTime": {
          "description": "The timestamp of the last successful CRL download.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "format": "int32",
          "type": "integer"
        },
        "crlLastFailureReason": {
          "description": "The reason for the last CRL failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "crlLastFailureTime": {
          "description": "The timestamp of the last CRL failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "format": "int32",
          "type": "integer"
        },
        "crlNextDownloadTime": {
          "description": "The scheduled time of the next CRL download.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "format": "int32",
          "type": "integer"
        },
        "crlTimeList": {
          "description": "The scheduled CRL refresh time(s), specified as \"hourly\" or a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There must be no spaces, and times must be in sorted order from 0:00 to 23:59.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "crlUp": {
          "description": "Indicates whether CRL revocation checking is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "boolean"
        },
        "crlUrl": {
          "description": "The URL for the CRL source. This is a required attribute for CRL to be operational and the URL must be complete with http:// included. IPv6 addresses must be enclosed in square-brackets.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "ocspLastFailureReason": {
          "description": "The reason for the last OCSP failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "ocspLastFailureTime": {
          "description": "The timestamp of the last OCSP failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "format": "int32",
          "type": "integer"
        },
        "ocspLastFailureUrl": {
          "description": "The URL involved in the last OCSP failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "ocspNonResponderCertEnabled": {
          "description": "Enable or disable allowing a non-responder certificate to sign an OCSP response. Typically used with an OCSP override URL in cases where a single certificate is used to sign client certificates and OCSP responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "boolean"
        },
        "ocspOverrideUrl": {
          "description": "The OCSP responder URL to use for overriding the one supplied in the client certificate. The URL must be complete with http:// included.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "string"
        },
        "ocspTimeout": {
          "description": "The timeout in seconds to receive a response from the OCSP responder after sending a request or making the initial connection attempt.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "format": "int64",
          "type": "integer"
        },
        "revocationCheckEnabled": {
          "description": "Enable or disable Certificate Authority revocation checking.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CertAuthorityCollections": {
      "properties": {
        "ocspTlsTrustedCommonNames": {
          "$ref": "#/definitions/CertAuthorityCollectionsOcspTlsTrustedCommonNames"
        }
      },
      "type": "object"
    },
    "CertAuthorityCollectionsOcspTlsTrustedCommonNames": {
      "properties": {
        "count": {
          "description": "The total number of objects in the ocspTlsTrustedCommonNames collection. Deprecated since 2.19. Replaced by clientCertAuthorities.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CertAuthorityLinks": {
      "properties": {
        "ocspTlsTrustedCommonNamesUri": {
          "description": "The URI of this Certificate Authority's collection of OCSP Responder Trusted Common Name objects. Deprecated since 2.19. Replaced by clientCertAuthorities.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Certificate Authority object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CertAuthorityOcspTlsTrustedCommonName": {
      "properties": {
        "certAuthorityName": {
          "description": "The name of the Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.19. Replaced by clientCertAuthorities.",
          "type": "string"
        },
        "ocspTlsTrustedCommonName": {
          "description": "The expected Trusted Common Name of the OCSP responder remote certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.19. Replaced by clientCertAuthorities.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CertAuthorityOcspTlsTrustedCommonNameCollections": {
      "properties": {},
      "type": "object"
    },
    "CertAuthorityOcspTlsTrustedCommonNameLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this OCSP Responder Trusted Common Name object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CertAuthorityOcspTlsTrustedCommonNameResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/CertAuthorityOcspTlsTrustedCommonNameCollections"
        },
        "data": {
          "$ref": "#/definitions/CertAuthorityOcspTlsTrustedCommonName"
        },
        "links": {
          "$ref": "#/definitions/CertAuthorityOcspTlsTrustedCommonNameLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "CertAuthorityOcspTlsTrustedCommonNamesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/CertAuthorityOcspTlsTrustedCommonNameCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/CertAuthorityOcspTlsTrustedCommonName"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/CertAuthorityOcspTlsTrustedCommonNameLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "CertAuthorityResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/CertAuthorityCollections"
        },
        "data": {
          "$ref": "#/definitions/CertAuthority"
        },
        "links": {
          "$ref": "#/definitions/CertAuthorityLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "ClientCertAuthoritiesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/ClientCertAuthorityCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/ClientCertAuthority"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/ClientCertAuthorityLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "ClientCertAuthority": {
      "properties": {
        "certAuthorityName": {
          "description": "The name of the Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "certContent": {
          "description": "The PEM formatted content for the trusted root certificate of a client Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "crlDayList": {
          "description": "The scheduled CRL refresh day(s), specified as \"daily\" or a comma-separated list of days. Days must be specified as \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces, and in sorted order from Sunday to Saturday. The empty-string (\"\") can also be specified, indicating no schedule is configured (\"crlTimeList\" must also be configured to the empty-string).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "crlLastDownloadTime": {
          "description": "The timestamp of the last successful CRL download.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "crlLastFailureReason": {
          "description": "The reason for the last CRL failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "crlLastFailureTime": {
          "description": "The timestamp of the last CRL failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "crlNextDownloadTime": {
          "description": "The scheduled time of the next CRL download.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "crlTimeList": {
          "description": "The scheduled CRL refresh time(s), specified as \"hourly\" or a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There must be no spaces, and times (up to 4) must be in sorted order from 0:00 to 23:59. The empty-string (\"\") can also be specified, indicating no schedule is configured (\"crlDayList\" must also be configured to the empty-string).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "crlUp": {
          "description": "Indicates whether CRL revocation checking is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "boolean"
        },
        "crlUrl": {
          "description": "The URL for the CRL source. This is a required attribute for CRL to be operational and the URL must be complete with http:// included. IPv6 addresses must be enclosed in square-brackets.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "ocspLastFailureReason": {
          "description": "The reason for the last OCSP failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "ocspLastFailureTime": {
          "description": "The timestamp of the last OCSP failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "ocspLastFailureUrl": {
          "description": "The URL involved in the last OCSP failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "ocspNonResponderCertEnabled": {
          "description": "Enable or disable allowing a non-responder certificate to sign an OCSP response. Typically used with an OCSP override URL in cases where a single certificate is used to sign client certificates and OCSP responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "ocspOverrideUrl": {
          "description": "The OCSP responder URL to use for overriding the one supplied in the client certificate. The URL must be complete with http:// included.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "ocspTimeout": {
          "description": "The timeout in seconds to receive a response from the OCSP responder after sending a request or making the initial connection attempt.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "revocationCheckEnabled": {
          "description": "Enable or disable Certificate Authority revocation checking.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ClientCertAuthorityCollections": {
      "properties": {
        "ocspTlsTrustedCommonNames": {
          "$ref": "#/definitions/ClientCertAuthorityCollectionsOcspTlsTrustedCommonNames"
        }
      },
      "type": "object"
    },
    "ClientCertAuthorityCollectionsOcspTlsTrustedCommonNames": {
      "properties": {
        "count": {
          "description": "The total number of objects in the ocspTlsTrustedCommonNames collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ClientCertAuthorityLinks": {
      "properties": {
        "ocspTlsTrustedCommonNamesUri": {
          "description": "The URI of this Client Certificate Authority's collection of OCSP Responder Trusted Common Name objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Client Certificate Authority object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClientCertAuthorityOcspTlsTrustedCommonName": {
      "properties": {
        "certAuthorityName": {
          "description": "The name of the Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "ocspTlsTrustedCommonName": {
          "description": "The expected Trusted Common Name of the OCSP responder remote certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClientCertAuthorityOcspTlsTrustedCommonNameCollections": {
      "properties": {},
      "type": "object"
    },
    "ClientCertAuthorityOcspTlsTrustedCommonNameLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this OCSP Responder Trusted Common Name object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClientCertAuthorityOcspTlsTrustedCommonNameResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/ClientCertAuthorityOcspTlsTrustedCommonNameCollections"
        },
        "data": {
          "$ref": "#/definitions/ClientCertAuthorityOcspTlsTrustedCommonName"
        },
        "links": {
          "$ref": "#/definitions/ClientCertAuthorityOcspTlsTrustedCommonNameLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "ClientCertAuthorityOcspTlsTrustedCommonNamesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/ClientCertAuthorityOcspTlsTrustedCommonNameCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/ClientCertAuthorityOcspTlsTrustedCommonName"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/ClientCertAuthorityOcspTlsTrustedCommonNameLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "ClientCertAuthorityResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/ClientCertAuthorityCollections"
        },
        "data": {
          "$ref": "#/definitions/ClientCertAuthority"
        },
        "links": {
          "$ref": "#/definitions/ClientCertAuthorityLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "ConfigSyncLocalDatabaseRow": {
      "properties": {
        "lastRequest": {
          "description": "The last series of commands exchanged between Config Sync sites. Note that this value is only updated during transitions to any syncStatus that is not \"in-sync\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastResult": {
          "description": "The result of the last exchange between Config Sync sites.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "name": {
          "description": "The name is \"site\" when the row type is \"router\", otherwise it is the Message VPN name.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "role": {
          "description": "The row's role relative to the local broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"unknown\" - The role is unknown.\n\"leader\" - In HA deployments, the role of the event broker and Message VPNs in the Config Sync database of both HA mates is always Leader.\n\"follower\" - Only replication-enabled Message VPNs on standby replication mates can have a Follower role.\n</pre>\n",
          "type": "string"
        },
        "syncStatus": {
          "description": "The synchronization status of the row.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"unknown\" - The state is unknown.\n\"in-sync\" - The config data is synchronized between Message VPNs.\n\"reconciling\" - The config data is reconciling between Message VPNs.\n\"blocked\" - The config data is blocked from reconciling due to an error.\n\"out-of-sync\" - The config data is out of sync between Message VPNs.\n\"down\" - The state is down due to configuration.\n</pre>\n",
          "type": "string"
        },
        "timeInState": {
          "description": "The amount of time this row has remained in the shown syncStatus, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "The type of the row. Can be one of \"router\" or \"vpn\". There is one \"router\" row and one row for each configured \"vpn\". Each row represents a table of information that is synchronized between Config Sync and replication mates.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"router\" - The Config Sync database row is for the Router.\n\"vpn\" - The Config Sync database row is for a Message VPN.\n</pre>\n",
          "enum": [
            "router",
            "vpn"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConfigSyncLocalDatabaseRowCollections": {
      "properties": {},
      "type": "object"
    },
    "ConfigSyncLocalDatabaseRowLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Config Sync Local Database object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConfigSyncLocalDatabaseRowResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/ConfigSyncLocalDatabaseRowCollections"
        },
        "data": {
          "$ref": "#/definitions/ConfigSyncLocalDatabaseRow"
        },
        "links": {
          "$ref": "#/definitions/ConfigSyncLocalDatabaseRowLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "ConfigSyncLocalDatabaseRowsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/ConfigSyncLocalDatabaseRowCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/ConfigSyncLocalDatabaseRow"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/ConfigSyncLocalDatabaseRowLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrCluster": {
      "properties": {
        "authenticationBasicEnabled": {
          "description": "Enable or disable basic authentication for Cluster Links.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "authenticationBasicType": {
          "description": "The type of basic authentication to use for Cluster Links.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"internal\" - Use locally configured password.\n\"none\" - No authentication.\n</pre>\n",
          "enum": [
            "internal",
            "none"
          ],
          "type": "string"
        },
        "authenticationClientCertEnabled": {
          "description": "Enable or disable client certificate authentication for Cluster Links.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "directOnlyEnabled": {
          "description": "Enable or disable direct messaging only. Guaranteed messages will not be transmitted through the cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "boolean"
        },
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "failureReason": {
          "description": "The failure reason for the Cluster being down.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "nodeName": {
          "description": "The name of this node in the Cluster. This is the name that this broker (or redundant group of brokers) is know by to other nodes in the Cluster. The name is chosen automatically to be either this broker's Router Name or Mate Router Name, depending on which Active Standby Role (primary or backup) this broker plays in its redundancy group.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "subscriptionDbBuildPercentage": {
          "description": "Cluster Subscription Database build completion percentage.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.20.",
          "format": "int64",
          "type": "integer"
        },
        "syncComplete": {
          "description": "Indicates whether the Cluster Sync is complete for all Router Names.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.45.",
          "type": "boolean"
        },
        "tlsServerCertEnforceTrustedCommonNameEnabled": {
          "description": "Enable or disable the enforcing of the common name provided by the remote broker against the list of trusted common names configured for the Link. If enabled, the certificate's common name must match one of the trusted common names for the Link to be accepted. Common Name validation is not performed if Server Certificate Name Validation is enabled, even if Common Name validation is enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "boolean"
        },
        "tlsServerCertMaxChainDepth": {
          "description": "The maximum allowed depth of a certificate chain. The depth of a chain is defined as the number of signing CA certificates that are present in the chain back to a trusted self-signed root CA certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "tlsServerCertValidateDateEnabled": {
          "description": "Enable or disable the validation of the \"Not Before\" and \"Not After\" validity dates in the certificate. When disabled, the certificate is accepted even if the certificate is not valid based on these dates.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "tlsServerCertValidateNameEnabled": {
          "description": "Enable or disable the standard TLS authentication mechanism of verifying the name used to connect to the bridge. If enabled, the name used to connect to the bridge is checked against the names specified in the certificate returned by the remote broker. Legacy Common Name validation is not performed if Server Certificate Name Validation is enabled, even if Common Name validation is also enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "type": "boolean"
        },
        "up": {
          "description": "Indicates whether the Cluster is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "boolean"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Cluster was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRule": {
      "properties": {
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable a certificate matching rule.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "ruleName": {
          "description": "The name of the rule.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleAttributeFilter": {
      "properties": {
        "attributeName": {
          "description": "Link Attribute to be tested.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "attributeValue": {
          "description": "Expected attribute value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "filterName": {
          "description": "The name of the filter.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "ruleName": {
          "description": "The name of the rule.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleAttributeFilterCollections": {
      "properties": {},
      "type": "object"
    },
    "DmrClusterCertMatchingRuleAttributeFilterLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Certificate Matching Rule Attribute Filter object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleAttributeFilterResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleAttributeFilterCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleAttributeFilter"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleAttributeFilterLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterCertMatchingRuleAttributeFiltersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRuleAttributeFilterCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRuleAttributeFilter"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRuleAttributeFilterLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterCertMatchingRuleCollections": {
      "properties": {
        "attributeFilters": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleCollectionsAttributeFilters"
        },
        "conditions": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleCollectionsConditions"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleCollectionsAttributeFilters": {
      "properties": {
        "count": {
          "description": "The total number of objects in the attributeFilters collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleCollectionsConditions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the conditions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleCondition": {
      "properties": {
        "attribute": {
          "description": "Link Attribute to be compared with certificate content. Either an attribute or an expression must be provided on creation, but not both.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "comparisonMode": {
          "description": "The comparison mode to use.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"matches-attribute\" - Certificate field matches an attribute value exactly.\n\"matches-expression\" - Certificate field matches a glob expression.\n</pre>\n",
          "type": "string"
        },
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "expression": {
          "description": "Glob expression to be matched with certificate content. Either an expression or an attribute must be provided on creation, but not both.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "ruleName": {
          "description": "The name of the rule.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "source": {
          "description": "Certificate field to be compared with the Attribute.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"certificate-thumbprint\" - The attribute is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.\n\"common-name\" - The attribute is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.\n\"common-name-last\" - The attribute is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.\n\"subject-alternate-name-msupn\" - The attribute is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.\n\"uid\" - The attribute is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.\n\"uid-last\" - The attribute is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.\n\"org-unit\" - The attribute is extracted from the certificate's first instance of the Org Unit attribute in the Subject DN.\n\"org-unit-last\" - The attribute is extracted from the certificate's last instance of the Org Unit attribute in the Subject DN.\n\"issuer\" - The attribute is extracted from the certificate's Issuer DN.\n\"subject\" - The attribute is extracted from the certificate's Subject DN.\n\"serial-number\" - The attribute is extracted from the certificate's Serial Number.\n\"dns-name\" - The attribute is extracted from the certificate's Subject Alt Name DNS Name.\n\"ip-address\" - The attribute is extracted from the certificate's Subject Alt Name IP Address.\n</pre>\n",
          "enum": [
            "certificate-thumbprint",
            "common-name",
            "common-name-last",
            "subject-alternate-name-msupn",
            "uid",
            "uid-last",
            "org-unit",
            "org-unit-last",
            "issuer",
            "subject",
            "serial-number",
            "dns-name",
            "ip-address"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleConditionCollections": {
      "properties": {},
      "type": "object"
    },
    "DmrClusterCertMatchingRuleConditionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Certificate Matching Rule Condition object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleConditionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleConditionCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleCondition"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleConditionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterCertMatchingRuleConditionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRuleConditionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRuleCondition"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRuleConditionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterCertMatchingRuleLinks": {
      "properties": {
        "attributeFiltersUri": {
          "description": "The URI of this Certificate Matching Rule's collection of Certificate Matching Rule Attribute Filter objects.",
          "type": "string"
        },
        "conditionsUri": {
          "description": "The URI of this Certificate Matching Rule's collection of Certificate Matching Rule Condition objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Certificate Matching Rule object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterCertMatchingRuleResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterCertMatchingRule"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterCertMatchingRuleLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterCertMatchingRulesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRuleCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRule"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterCertMatchingRuleLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterCollections": {
      "properties": {
        "certMatchingRules": {
          "$ref": "#/definitions/DmrClusterCollectionsCertMatchingRules"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterCollectionsLinks"
        },
        "topologyIssues": {
          "$ref": "#/definitions/DmrClusterCollectionsTopologyIssues"
        }
      },
      "type": "object"
    },
    "DmrClusterCollectionsCertMatchingRules": {
      "properties": {
        "count": {
          "description": "The total number of objects in the certMatchingRules collection. Available since 2.28.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterCollectionsLinks": {
      "properties": {
        "count": {
          "description": "The total number of objects in the links collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterCollectionsTopologyIssues": {
      "properties": {
        "count": {
          "description": "The total number of objects in the topologyIssues collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterLink": {
      "properties": {
        "authenticationScheme": {
          "description": "The authentication scheme to be used by the Link which initiates connections to the remote node.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"basic\" - Basic Authentication Scheme (via username and password).\n\"client-certificate\" - Client Certificate Authentication Scheme (via certificate file or content).\n</pre>\n",
          "enum": [
            "basic",
            "client-certificate"
          ],
          "type": "string"
        },
        "authenticationSchemeSecure": {
          "description": "Indicates whether certificate matching rules are used.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.28.",
          "type": "boolean"
        },
        "clientProfileName": {
          "description": "The name of the Client Profile used by the Link.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "clientProfileQueueControl1MaxDepth": {
          "description": "The maximum depth of the \"Control 1\" (C-1) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueControl1MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Control 1\" (C-1) priority queue, regardless of the `clientProfileQueueControl1MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueDirect1MaxDepth": {
          "description": "The maximum depth of the \"Direct 1\" (D-1) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueDirect1MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Direct 1\" (D-1) priority queue, regardless of the `clientProfileQueueDirect1MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueDirect2MaxDepth": {
          "description": "The maximum depth of the \"Direct 2\" (D-2) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueDirect2MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Direct 2\" (D-2) priority queue, regardless of the `clientProfileQueueDirect2MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueDirect3MaxDepth": {
          "description": "The maximum depth of the \"Direct 3\" (D-3) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueDirect3MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Direct 3\" (D-3) priority queue, regardless of the `clientProfileQueueDirect3MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueGuaranteed1MaxDepth": {
          "description": "The maximum depth of the \"Guaranteed 1\" (G-1) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileQueueGuaranteed1MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Guaranteed 1\" (G-1) priority queue, regardless of the `clientProfileQueueGuaranteed1MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "clientProfileTcpCongestionWindowSize": {
          "description": "The TCP initial congestion window size, in multiples of the TCP Maximum Segment Size (MSS). Changing the value from its default of 2 results in non-compliance with RFC 2581. Contact support before changing this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clientProfileTcpKeepaliveCount": {
          "description": "The number of TCP keepalive retransmissions to be carried out before declaring that the remote end is not available.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clientProfileTcpKeepaliveIdleTime": {
          "description": "The amount of time a connection must remain idle before TCP begins sending keepalive probes, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clientProfileTcpKeepaliveInterval": {
          "description": "The amount of time between TCP keepalive retransmissions when no acknowledgment is received, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clientProfileTcpMaxSegmentSize": {
          "description": "The TCP maximum segment size, in bytes. Changes are applied to all existing connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clientProfileTcpMaxWindowSize": {
          "description": "The TCP maximum window size, in kilobytes. Changes are applied to all existing connections. This setting is ignored on the software broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "connectionRetryCount": {
          "description": "The number of retry attempts to establish a connection before moving on to the next remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.41.",
          "format": "int64",
          "type": "integer"
        },
        "connectionRetryDelay": {
          "description": "The number of seconds the broker waits for the bridge connection to be established before attempting a new connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.41.",
          "format": "int64",
          "type": "integer"
        },
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "egressFlowWindowSize": {
          "description": "The number of outstanding guaranteed messages that can be sent over the Link before acknowledgment is received by the sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "enabled": {
          "description": "Enable or disable the Link. When disabled, subscription sets of this and the remote node are not kept up-to-date, and messages are not exchanged with the remote node. Published guaranteed messages will be queued up for future delivery based on current subscription sets.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "failureReason": {
          "description": "The failure reason for the Link being down.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "initiator": {
          "description": "The initiator of the Link's TCP connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"lexical\" - The \"higher\" node-name initiates.\n\"local\" - The local node initiates.\n\"remote\" - The remote node initiates.\n</pre>\n",
          "enum": [
            "lexical",
            "local",
            "remote"
          ],
          "type": "string"
        },
        "queueDeadMsgQueue": {
          "description": "The name of the Dead Message Queue (DMQ) used by the Queue for discarded messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "queueEventSpoolUsageThreshold": {
          "$ref": "#/definitions/DmrClusterLinkQueueEventSpoolUsageThreshold"
        },
        "queueMaxDeliveredUnackedMsgsPerFlow": {
          "description": "The maximum number of messages delivered but not acknowledged per flow for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "queueMaxMsgSpoolUsage": {
          "description": "The maximum message spool usage by the Queue (quota), in megabytes (MB).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "queueMaxRedeliveryCount": {
          "description": "The maximum number of times the Queue will attempt redelivery of a message prior to it being discarded or moved to the DMQ. A value of 0 means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "queueMaxTtl": {
          "description": "The maximum time in seconds a message can stay in the Queue when `queueRespectTtlEnabled` is `true`. A message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queueMaxTtl` configured for the Queue, is exceeded. A value of 0 disables expiry.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "queueRejectMsgToSenderOnDiscardBehavior": {
          "description": "Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"never\" - Silently discard messages.\n\"when-queue-enabled\" - NACK each message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.\n\"always\" - NACK each message discard back to the client, including messages that are discarded because an endpoint is administratively disabled.\n</pre>\n",
          "enum": [
            "never",
            "when-queue-enabled",
            "always"
          ],
          "type": "string"
        },
        "queueRespectTtlEnabled": {
          "description": "Enable or disable the respecting of the time-to-live (TTL) for messages in the Queue. When enabled, expired messages are discarded or moved to the DMQ.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "remoteClusterName": {
          "description": "The cluster name of the remote node.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.17.",
          "type": "string"
        },
        "remoteNodeName": {
          "description": "The name of the node at the remote end of the Link.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "span": {
          "description": "The span of the Link, either internal or external. Internal Links connect nodes within the same Cluster. External Links connect nodes within different Clusters.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"internal\" - Link to same cluster.\n\"external\" - Link to other cluster.\n</pre>\n",
          "enum": [
            "internal",
            "external"
          ],
          "type": "string"
        },
        "transportCompressedEnabled": {
          "description": "Enable or disable compression on the Link.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "transportTlsEnabled": {
          "description": "Enable or disable encryption (TLS) on the Link.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "up": {
          "description": "Indicates whether the Link is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "boolean"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Link was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkAttribute": {
      "properties": {
        "attributeName": {
          "description": "The name of the Attribute.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "attributeValue": {
          "description": "The value of the Attribute.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "remoteNodeName": {
          "description": "The name of the node at the remote end of the Link.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkAttributeCollections": {
      "properties": {},
      "type": "object"
    },
    "DmrClusterLinkAttributeLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Link Attribute object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkAttributeResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterLinkAttributeCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterLinkAttribute"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterLinkAttributeLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinkAttributesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkAttributeCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkAttribute"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkAttributeLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinkChannel": {
      "properties": {
        "bridgeName": {
          "description": "The name of the Bridge used by the Channel.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "clientName": {
          "description": "The name of the Client used by the Channel.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "establisher": {
          "description": "Indicates whether the local node established the Channel.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "boolean"
        },
        "failureReason": {
          "description": "The failure reason for the Channel being down.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "queueName": {
          "description": "The name of the Queue used by the Channel.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "remoteAddress": {
          "description": "The FQDN or IP address (and optional port) of the remote node.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "remoteNodeName": {
          "description": "The name of the node at the remote end of the Link.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "up": {
          "description": "Indicates whether the Channel is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "boolean"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Channel was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkChannelCollections": {
      "properties": {},
      "type": "object"
    },
    "DmrClusterLinkChannelLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Cluster Link Channels object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkChannelResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterLinkChannelCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterLinkChannel"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterLinkChannelLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinkChannelsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkChannelCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkChannel"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkChannelLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinkCollections": {
      "properties": {
        "attributes": {
          "$ref": "#/definitions/DmrClusterLinkCollectionsAttributes"
        },
        "channels": {
          "$ref": "#/definitions/DmrClusterLinkCollectionsChannels"
        },
        "remoteAddresses": {
          "$ref": "#/definitions/DmrClusterLinkCollectionsRemoteAddresses"
        },
        "tlsTrustedCommonNames": {
          "$ref": "#/definitions/DmrClusterLinkCollectionsTlsTrustedCommonNames"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkCollectionsAttributes": {
      "properties": {
        "count": {
          "description": "The total number of objects in the attributes collection. Available since 2.28.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkCollectionsChannels": {
      "properties": {
        "count": {
          "description": "The total number of objects in the channels collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkCollectionsRemoteAddresses": {
      "properties": {
        "count": {
          "description": "The total number of objects in the remoteAddresses collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkCollectionsTlsTrustedCommonNames": {
      "properties": {
        "count": {
          "description": "The total number of objects in the tlsTrustedCommonNames collection. Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkLinks": {
      "properties": {
        "attributesUri": {
          "description": "The URI of this Link's collection of Link Attribute objects. Available since 2.28.",
          "type": "string"
        },
        "channelsUri": {
          "description": "The URI of this Link's collection of Cluster Link Channels objects.",
          "type": "string"
        },
        "remoteAddressesUri": {
          "description": "The URI of this Link's collection of Remote Address objects.",
          "type": "string"
        },
        "tlsTrustedCommonNamesUri": {
          "description": "The URI of this Link's collection of Trusted Common Name objects. Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Link object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkQueueEventSpoolUsageThreshold": {
      "description": "The thresholds for the message spool usage event of the Queue, relative to `queueMaxMsgSpoolUsage`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkRemoteAddress": {
      "properties": {
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "remoteAddress": {
          "description": "The FQDN or IP address (and optional port) of the remote node. If a port is not provided, it will vary based on the transport encoding: 55555 (plain-text), 55443 (encrypted), or 55003 (compressed).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "remoteNodeName": {
          "description": "The name of the node at the remote end of the Link.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkRemoteAddressCollections": {
      "properties": {},
      "type": "object"
    },
    "DmrClusterLinkRemoteAddressLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Remote Address object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkRemoteAddressResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterLinkRemoteAddressCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterLinkRemoteAddress"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterLinkRemoteAddressLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinkRemoteAddressesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkRemoteAddressCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkRemoteAddress"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkRemoteAddressLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinkResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterLinkCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterLink"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterLinkLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinkTlsTrustedCommonName": {
      "properties": {
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "remoteNodeName": {
          "description": "The name of the node at the remote end of the Link.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "tlsTrustedCommonName": {
          "description": "The expected trusted common name of the remote certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkTlsTrustedCommonNameCollections": {
      "properties": {},
      "type": "object"
    },
    "DmrClusterLinkTlsTrustedCommonNameLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Trusted Common Name object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinkTlsTrustedCommonNameResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterLinkTlsTrustedCommonNameCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterLinkTlsTrustedCommonName"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterLinkTlsTrustedCommonNameLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinkTlsTrustedCommonNamesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkTlsTrustedCommonNameCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkTlsTrustedCommonName"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkTlsTrustedCommonNameLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterLinks": {
      "properties": {
        "certMatchingRulesUri": {
          "description": "The URI of this Cluster's collection of Certificate Matching Rule objects. Available since 2.28.",
          "type": "string"
        },
        "linksUri": {
          "description": "The URI of this Cluster's collection of Link objects.",
          "type": "string"
        },
        "topologyIssuesUri": {
          "description": "The URI of this Cluster's collection of Cluster Topology Issue objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Cluster object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterLinksResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterLink"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinkLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrCluster"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterTopologyIssue": {
      "properties": {
        "dmrClusterName": {
          "description": "The name of the Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "topologyIssue": {
          "description": "The topology issue discovered in the Cluster. A topology issue indicates incorrect or inconsistent configuration within the DMR network. Such issues will cause messages to be undelivered or lost.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterTopologyIssueCollections": {
      "properties": {},
      "type": "object"
    },
    "DmrClusterTopologyIssueLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Cluster Topology Issue object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DmrClusterTopologyIssueResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DmrClusterTopologyIssueCollections"
        },
        "data": {
          "$ref": "#/definitions/DmrClusterTopologyIssue"
        },
        "links": {
          "$ref": "#/definitions/DmrClusterTopologyIssueLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClusterTopologyIssuesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterTopologyIssueCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrClusterTopologyIssue"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterTopologyIssueLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DmrClustersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DmrClusterCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DmrCluster"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DmrClusterLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DomainCertAuthoritiesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/DomainCertAuthorityCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DomainCertAuthority"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/DomainCertAuthorityLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "DomainCertAuthority": {
      "properties": {
        "certAuthorityName": {
          "description": "The name of the Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "certContent": {
          "description": "The PEM formatted content for the trusted root certificate of a domain Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DomainCertAuthorityCollections": {
      "properties": {},
      "type": "object"
    },
    "DomainCertAuthorityLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Domain Certificate Authority object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DomainCertAuthorityResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/DomainCertAuthorityCollections"
        },
        "data": {
          "$ref": "#/definitions/DomainCertAuthority"
        },
        "links": {
          "$ref": "#/definitions/DomainCertAuthorityLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpn": {
      "properties": {
        "alias": {
          "description": "The name of another Message VPN which this Message VPN is an alias for. When this Message VPN is enabled, the alias has no effect. When this Message VPN is disabled, Clients (but not Bridges and routing Links) logging into this Message VPN are automatically logged in to the other Message VPN, and authentication and authorization take place in the context of the other Message VPN.\n\nAliases may form a non-circular chain, cascading one to the next.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "type": "string"
        },
        "authenticationBasicEnabled": {
          "description": "Enable or disable basic authentication for clients connecting to the Message VPN. Basic authentication is authentication that involves the use of a username and password to prove identity. If a user provides credentials for a different authentication scheme, this setting is not applicable.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "authenticationBasicProfileName": {
          "description": "The name of the RADIUS or LDAP Profile to use for basic authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationBasicRadiusDomain": {
          "description": "The RADIUS domain to use for basic authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationBasicType": {
          "description": "The type of basic authentication to use for clients connecting to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"internal\" - Internal database. Authentication is against Client Usernames.\n\"ldap\" - LDAP authentication. An LDAP profile name must be provided.\n\"radius\" - RADIUS authentication. A RADIUS profile name must be provided.\n\"none\" - No authentication. Anonymous login allowed.\n</pre>\n",
          "enum": [
            "internal",
            "ldap",
            "radius",
            "none"
          ],
          "type": "string"
        },
        "authenticationClientCertAllowApiProvidedUsernameEnabled": {
          "description": "Enable or disable allowing an incoming client connection to specify a Client Username via the API connect method. When disabled, the certificate CN (Common Name) is always used.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "authenticationClientCertCertificateMatchingRulesEnabled": {
          "description": "Enable or disable certificate matching rules. When disabled, any valid certificate is accepted.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.27.",
          "type": "boolean"
        },
        "authenticationClientCertEnabled": {
          "description": "Enable or disable client certificate authentication for clients connecting to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "authenticationClientCertMaxChainDepth": {
          "description": "The maximum depth for a client certificate chain. The depth of a chain is defined as the number of signing CA certificates that are present in the chain back to a trusted self-signed root CA certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "authenticationClientCertRevocationCheckMode": {
          "description": "The desired behavior for client certificate revocation checking.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"allow-all\" - Allow the client to authenticate, the result of client certificate revocation check is ignored.\n\"allow-unknown\" - Allow the client to authenticate even if the revocation status of his certificate cannot be determined.\n\"allow-valid\" - Allow the client to authenticate only when the revocation check returned an explicit positive response.\n</pre>\n",
          "enum": [
            "allow-all",
            "allow-unknown",
            "allow-valid"
          ],
          "type": "string"
        },
        "authenticationClientCertUsernameSource": {
          "description": "The field from the client certificate to use as the client username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"certificate-thumbprint\" - The username is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.\n\"common-name\" - The username is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.\n\"common-name-last\" - The username is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.\n\"subject-alternate-name-msupn\" - The username is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.\n\"uid\" - The username is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.\n\"uid-last\" - The username is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.\n</pre>\n",
          "enum": [
            "certificate-thumbprint",
            "common-name",
            "common-name-last",
            "subject-alternate-name-msupn",
            "uid",
            "uid-last"
          ],
          "type": "string"
        },
        "authenticationClientCertValidateDateEnabled": {
          "description": "Enable or disable validation of the \"Not Before\" and \"Not After\" validity dates in the client certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "authenticationKerberosAllowApiProvidedUsernameEnabled": {
          "description": "Enable or disable allowing an incoming client connection to specify a Client Username via the API connect method. When disabled, the Kerberos Principal name is always used.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "authenticationKerberosEnabled": {
          "description": "Enable or disable Kerberos authentication for clients connecting to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "authenticationOauthDefaultProfileName": {
          "description": "The name of the profile to use when the client does not supply a profile name.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.25.",
          "type": "string"
        },
        "authenticationOauthDefaultProviderName": {
          "description": "The name of the provider to use when the client does not supply a provider name.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthDefaultProviderName and authenticationOauthProviders replaced by authenticationOauthDefaultProfileName and authenticationOauthProfiles.",
          "type": "string"
        },
        "authenticationOauthEnabled": {
          "description": "Enable or disable OAuth authentication for clients connecting to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.13.",
          "type": "boolean"
        },
        "authorizationLdapGroupMembershipAttributeName": {
          "description": "The name of the attribute that is retrieved from the LDAP server as part of the LDAP search when authorizing a client connecting to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authorizationLdapTrimClientUsernameDomainEnabled": {
          "description": "Enable or disable client-username domain trimming for LDAP lookups of client connections. When enabled, the value of $CLIENT_USERNAME (when used for searching) will be truncated at the first occurrence of the @ character. For example, if the client-username is in the form of an email address, then the domain portion will be removed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.13.",
          "type": "boolean"
        },
        "authorizationProfileName": {
          "description": "The name of the LDAP Profile to use for client authorization.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authorizationType": {
          "description": "The type of authorization to use for clients connecting to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"ldap\" - LDAP authorization.\n\"internal\" - Internal authorization.\n</pre>\n",
          "enum": [
            "ldap",
            "internal"
          ],
          "type": "string"
        },
        "averageBindRequestRate": {
          "description": "The one minute average of the bind request rate received by the MsgVpn, in binds per second (binds/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxByteRate": {
          "description": "The one minute average of the message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxCompressedByteRate": {
          "description": "The one minute average of the compressed message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxMsgRate": {
          "description": "The one minute average of the message rate received by the Message VPN, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxUncompressedByteRate": {
          "description": "The one minute average of the uncompressed message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxByteRate": {
          "description": "The one minute average of the message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxCompressedByteRate": {
          "description": "The one minute average of the compressed message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxMsgRate": {
          "description": "The one minute average of the message rate transmitted by the Message VPN, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxUncompressedByteRate": {
          "description": "The one minute average of the uncompressed message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "bindRequestRate": {
          "description": "The current bind request rate received by the MsgVpn, in binds per second (binds/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "bridgingTlsServerCertEnforceTrustedCommonNameEnabled": {
          "description": "Enable or disable validation of the Common Name (CN) in the server certificate from the remote broker. If enabled, the Common Name is checked against the list of Trusted Common Names configured for the Bridge. Common Name validation is not performed if Server Certificate Name Validation is enabled, even if Common Name validation is enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "boolean"
        },
        "bridgingTlsServerCertMaxChainDepth": {
          "description": "The maximum depth for a server certificate chain. The depth of a chain is defined as the number of signing CA certificates that are present in the chain back to a trusted self-signed root CA certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "bridgingTlsServerCertValidateDateEnabled": {
          "description": "Enable or disable validation of the \"Not Before\" and \"Not After\" validity dates in the server certificate. When disabled, a certificate will be accepted even if the certificate is not valid based on these dates.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "bridgingTlsServerCertValidateNameEnabled": {
          "description": "Enable or disable the standard TLS authentication mechanism of verifying the name used to connect to the bridge. If enabled, the name used to connect to the bridge is checked against the names specified in the certificate returned by the remote broker. Legacy Common Name validation is not performed if Server Certificate Name Validation is enabled, even if Common Name validation is also enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "type": "boolean"
        },
        "configSyncLocalKey": {
          "description": "The key for the config sync table of the local Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.22. This attribute has been deprecated.",
          "type": "string"
        },
        "configSyncLocalLastResult": {
          "description": "The result of the last operation on the config sync table of the local Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.22. This attribute has been replaced by \"lastResult\" in the ConfigSyncLocalDatabaseRow object.",
          "type": "string"
        },
        "configSyncLocalRole": {
          "description": "The role of the config sync table of the local Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"unknown\" - The role is unknown.\n\"primary\" - Acts as the primary source of config data.\n\"replica\" - Acts as a replica of the primary config data.\n</pre>\n Deprecated since 2.22. This attribute has been replaced by \"role\" in the ConfigSyncLocalDatabaseRow object.",
          "type": "string"
        },
        "configSyncLocalState": {
          "description": "The state of the config sync table of the local Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"unknown\" - The state is unknown.\n\"in-sync\" - The config data is synchronized between Message VPNs.\n\"reconciling\" - The config data is reconciling between Message VPNs.\n\"blocked\" - The config data is blocked from reconciling due to an error.\n\"out-of-sync\" - The config data is out of sync between Message VPNs.\n\"down\" - The state is down due to configuration.\n</pre>\n Deprecated since 2.22. This attribute has been replaced by \"syncStatus\" in the ConfigSyncLocalDatabaseRow object.",
          "type": "string"
        },
        "configSyncLocalTimeInState": {
          "description": "The amount of time in seconds the config sync table of the local Message VPN has been in the current state.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.22. This attribute has been replaced by \"timeInState\" in the ConfigSyncLocalDatabaseRow object.",
          "format": "int32",
          "type": "integer"
        },
        "controlRxByteCount": {
          "description": "The amount of client control messages received from clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "controlRxMsgCount": {
          "description": "The number of client control messages received from clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "controlTxByteCount": {
          "description": "The amount of client control messages transmitted to clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "controlTxMsgCount": {
          "description": "The number of client control messages transmitted to clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "counter": {
          "$ref": "#/definitions/MsgVpnCounter"
        },
        "dataRxByteCount": {
          "description": "The amount of client data messages received from clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgCount": {
          "description": "The number of client data messages received from clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxByteCount": {
          "description": "The amount of client data messages transmitted to clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgCount": {
          "description": "The number of client data messages transmitted to clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "discardedRxMsgCount": {
          "description": "The number of messages discarded during reception by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "discardedTxMsgCount": {
          "description": "The number of messages discarded during transmission by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "distributedCacheManagementEnabled": {
          "description": "Enable or disable managing of cache instances over the message bus.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.28. Distributed cache management is now redundancy aware and thus no longer requires administrative intervention for operational state.",
          "type": "boolean"
        },
        "dmrEnabled": {
          "description": "Enable or disable Dynamic Message Routing (DMR) for the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enable or disable the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "eventConnectionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventConnectionCountThreshold"
        },
        "eventEgressFlowCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventEgressFlowCountThreshold"
        },
        "eventEgressMsgRateThreshold": {
          "$ref": "#/definitions/MsgVpnEventEgressMsgRateThreshold"
        },
        "eventEndpointCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventEndpointCountThreshold"
        },
        "eventIngressFlowCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventIngressFlowCountThreshold"
        },
        "eventIngressMsgRateThreshold": {
          "$ref": "#/definitions/MsgVpnEventIngressMsgRateThreshold"
        },
        "eventLargeMsgThreshold": {
          "description": "The threshold, in kilobytes, after which a message is considered to be large for the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "eventLogTag": {
          "description": "A prefix applied to all published Events in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "eventMsgSpoolUsageThreshold": {
          "$ref": "#/definitions/MsgVpnEventMsgSpoolUsageThreshold"
        },
        "eventPublishClientEnabled": {
          "description": "Enable or disable Client level Event message publishing.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "eventPublishMsgVpnEnabled": {
          "description": "Enable or disable Message VPN level Event message publishing.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "eventPublishSubscriptionMode": {
          "description": "Subscription level Event message publishing mode.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"off\" - Disable client level event message publishing.\n\"on-with-format-v1\" - Enable client level event message publishing with format v1.\n\"on-with-no-unsubscribe-events-on-disconnect-format-v1\" - As \"on-with-format-v1\", but unsubscribe events are not generated when a client disconnects. Unsubscribe events are still raised when a client explicitly unsubscribes from its subscriptions.\n\"on-with-format-v2\" - Enable client level event message publishing with format v2.\n\"on-with-no-unsubscribe-events-on-disconnect-format-v2\" - As \"on-with-format-v2\", but unsubscribe events are not generated when a client disconnects. Unsubscribe events are still raised when a client explicitly unsubscribes from its subscriptions.\n</pre>\n",
          "enum": [
            "off",
            "on-with-format-v1",
            "on-with-no-unsubscribe-events-on-disconnect-format-v1",
            "on-with-format-v2",
            "on-with-no-unsubscribe-events-on-disconnect-format-v2"
          ],
          "type": "string"
        },
        "eventPublishTopicFormatMqttEnabled": {
          "description": "Enable or disable Event publish topics in MQTT format.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "eventPublishTopicFormatSmfEnabled": {
          "description": "Enable or disable Event publish topics in SMF format.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "eventServiceAmqpConnectionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventServiceAmqpConnectionCountThreshold"
        },
        "eventServiceMqttConnectionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventServiceMqttConnectionCountThreshold"
        },
        "eventServiceRestIncomingConnectionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventServiceRestIncomingConnectionCountThreshold"
        },
        "eventServiceSmfConnectionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventServiceSmfConnectionCountThreshold"
        },
        "eventServiceWebConnectionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventServiceWebConnectionCountThreshold"
        },
        "eventSubscriptionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventSubscriptionCountThreshold"
        },
        "eventTransactedSessionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventTransactedSessionCountThreshold"
        },
        "eventTransactionCountThreshold": {
          "$ref": "#/definitions/MsgVpnEventTransactionCountThreshold"
        },
        "exportSubscriptionsEnabled": {
          "description": "Enable or disable the export of subscriptions in the Message VPN to other routers in the network over Neighbor links.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "failureReason": {
          "description": "The reason for the Message VPN failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "jndiEnabled": {
          "description": "Enable or disable JNDI access for clients in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "kafkaBrokerConnectionCount": {
          "description": "The number of simultaneous Kafka Broker connections of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.39.",
          "format": "int32",
          "type": "integer"
        },
        "loginRxMsgCount": {
          "description": "The number of login request messages received by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "loginTxMsgCount": {
          "description": "The number of login response messages transmitted by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "maxConnectionCount": {
          "description": "The maximum number of client connections to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxEffectiveEndpointCount": {
          "description": "The effective maximum number of Queues and Topic Endpoints allowed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveRxFlowCount": {
          "description": "The effective maximum number of receive flows allowed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveSubscriptionCount": {
          "description": "The effective maximum number of subscriptions allowed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxEffectiveTransactedSessionCount": {
          "description": "The effective maximum number of transacted sessions allowed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveTransactionCount": {
          "description": "The effective maximum number of transactions allowed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveTxFlowCount": {
          "description": "The effective maximum number of transmit flows allowed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEgressFlowCount": {
          "description": "The maximum number of transmit flows that can be created in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxEndpointCount": {
          "description": "The maximum number of Queues and Topic Endpoints that can be created in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxIngressFlowCount": {
          "description": "The maximum number of receive flows that can be created in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxKafkaBrokerConnectionCount": {
          "description": "The maximum number of simultaneous Kafka Broker connections of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.39.",
          "format": "int32",
          "type": "integer"
        },
        "maxMsgSpoolUsage": {
          "description": "The maximum message spool usage by the Message VPN, in megabytes.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxSubscriptionCount": {
          "description": "The maximum number of local subscriptions that can be added to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTransactedSessionCount": {
          "description": "The maximum number of transacted sessions that can be created in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTransactionCount": {
          "description": "The maximum number of transactions that can be created in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "mqttRetainMaxMemory": {
          "description": "The maximum total memory usage of the MQTT Retain feature for this Message VPN, in MB. If the maximum memory is reached, any arriving retain messages that require more memory are discarded. A value of -1 indicates that the memory is bounded only by the global max memory limit. A value of 0 prevents MQTT Retain from becoming operational.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "msgReplayActiveCount": {
          "description": "The number of message replays that are currently active in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "msgReplayFailedCount": {
          "description": "The number of message replays that are currently failed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "msgReplayInitializingCount": {
          "description": "The number of message replays that are currently initializing in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "msgReplayPendingCompleteCount": {
          "description": "The number of message replays that are pending complete in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "msgSpoolMsgCount": {
          "description": "The current number of messages spooled (persisted in the Message Spool) in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolRxMsgCount": {
          "description": "The number of guaranteed messages received by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolTxMsgCount": {
          "description": "The number of guaranteed messages transmitted by the Message VPN. One message to multiple clients is counted as one message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolUsage": {
          "description": "The current message spool usage by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "rate": {
          "$ref": "#/definitions/MsgVpnRate"
        },
        "replicationAckPropagationIntervalMsgCount": {
          "description": "The acknowledgment (ACK) propagation interval for the replication Bridge, in number of replicated messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveAckPropTxMsgCount": {
          "description": "The number of acknowledgment messages propagated to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveAsyncQueuedMsgCount": {
          "description": "The number of async messages queued to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveLocallyConsumedMsgCount": {
          "description": "The number of messages consumed in the replication active local Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveMateFlowCongestedPeakTime": {
          "description": "The peak amount of time in seconds the message flow has been congested to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int32",
          "type": "integer"
        },
        "replicationActiveMateFlowNotCongestedPeakTime": {
          "description": "The peak amount of time in seconds the message flow has not been congested to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int32",
          "type": "integer"
        },
        "replicationActivePromotedQueuedMsgCount": {
          "description": "The number of promoted messages queued to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveReconcileRequestRxMsgCount": {
          "description": "The number of reconcile request messages received from the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveSyncEligiblePeakTime": {
          "description": "The peak amount of time in seconds sync replication has been eligible to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int32",
          "type": "integer"
        },
        "replicationActiveSyncIneligiblePeakTime": {
          "description": "The peak amount of time in seconds sync replication has been ineligible to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int32",
          "type": "integer"
        },
        "replicationActiveSyncQueuedAsAsyncMsgCount": {
          "description": "The number of sync messages queued as async to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveSyncQueuedMsgCount": {
          "description": "The number of sync messages queued to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveTransitionToSyncIneligibleCount": {
          "description": "The number of sync replication ineligible transitions to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationBridgeAuthenticationBasicClientUsername": {
          "description": "The Client Username the replication Bridge uses to login to the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "type": "string"
        },
        "replicationBridgeAuthenticationScheme": {
          "description": "The authentication scheme for the replication Bridge in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"basic\" - Basic Authentication Scheme (via username and password).\n\"client-certificate\" - Client Certificate Authentication Scheme (via certificate file or content).\n</pre>\n Available since 2.12.",
          "enum": [
            "basic",
            "client-certificate"
          ],
          "type": "string"
        },
        "replicationBridgeBoundToQueue": {
          "description": "Indicates whether the local replication Bridge is bound to the Queue in the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "boolean"
        },
        "replicationBridgeCompressedDataEnabled": {
          "description": "Enable or disable use of compression for the replication Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "type": "boolean"
        },
        "replicationBridgeEgressFlowWindowSize": {
          "description": "The size of the window used for guaranteed messages published to the replication Bridge, in messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationBridgeName": {
          "description": "The name of the local replication Bridge in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "string"
        },
        "replicationBridgeRetryDelay": {
          "description": "The number of seconds that must pass before retrying the replication Bridge connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationBridgeTlsEnabled": {
          "description": "Enable or disable use of encryption (TLS) for the replication Bridge connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "type": "boolean"
        },
        "replicationBridgeUnidirectionalClientProfileName": {
          "description": "The Client Profile for the unidirectional replication Bridge in the Message VPN. It is used only for the TCP parameters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "type": "string"
        },
        "replicationBridgeUp": {
          "description": "Indicates whether the local replication Bridge is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "boolean"
        },
        "replicationEnabled": {
          "description": "Enable or disable replication for the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "type": "boolean"
        },
        "replicationQueueBound": {
          "description": "Indicates whether the remote replication Bridge is bound to the Queue in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "boolean"
        },
        "replicationQueueMaxMsgSpoolUsage": {
          "description": "The maximum message spool usage by the replication Bridge local Queue (quota), in megabytes.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationQueueRejectMsgToSenderOnDiscardEnabled": {
          "description": "Enable or disable whether messages discarded on the replication Bridge local Queue are rejected back to the sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "type": "boolean"
        },
        "replicationRejectMsgWhenSyncIneligibleEnabled": {
          "description": "Enable or disable whether guaranteed messages published to synchronously replicated Topics are rejected back to the sender when synchronous replication becomes ineligible.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.12.",
          "type": "boolean"
        },
        "replicationRemoteBridgeName": {
          "description": "The name of the remote replication Bridge in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "string"
        },
        "replicationRemoteBridgeUp": {
          "description": "Indicates whether the remote replication Bridge is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "boolean"
        },
        "replicationRole": {
          "description": "The replication role for the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"active\" - Assume the Active role in replication for the Message VPN.\n\"standby\" - Assume the Standby role in replication for the Message VPN.\n</pre>\n Available since 2.12.",
          "enum": [
            "active",
            "standby"
          ],
          "type": "string"
        },
        "replicationStandbyAckPropOutOfSeqRxMsgCount": {
          "description": "The number of acknowledgment messages received out of sequence from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyAckPropRxMsgCount": {
          "description": "The number of acknowledgment messages received from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyReconcileRequestTxMsgCount": {
          "description": "The number of reconcile request messages transmitted to the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyRxMsgCount": {
          "description": "The number of messages received from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyTransactionRequestCount": {
          "description": "The number of transaction requests received from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyTransactionRequestFailureCount": {
          "description": "The number of transaction requests received from the replication active remote Message VPN that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyTransactionRequestSuccessCount": {
          "description": "The number of transaction requests received from the replication active remote Message VPN that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "replicationSyncEligible": {
          "description": "Indicates whether sync replication is eligible in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "boolean"
        },
        "replicationTransactionMode": {
          "description": "The transaction replication mode for all transactions within the Message VPN. Changing this value during operation will not affect existing transactions; it is only used upon starting a transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"sync\" - Messages are acknowledged when replicated (spooled remotely).\n\"async\" - Messages are acknowledged when pending replication (spooled locally).\n</pre>\n Available since 2.12.",
          "enum": [
            "sync",
            "async"
          ],
          "type": "string"
        },
        "restTlsServerCertEnforceTrustedCommonNameEnabled": {
          "description": "Enable or disable validation of the Common Name (CN) in the server certificate from the remote REST Consumer. If enabled, the Common Name is checked against the list of Trusted Common Names configured for the REST Consumer. Common Name validation is not performed if Server Certificate Name Validation is enabled, even if Common Name validation is enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "boolean"
        },
        "restTlsServerCertMaxChainDepth": {
          "description": "The maximum depth for a REST Consumer server certificate chain. The depth of a chain is defined as the number of signing CA certificates that are present in the chain back to a trusted self-signed root CA certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "restTlsServerCertValidateDateEnabled": {
          "description": "Enable or disable validation of the \"Not Before\" and \"Not After\" validity dates in the REST Consumer server certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "restTlsServerCertValidateNameEnabled": {
          "description": "Enable or disable the standard TLS authentication mechanism of verifying the name used to connect to the remote REST Consumer. If enabled, the name used to connect to the remote REST Consumer is checked against the names specified in the certificate returned by the remote broker. Legacy Common Name validation is not performed if Server Certificate Name Validation is enabled, even if Common Name validation is also enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.17.",
          "type": "boolean"
        },
        "rxByteCount": {
          "description": "The amount of messages received from clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "rxByteRate": {
          "description": "The current message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "rxCompressedByteCount": {
          "description": "The amount of compressed messages received by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "rxCompressedByteRate": {
          "description": "The current compressed message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "rxCompressionRatio": {
          "description": "The compression ratio for messages received by the message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "string"
        },
        "rxMsgCount": {
          "description": "The number of messages received from clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgRate": {
          "description": "The current message rate received by the Message VPN, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "rxUncompressedByteCount": {
          "description": "The amount of uncompressed messages received by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "rxUncompressedByteRate": {
          "description": "The current uncompressed message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "sempOverMsgBusAdminClientEnabled": {
          "description": "Enable or disable \"admin client\" SEMP over the message bus commands for the current Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "sempOverMsgBusAdminDistributedCacheEnabled": {
          "description": "Enable or disable \"admin distributed-cache\" SEMP over the message bus commands for the current Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "sempOverMsgBusAdminEnabled": {
          "description": "Enable or disable \"admin\" SEMP over the message bus commands for the current Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "sempOverMsgBusEnabled": {
          "description": "Enable or disable SEMP over the message bus for the current Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "sempOverMsgBusShowEnabled": {
          "description": "Enable or disable \"show\" SEMP over the message bus commands for the current Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceAmqpMaxConnectionCount": {
          "description": "The maximum number of AMQP client connections that can be simultaneously connected to the Message VPN. This value may be higher than supported by the platform.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceAmqpPlainTextCompressed": {
          "description": "Indicates whether the AMQP Service is compressed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceAmqpPlainTextEnabled": {
          "description": "Enable or disable the plain-text AMQP service in the Message VPN. Disabling causes clients connected to the corresponding listen-port to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceAmqpPlainTextFailureReason": {
          "description": "The reason for the AMQP Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceAmqpPlainTextListenPort": {
          "description": "The port number for plain-text AMQP clients that connect to the Message VPN. The port must be unique across the message backbone. A value of 0 means that the listen-port is unassigned and cannot be enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceAmqpPlainTextUp": {
          "description": "Indicates whether the AMQP Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceAmqpTlsCompressed": {
          "description": "Indicates whether the TLS related AMQP Service is compressed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceAmqpTlsEnabled": {
          "description": "Enable or disable the use of encryption (TLS) for the AMQP service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceAmqpTlsFailureReason": {
          "description": "The reason for the TLS related AMQP Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceAmqpTlsListenPort": {
          "description": "The port number for AMQP clients that connect to the Message VPN over TLS. The port must be unique across the message backbone. A value of 0 means that the listen-port is unassigned and cannot be enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceAmqpTlsUp": {
          "description": "Indicates whether the TLS related AMQP Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceMqttAuthenticationClientCertRequest": {
          "description": "Determines when to request a client certificate from an incoming MQTT client connecting via a TLS port.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"always\" - Always ask for a client certificate regardless of the \"message-vpn > authentication > client-certificate > shutdown\" configuration.\n\"never\" - Never ask for a client certificate regardless of the \"message-vpn > authentication > client-certificate > shutdown\" configuration.\n\"when-enabled-in-message-vpn\" - Only ask for a client-certificate if client certificate authentication is enabled under \"message-vpn >  authentication > client-certificate > shutdown\".\n</pre>\n Available since 2.21.",
          "enum": [
            "always",
            "never",
            "when-enabled-in-message-vpn"
          ],
          "type": "string"
        },
        "serviceMqttMaxConnectionCount": {
          "description": "The maximum number of MQTT client connections that can be simultaneously connected to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceMqttPlainTextCompressed": {
          "description": "Indicates whether the MQTT Service is compressed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceMqttPlainTextEnabled": {
          "description": "Enable or disable the plain-text MQTT service in the Message VPN. Disabling causes clients currently connected to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceMqttPlainTextFailureReason": {
          "description": "The reason for the MQTT Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceMqttPlainTextListenPort": {
          "description": "The port number for plain-text MQTT clients that connect to the Message VPN. The port must be unique across the message backbone. A value of 0 means that the listen-port is unassigned and cannot be enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceMqttPlainTextUp": {
          "description": "Indicates whether the MQTT Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceMqttTlsCompressed": {
          "description": "Indicates whether the TLS related MQTT Service is compressed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceMqttTlsEnabled": {
          "description": "Enable or disable the use of encryption (TLS) for the MQTT service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceMqttTlsFailureReason": {
          "description": "The reason for the TLS related MQTT Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceMqttTlsListenPort": {
          "description": "The port number for MQTT clients that connect to the Message VPN over TLS. The port must be unique across the message backbone. A value of 0 means that the listen-port is unassigned and cannot be enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceMqttTlsUp": {
          "description": "Indicates whether the TLS related MQTT Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceMqttTlsWebSocketCompressed": {
          "description": "Indicates whether the TLS related Web transport MQTT Service is compressed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceMqttTlsWebSocketEnabled": {
          "description": "Enable or disable the use of encrypted WebSocket (WebSocket over TLS) for the MQTT service in the Message VPN. Disabling causes clients currently connected by encrypted WebSocket to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceMqttTlsWebSocketFailureReason": {
          "description": "The reason for the TLS related Web transport MQTT Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceMqttTlsWebSocketListenPort": {
          "description": "The port number for MQTT clients that connect to the Message VPN using WebSocket over TLS. The port must be unique across the message backbone. A value of 0 means that the listen-port is unassigned and cannot be enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceMqttTlsWebSocketUp": {
          "description": "Indicates whether the TLS related Web transport MQTT Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceMqttWebSocketCompressed": {
          "description": "Indicates whether the Web transport related MQTT Service is compressed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceMqttWebSocketEnabled": {
          "description": "Enable or disable the use of WebSocket for the MQTT service in the Message VPN. Disabling causes clients currently connected by WebSocket to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceMqttWebSocketFailureReason": {
          "description": "The reason for the Web transport related MQTT Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceMqttWebSocketListenPort": {
          "description": "The port number for plain-text MQTT clients that connect to the Message VPN using WebSocket. The port must be unique across the message backbone. A value of 0 means that the listen-port is unassigned and cannot be enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceMqttWebSocketUp": {
          "description": "Indicates whether the Web transport related MQTT Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceRestIncomingAuthenticationClientCertRequest": {
          "description": "Determines when to request a client certificate from an incoming REST Producer connecting via a TLS port.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"always\" - Always ask for a client certificate regardless of the \"message-vpn > authentication > client-certificate > shutdown\" configuration.\n\"never\" - Never ask for a client certificate regardless of the \"message-vpn > authentication > client-certificate > shutdown\" configuration.\n\"when-enabled-in-message-vpn\" - Only ask for a client-certificate if client certificate authentication is enabled under \"message-vpn >  authentication > client-certificate > shutdown\".\n</pre>\n Available since 2.21.",
          "enum": [
            "always",
            "never",
            "when-enabled-in-message-vpn"
          ],
          "type": "string"
        },
        "serviceRestIncomingAuthorizationHeaderHandling": {
          "description": "The handling of Authorization headers for incoming REST connections. Authorization header handling settings apply only when the Message VPN is in gateway mode.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"drop\" - Do not attach the Authorization header to the message as a user property. This configuration is most secure.\n\"forward\" - Forward the Authorization header, attaching it to the message as a user property in the same way as other headers. For best security, use the drop setting.\n\"legacy\" - If the Authorization header was used for authentication to the broker, do not attach it to the message. If the Authorization header was not used for authentication to the broker, attach it to the message as a user property in the same way as other headers. For best security, use the drop setting.\n</pre>\n Available since 2.19.",
          "enum": [
            "drop",
            "forward",
            "legacy"
          ],
          "type": "string"
        },
        "serviceRestIncomingMaxConnectionCount": {
          "description": "The maximum number of REST incoming client connections that can be simultaneously connected to the Message VPN. This value may be higher than supported by the platform.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceRestIncomingPlainTextCompressed": {
          "description": "Indicates whether the incoming REST Service is compressed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceRestIncomingPlainTextEnabled": {
          "description": "Enable or disable the plain-text REST service for incoming clients in the Message VPN. Disabling causes clients currently connected to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceRestIncomingPlainTextFailureReason": {
          "description": "The reason for the incoming REST Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceRestIncomingPlainTextListenPort": {
          "description": "The port number for incoming plain-text REST clients that connect to the Message VPN. The port must be unique across the message backbone. A value of 0 means that the listen-port is unassigned and cannot be enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceRestIncomingPlainTextUp": {
          "description": "Indicates whether the incoming REST Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceRestIncomingTlsCompressed": {
          "description": "Indicates whether the TLS related incoming REST Service is compressed in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceRestIncomingTlsEnabled": {
          "description": "Enable or disable the use of encryption (TLS) for the REST service for incoming clients in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceRestIncomingTlsFailureReason": {
          "description": "The reason for the TLS related incoming REST Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceRestIncomingTlsListenPort": {
          "description": "The port number for incoming REST clients that connect to the Message VPN over TLS. The port must be unique across the message backbone. A value of 0 means that the listen-port is unassigned and cannot be enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceRestIncomingTlsUp": {
          "description": "Indicates whether the TLS related incoming REST Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceRestMode": {
          "description": "The REST service mode for incoming REST clients that connect to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"gateway\" - Act as a message gateway through which REST messages are propagated.\n\"messaging\" - Act as a message broker on which REST messages are queued.\n</pre>\n",
          "enum": [
            "gateway",
            "messaging"
          ],
          "type": "string"
        },
        "serviceRestOutgoingMaxConnectionCount": {
          "description": "The maximum number of REST Consumer (outgoing) client connections that can be simultaneously connected to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceSmfMaxConnectionCount": {
          "description": "The maximum number of SMF client connections that can be simultaneously connected to the Message VPN. This value may be higher than supported by the platform.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceSmfPlainTextEnabled": {
          "description": "Enable or disable the plain-text SMF service in the Message VPN. Disabling causes clients currently connected to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceSmfPlainTextFailureReason": {
          "description": "The reason for the SMF Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceSmfPlainTextUp": {
          "description": "Indicates whether the SMF Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceSmfTlsEnabled": {
          "description": "Enable or disable the use of encryption (TLS) for the SMF service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceSmfTlsFailureReason": {
          "description": "The reason for the TLS related SMF Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceSmfTlsUp": {
          "description": "Indicates whether the TLS related SMF Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceWebAuthenticationClientCertRequest": {
          "description": "Determines when to request a client certificate from a Web Transport client connecting via a TLS port.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"always\" - Always ask for a client certificate regardless of the \"message-vpn > authentication > client-certificate > shutdown\" configuration.\n\"never\" - Never ask for a client certificate regardless of the \"message-vpn > authentication > client-certificate > shutdown\" configuration.\n\"when-enabled-in-message-vpn\" - Only ask for a client-certificate if client certificate authentication is enabled under \"message-vpn >  authentication > client-certificate > shutdown\".\n</pre>\n Available since 2.21.",
          "enum": [
            "always",
            "never",
            "when-enabled-in-message-vpn"
          ],
          "type": "string"
        },
        "serviceWebMaxConnectionCount": {
          "description": "The maximum number of Web Transport client connections that can be simultaneously connected to the Message VPN. This value may be higher than supported by the platform.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceWebPlainTextEnabled": {
          "description": "Enable or disable the plain-text Web Transport service in the Message VPN. Disabling causes clients currently connected to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceWebPlainTextFailureReason": {
          "description": "The reason for the Web transport related SMF Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceWebPlainTextUp": {
          "description": "Indicates whether the Web transport for the SMF Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "serviceWebTlsEnabled": {
          "description": "Enable or disable the use of TLS for the Web Transport service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceWebTlsFailureReason": {
          "description": "The reason for the TLS related Web transport SMF Service failure in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "serviceWebTlsUp": {
          "description": "Indicates whether the TLS related Web transport SMF Service is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "state": {
          "description": "The operational state of the local Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"up\" - The Message VPN is operationally up.\n\"down\" - The Message VPN is operationally down.\n\"standby\" - The Message VPN is operationally replication standby.\n</pre>\n",
          "type": "string"
        },
        "subscriptionExportProgress": {
          "description": "The progress of the subscription export task, in percent complete.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "systemManager": {
          "description": "Indicates whether the Message VPN is the system manager for handling system level SEMP get requests and system level event publishing.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "tlsAllowDowngradeToPlainTextEnabled": {
          "description": "Enable or disable the allowing of TLS SMF clients to downgrade their connections to plain-text connections. Changing this will not affect existing connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "tlsAverageRxByteRate": {
          "description": "The one minute average of the TLS message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "tlsAverageTxByteRate": {
          "description": "The one minute average of the TLS message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "tlsRxByteCount": {
          "description": "The amount of TLS messages received by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "tlsRxByteRate": {
          "description": "The current TLS message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "tlsTxByteCount": {
          "description": "The amount of TLS messages transmitted by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "tlsTxByteRate": {
          "description": "The current TLS message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "txByteCount": {
          "description": "The amount of messages transmitted to clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "txByteRate": {
          "description": "The current message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "txCompressedByteCount": {
          "description": "The amount of compressed messages transmitted by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "txCompressedByteRate": {
          "description": "The current compressed message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "txCompressionRatio": {
          "description": "The compression ratio for messages transmitted by the message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "type": "string"
        },
        "txMsgCount": {
          "description": "The number of messages transmitted to clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "txMsgRate": {
          "description": "The current message rate transmitted by the Message VPN, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "txUncompressedByteCount": {
          "description": "The amount of uncompressed messages transmitted by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        },
        "txUncompressedByteRate": {
          "description": "The current uncompressed message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.12.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfile": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the ACL Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientConnectDefaultAction": {
          "description": "The default action to take when a client using the ACL Profile connects to the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"allow\" - Allow client connection unless an exception is found for it.\n\"disallow\" - Disallow client connection unless an exception is found for it.\n</pre>\n",
          "enum": [
            "allow",
            "disallow"
          ],
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "publishTopicDefaultAction": {
          "description": "The default action to take when a client using the ACL Profile publishes to a topic in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"allow\" - Allow topic unless an exception is found for it.\n\"disallow\" - Disallow topic unless an exception is found for it.\n</pre>\n",
          "enum": [
            "allow",
            "disallow"
          ],
          "type": "string"
        },
        "subscribeShareNameDefaultAction": {
          "description": "The default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"allow\" - Allow topic unless an exception is found for it.\n\"disallow\" - Disallow topic unless an exception is found for it.\n</pre>\n Available since 2.14.",
          "enum": [
            "allow",
            "disallow"
          ],
          "type": "string"
        },
        "subscribeTopicDefaultAction": {
          "description": "The default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"allow\" - Allow topic unless an exception is found for it.\n\"disallow\" - Disallow topic unless an exception is found for it.\n</pre>\n",
          "enum": [
            "allow",
            "disallow"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileClientConnectException": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the ACL Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientConnectExceptionAddress": {
          "description": "The IP address/netmask of the client connect exception in canonical CIDR form.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileClientConnectExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAclProfileClientConnectExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Client Connect Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileClientConnectExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAclProfileClientConnectExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAclProfileClientConnectException"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAclProfileClientConnectExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileClientConnectExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileClientConnectExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileClientConnectException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileClientConnectExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileCollections": {
      "properties": {
        "clientConnectExceptions": {
          "$ref": "#/definitions/MsgVpnAclProfileCollectionsClientConnectExceptions"
        },
        "publishExceptions": {
          "$ref": "#/definitions/MsgVpnAclProfileCollectionsPublishExceptions"
        },
        "publishTopicExceptions": {
          "$ref": "#/definitions/MsgVpnAclProfileCollectionsPublishTopicExceptions"
        },
        "subscribeExceptions": {
          "$ref": "#/definitions/MsgVpnAclProfileCollectionsSubscribeExceptions"
        },
        "subscribeShareNameExceptions": {
          "$ref": "#/definitions/MsgVpnAclProfileCollectionsSubscribeShareNameExceptions"
        },
        "subscribeTopicExceptions": {
          "$ref": "#/definitions/MsgVpnAclProfileCollectionsSubscribeTopicExceptions"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileCollectionsClientConnectExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clientConnectExceptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileCollectionsPublishExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the publishExceptions collection. Deprecated since 2.14. Replaced by publishTopicExceptions.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileCollectionsPublishTopicExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the publishTopicExceptions collection. Available since 2.14.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileCollectionsSubscribeExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the subscribeExceptions collection. Deprecated since 2.14. Replaced by subscribeTopicExceptions.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileCollectionsSubscribeShareNameExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the subscribeShareNameExceptions collection. Available since 2.14.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileCollectionsSubscribeTopicExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the subscribeTopicExceptions collection. Available since 2.14.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileLinks": {
      "properties": {
        "clientConnectExceptionsUri": {
          "description": "The URI of this ACL Profile's collection of Client Connect Exception objects.",
          "type": "string"
        },
        "publishExceptionsUri": {
          "description": "The URI of this ACL Profile's collection of Publish Topic Exception objects. Deprecated since 2.14. Replaced by publishTopicExceptions.",
          "type": "string"
        },
        "publishTopicExceptionsUri": {
          "description": "The URI of this ACL Profile's collection of Publish Topic Exception objects. Available since 2.14.",
          "type": "string"
        },
        "subscribeExceptionsUri": {
          "description": "The URI of this ACL Profile's collection of Subscribe Topic Exception objects. Deprecated since 2.14. Replaced by subscribeTopicExceptions.",
          "type": "string"
        },
        "subscribeShareNameExceptionsUri": {
          "description": "The URI of this ACL Profile's collection of Subscribe Share Name Exception objects. Available since 2.14.",
          "type": "string"
        },
        "subscribeTopicExceptionsUri": {
          "description": "The URI of this ACL Profile's collection of Subscribe Topic Exception objects. Available since 2.14.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this ACL Profile object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfilePublishException": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the ACL Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.14. Replaced by publishTopicExceptions.",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.14. Replaced by publishTopicExceptions.",
          "type": "string"
        },
        "publishExceptionTopic": {
          "description": "The topic for the exception to the default action taken. May include wildcard characters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.14. Replaced by publishTopicExceptions.",
          "type": "string"
        },
        "topicSyntax": {
          "description": "The syntax of the topic for the exception to the default action taken.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"smf\" - Topic uses SMF syntax.\n\"mqtt\" - Topic uses MQTT syntax.\n</pre>\n Deprecated since 2.14. Replaced by publishTopicExceptions.",
          "enum": [
            "smf",
            "mqtt"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfilePublishExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAclProfilePublishExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Publish Topic Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfilePublishExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAclProfilePublishExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAclProfilePublishException"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAclProfilePublishExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfilePublishExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfilePublishExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfilePublishException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfilePublishExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfilePublishTopicException": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the ACL Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "publishTopicException": {
          "description": "The topic for the exception to the default action taken. May include wildcard characters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "publishTopicExceptionSyntax": {
          "description": "The syntax of the topic for the exception to the default action taken.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"smf\" - Topic uses SMF syntax.\n\"mqtt\" - Topic uses MQTT syntax.\n</pre>\n",
          "enum": [
            "smf",
            "mqtt"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfilePublishTopicExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAclProfilePublishTopicExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Publish Topic Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfilePublishTopicExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAclProfilePublishTopicExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAclProfilePublishTopicException"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAclProfilePublishTopicExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfilePublishTopicExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfilePublishTopicExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfilePublishTopicException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfilePublishTopicExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAclProfileCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAclProfile"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAclProfileLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeException": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the ACL Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.14. Replaced by subscribeTopicExceptions.",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.14. Replaced by subscribeTopicExceptions.",
          "type": "string"
        },
        "subscribeExceptionTopic": {
          "description": "The topic for the exception to the default action taken. May include wildcard characters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.14. Replaced by subscribeTopicExceptions.",
          "type": "string"
        },
        "topicSyntax": {
          "description": "The syntax of the topic for the exception to the default action taken.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"smf\" - Topic uses SMF syntax.\n\"mqtt\" - Topic uses MQTT syntax.\n</pre>\n Deprecated since 2.14. Replaced by subscribeTopicExceptions.",
          "enum": [
            "smf",
            "mqtt"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Subscribe Topic Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeException"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeShareNameException": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the ACL Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscribeShareNameException": {
          "description": "The subscribe share name exception to the default action taken. May include wildcard characters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscribeShareNameExceptionSyntax": {
          "description": "The syntax of the subscribe share name for the exception to the default action taken.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"smf\" - Topic uses SMF syntax.\n\"mqtt\" - Topic uses MQTT syntax.\n</pre>\n",
          "enum": [
            "smf",
            "mqtt"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeShareNameExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeShareNameExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Subscribe Share Name Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeShareNameExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeShareNameExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeShareNameException"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeShareNameExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeShareNameExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeShareNameExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeShareNameException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeShareNameExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeTopicException": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the ACL Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscribeTopicException": {
          "description": "The topic for the exception to the default action taken. May include wildcard characters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscribeTopicExceptionSyntax": {
          "description": "The syntax of the topic for the exception to the default action taken.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"smf\" - Topic uses SMF syntax.\n\"mqtt\" - Topic uses MQTT syntax.\n</pre>\n",
          "enum": [
            "smf",
            "mqtt"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeTopicExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeTopicExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Subscribe Topic Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeTopicExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeTopicExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeTopicException"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAclProfileSubscribeTopicExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfileSubscribeTopicExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeTopicExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeTopicException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileSubscribeTopicExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAclProfilesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfile"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAclProfileLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationKerberosRealm": {
      "properties": {
        "enabled": {
          "description": "Enable or disable the Realm.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "kdcAddress": {
          "description": "Address (FQDN or IP) and optional port of the Key Distribution Center for principals in this Realm.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "kerberosRealmName": {
          "description": "The Realm Name. Must start with \"@\", typically all uppercase.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationKerberosRealmCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAuthenticationKerberosRealmLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Realm object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationKerberosRealmResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAuthenticationKerberosRealmCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAuthenticationKerberosRealm"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAuthenticationKerberosRealmLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationKerberosRealmsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationKerberosRealmCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationKerberosRealm"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationKerberosRealmLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfile": {
      "properties": {
        "active": {
          "description": "Indicates whether the profile is active. An enabled profile may not be active if discovery is not complete, if there is no issuer specified, or if there is another profile with the same issuer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.26.",
          "type": "boolean"
        },
        "authorizationGroupsClaimName": {
          "description": "The name of the groups claim. If non-empty, the specified claim will be used to determine groups for authorization. If empty, the authorizationType attribute of the Message VPN will be used to determine authorization.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authorizationGroupsClaimStringFormat": {
          "description": "The format of the authorization groups claim value when it is a string.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"single\" - When the claim is a string, it is interpreted as as single group.\n\"space-delimited\" - When the claim is a string, it is interpreted as a space-delimited list of groups, similar to the \"scope\" claim.\n</pre>\n Available since 2.32.",
          "enum": [
            "single",
            "space-delimited"
          ],
          "type": "string"
        },
        "clientId": {
          "description": "The OAuth client id.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientRequiredType": {
          "description": "The required value for the TYP field in the ID token header.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientValidateTypeEnabled": {
          "description": "Enable or disable verification of the TYP field in the ID token header.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "disconnectOnTokenExpirationEnabled": {
          "description": "Enable or disable the disconnection of clients when their tokens expire. Changing this value does not affect existing clients, only new client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "discoveryLastRefreshFailureReason": {
          "description": "The reason for the last discovery endpoint refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "discoveryLastRefreshFailureTime": {
          "description": "The timestamp of the last discovery endpoint refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "discoveryLastRefreshTime": {
          "description": "The timestamp of the last discovery endpoint refresh success.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "discoveryNextScheduledRefreshTime": {
          "description": "The timestamp of the next scheduled discovery endpoint refresh.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "discoveryRefreshFailureCount": {
          "description": "The number of discovery endpoint refresh failures.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "enabled": {
          "description": "Enable or disable the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "endpointDiscovery": {
          "description": "The OpenID Connect discovery endpoint or OAuth Authorization Server Metadata endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointDiscoveryRefreshInterval": {
          "description": "The number of seconds between discovery endpoint requests.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "endpointIntrospection": {
          "description": "The OAuth introspection endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointIntrospectionOperational": {
          "description": "The operational OAuth introspection endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "endpointIntrospectionTimeout": {
          "description": "The maximum time in seconds a token introspection request is allowed to take.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "endpointJwks": {
          "description": "The OAuth JWKS endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointJwksOperational": {
          "description": "The operational OAuth JWKS endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "endpointJwksRefreshInterval": {
          "description": "The number of seconds between JWKS endpoint requests.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "endpointUserinfo": {
          "description": "The OpenID Connect Userinfo endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointUserinfoOperational": {
          "description": "The operational OpenID Connect Userinfo endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "endpointUserinfoTimeout": {
          "description": "The maximum time in seconds a userinfo request is allowed to take.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "expiredTokenCount": {
          "description": "The number of requests with an expired OAuth token.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "groupsFoundInTokenCount": {
          "description": "The number of times the groups were successfully found in the ID token or access token for request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "inactiveReason": {
          "description": "The reason the profile is not active.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"msg-vpn-disabled\" - The Message VPN is disabled.\n\"oauth-disabled\" - OAuth is disabled for the Message VPN.\n\"profile-disabled\" - The OAuth profile is disabled.\n\"missing-issuer\" - The issuer has not been discovered or configured.\n\"duplicate-issuer\" - Another OAuth profile in the Message VPN already has the same issuer.\n\"none\" - The OAuth profile is active.\n</pre>\n Available since 2.26.",
          "type": "string"
        },
        "introspectionAverageTime": {
          "description": "The one minute average of the time required to complete a token introspection, in milliseconds (ms).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "introspectionLastFailureReason": {
          "description": "The reason for the introspection endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "introspectionLastFailureTime": {
          "description": "The timestamp of the last introspection endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "introspectionMissingCount": {
          "description": "The number of failures during request authentication due to missing introspection configuration (a introspection request was required but no introspection endpoint was configured).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "introspectionMissingGroupsCount": {
          "description": "The number of introspection request made from the broker during request authentication for this OAuth profile where the configured groups claim wasn't found in the access token or the introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "introspectionMissingUsernameCount": {
          "description": "The number of introspection requests made from the broker during request authentication for this OAuth profile where the configured username claim wasn't found in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "introspectionRequestCount": {
          "description": "The number of requests made to the introspection endpoint during request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "introspectionResponseInvalidCount": {
          "description": "The number of introspection responses during request authentication that couldn't be parsed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "introspectionStatusOkCount": {
          "description": "The number of introspection requests made from the broker during request authentication for this OAuth profile with 200 status responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "introspectionStatusOtherCount": {
          "description": "The number of introspection requests made from the broker during request authentication for this OAuth profile with status responses other than 200.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "introspectionTokenNotActiveCount": {
          "description": "The number of introspection responses indicating that the provided token was not active.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "invalidTokenCount": {
          "description": "The number of requests with an invalid OAuth token.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "issuer": {
          "description": "The Issuer Identifier for the OAuth provider.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "issuerOperational": {
          "description": "The operational Issuer Identifier for the OAuth provider.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "jwksLastRefreshFailureReason": {
          "description": "The reason for the last JWKS public key refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "jwksLastRefreshFailureTime": {
          "description": "The timestamp of the last JWKS public key refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "jwksLastRefreshTime": {
          "description": "The timestamp of the last JWKS public key refresh success.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "jwksNextScheduledRefreshTime": {
          "description": "The timestamp of the next scheduled JWKS public key refresh.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "jwksRefreshFailureCount": {
          "description": "The number of JWKS public key refresh failures.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttUsernameValidateEnabled": {
          "description": "Enable or disable whether the API provided MQTT client username will be validated against the username calculated from the token(s). When enabled, connection attempts by MQTT clients are rejected if they differ. Note that this value only applies to MQTT clients; SMF client usernames will not be validated.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "oauthRole": {
          "description": "The OAuth role of the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"client\" - The broker is in the OAuth client role.\n\"resource-server\" - The broker is in the OAuth resource server role.\n</pre>\n",
          "enum": [
            "client",
            "resource-server"
          ],
          "type": "string"
        },
        "proxyName": {
          "description": "The name of the proxy to use for discovery, user info, jwks, and introspection requests. Leave empty for no proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.41.",
          "type": "string"
        },
        "requestCount": {
          "description": "The number of requests (successful and unsuccessful) using this OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "resourceServerParseAccessTokenEnabled": {
          "description": "Enable or disable parsing of the access token as a JWT.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "resourceServerRequiredAudience": {
          "description": "The required audience value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "resourceServerRequiredIssuer": {
          "description": "The required issuer value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "resourceServerRequiredScope": {
          "description": "A space-separated list of scopes that must be present in the scope claim.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "resourceServerRequiredType": {
          "description": "The required TYP value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "resourceServerValidateAudienceEnabled": {
          "description": "Enable or disable verification of the audience claim in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "resourceServerValidateIssuerEnabled": {
          "description": "Enable or disable verification of the issuer claim in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "resourceServerValidateScopeEnabled": {
          "description": "Enable or disable verification of the scope claim in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "resourceServerValidateTypeEnabled": {
          "description": "Enable or disable verification of the TYP field in the access token header.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "successCount": {
          "description": "The number of successful authentications using this OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoAverageTime": {
          "description": "The one minute average of the time required to complete a token userinfo request, in milliseconds (ms).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "userinfoLastFailureReason": {
          "description": "The reason for the userinfo endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "userinfoLastFailureTime": {
          "description": "The timestamp of the last userinfo endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "userinfoMissingCount": {
          "description": "The number of failures due to missing Userinfo configuration (a Userinfo request was required but no Userinfo endpoint was configured) during request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoMissingGroupsCount": {
          "description": "The number of Userinfo request made from the broker during request authentication for this OAuth profile where the configured groups claim wasn't found in the ID token or the Userinfo response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoMissingUsernameCount": {
          "description": "The number of Userinfo requests made from the broker during request authentication for this OAuth profile where the configured username claim wasn't found in the ID token or Userinfo response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoRequestCount": {
          "description": "The number of requests made to the Userinfo endpoint during request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoResponseInvalidCount": {
          "description": "The number of Userinfo requests made from the broker during request authentication for this OAuth profile with responses that couldn't be parsed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoStatusOkCount": {
          "description": "The number of Userinfo requests made from the broker during request authentication for this OAuth profile with 200 status responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoStatusOtherCount": {
          "description": "The number of Userinfo requests made from the broker during request authentication for this OAuth profile with status responses other than 200.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoSubjectMismatchCount": {
          "description": "The number of Userinfo requests made from the broker during request authentication for this OAuth profile with subject claims that did not match the subject from the ID token.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "usernameClaimName": {
          "description": "The name of the username claim.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "usernameFoundInTokenCount": {
          "description": "The number of time the username was successfully found in the ID token or access token for request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileClientRequiredClaim": {
      "properties": {
        "clientRequiredClaimName": {
          "description": "The name of the ID token claim to verify.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientRequiredClaimValue": {
          "description": "The required claim value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileClientRequiredClaimCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileClientRequiredClaimLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Required Claim object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileClientRequiredClaimCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileClientRequiredClaim"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileClientRequiredClaimLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileClientRequiredClaimsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileClientRequiredClaimCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileClientRequiredClaim"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileClientRequiredClaimLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileCollections": {
      "properties": {
        "clientRequiredClaims": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileCollectionsClientRequiredClaims"
        },
        "resourceServerRequiredClaims": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileCollectionsResourceServerRequiredClaims"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileCollectionsClientRequiredClaims": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clientRequiredClaims collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileCollectionsResourceServerRequiredClaims": {
      "properties": {
        "count": {
          "description": "The total number of objects in the resourceServerRequiredClaims collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileLinks": {
      "properties": {
        "clientRequiredClaimsUri": {
          "description": "The URI of this OAuth Profile's collection of Required Claim objects.",
          "type": "string"
        },
        "resourceServerRequiredClaimsUri": {
          "description": "The URI of this OAuth Profile's collection of Required Claim objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this OAuth Profile object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "resourceServerRequiredClaimName": {
          "description": "The name of the access token claim to verify.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "resourceServerRequiredClaimValue": {
          "description": "The required claim value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Required Claim object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfileResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfile"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProfilesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfile"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProvider": {
      "properties": {
        "audienceClaimName": {
          "description": "The audience claim name, indicating which part of the object to use for determining the audience.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "audienceClaimSource": {
          "description": "The audience claim source, indicating where to search for the audience value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"access-token\" - The OAuth v2 access_token.\n\"id-token\" - The OpenID Connect id_token.\n\"introspection\" - The result of introspecting the OAuth v2 access_token.\n</pre>\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "enum": [
            "access-token",
            "id-token",
            "introspection"
          ],
          "type": "string"
        },
        "audienceClaimValue": {
          "description": "The required audience value for a token to be considered valid.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "audienceValidationEnabled": {
          "description": "Enable or disable audience validation.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "boolean"
        },
        "authenticationSuccessCount": {
          "description": "The number of OAuth Provider client authentications that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "authorizationGroupClaimName": {
          "description": "The authorization group claim name, indicating which part of the object to use for determining the authorization group.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "authorizationGroupClaimSource": {
          "description": "The authorization group claim source, indicating where to search for the authorization group name.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"access-token\" - The OAuth v2 access_token.\n\"id-token\" - The OpenID Connect id_token.\n\"introspection\" - The result of introspecting the OAuth v2 access_token.\n</pre>\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "enum": [
            "access-token",
            "id-token",
            "introspection"
          ],
          "type": "string"
        },
        "authorizationGroupEnabled": {
          "description": "Enable or disable OAuth based authorization. When enabled, the configured authorization type for OAuth clients is overridden.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "boolean"
        },
        "disconnectOnTokenExpirationEnabled": {
          "description": "Enable or disable the disconnection of clients when their tokens expire. Changing this value does not affect existing clients, only new client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enable or disable OAuth Provider client authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "boolean"
        },
        "jwksLastRefreshFailureReason": {
          "description": "The reason for the last JWKS public key refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "jwksLastRefreshFailureTime": {
          "description": "The timestamp of the last JWKS public key refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int32",
          "type": "integer"
        },
        "jwksLastRefreshTime": {
          "description": "The timestamp of the last JWKS public key refresh success.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int32",
          "type": "integer"
        },
        "jwksNextScheduledRefreshTime": {
          "description": "The timestamp of the next scheduled JWKS public key refresh.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int32",
          "type": "integer"
        },
        "jwksRefreshFailureCount": {
          "description": "The number of JWKS public key refresh failures.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "jwksRefreshInterval": {
          "description": "The number of seconds between forced JWKS public key refreshing.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int32",
          "type": "integer"
        },
        "jwksUri": {
          "description": "The URI where the OAuth provider publishes its JWKS public keys.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "loginFailureIncorrectAudienceValueCount": {
          "description": "The number of login failures due to an incorrect audience value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureInvalidAudienceValueCount": {
          "description": "The number of login failures due to an invalid audience value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureInvalidAuthorizationGroupValueCount": {
          "description": "The number of login failures due to an invalid authorization group value (zero-length or non-string).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureInvalidJwtSignatureCount": {
          "description": "The number of login failures due to an invalid JWT signature.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureInvalidUsernameValueCount": {
          "description": "The number of login failures due to an invalid username value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureMismatchedUsernameCount": {
          "description": "The number of login failures due to a mismatched username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureMissingAudienceCount": {
          "description": "The number of login failures due to a missing audience claim.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureMissingJwkCount": {
          "description": "The number of login failures due to a missing JSON Web Key (JWK).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureMissingOrInvalidTokenCount": {
          "description": "The number of login failures due to a missing or invalid token.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureMissingUsernameCount": {
          "description": "The number of login failures due to a missing username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureTokenExpiredCount": {
          "description": "The number of login failures due to a token being expired.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureTokenIntrospectionErroredCount": {
          "description": "The number of login failures due to a token introspection error response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureTokenIntrospectionFailureCount": {
          "description": "The number of login failures due to a failure to complete the token introspection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureTokenIntrospectionHttpsErrorCount": {
          "description": "The number of login failures due to a token introspection HTTPS error.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureTokenIntrospectionInvalidCount": {
          "description": "The number of login failures due to a token introspection response being invalid.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureTokenIntrospectionTimeoutCount": {
          "description": "The number of login failures due to a token introspection timeout.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureTokenNotValidYetCount": {
          "description": "The number of login failures due to a token not being valid yet.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "loginFailureUnsupportedAlgCount": {
          "description": "The number of login failures due to an unsupported algorithm.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "missingAuthorizationGroupCount": {
          "description": "The number of clients that did not provide an authorization group claim value when expected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. Replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "oauthProviderName": {
          "description": "The name of the OAuth Provider.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. Replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "tokenIgnoreTimeLimitsEnabled": {
          "description": "Enable or disable whether to ignore time limits and accept tokens that are not yet valid or are no longer valid.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "boolean"
        },
        "tokenIntrospectionAverageTime": {
          "description": "The one minute average of the time required to complete a token introspection, in milliseconds (ms).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int32",
          "type": "integer"
        },
        "tokenIntrospectionLastFailureReason": {
          "description": "The reason for the last token introspection failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "tokenIntrospectionLastFailureTime": {
          "description": "The timestamp of the last token introspection failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int32",
          "type": "integer"
        },
        "tokenIntrospectionParameterName": {
          "description": "The parameter name used to identify the token during access token introspection. A standards compliant OAuth introspection server expects \"token\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "tokenIntrospectionSuccessCount": {
          "description": "The number of token introspection successes.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        },
        "tokenIntrospectionTimeout": {
          "description": "The maximum time in seconds a token introspection is allowed to take.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "format": "int32",
          "type": "integer"
        },
        "tokenIntrospectionUri": {
          "description": "The token introspection URI of the OAuth authentication server.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "tokenIntrospectionUsername": {
          "description": "The username to use when logging into the token introspection URI.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "usernameClaimName": {
          "description": "The username claim name, indicating which part of the object to use for determining the username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "usernameClaimSource": {
          "description": "The username claim source, indicating where to search for the username value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"access-token\" - The OAuth v2 access_token.\n\"id-token\" - The OpenID Connect id_token.\n\"introspection\" - The result of introspecting the OAuth v2 access_token.\n</pre>\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "enum": [
            "access-token",
            "id-token",
            "introspection"
          ],
          "type": "string"
        },
        "usernameValidateEnabled": {
          "description": "Enable or disable whether the API provided username will be validated against the username calculated from the token(s); the connection attempt is rejected if they differ.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProviderCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProviderLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this OAuth Provider object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProviderResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProviderCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProvider"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAuthenticationOauthProviderLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthenticationOauthProvidersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProviderCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProvider"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthenticationOauthProviderLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthorizationGroup": {
      "properties": {
        "aclProfileName": {
          "description": "The ACL Profile of the Authorization Group.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authorizationGroupName": {
          "description": "The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\\#,lab,com'.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientProfileName": {
          "description": "The Client Profile of the Authorization Group.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable the Authorization Group in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthorizationGroupCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnAuthorizationGroupLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Authorization Group object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnAuthorizationGroupResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnAuthorizationGroupCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnAuthorizationGroup"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnAuthorizationGroupLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnAuthorizationGroupsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthorizationGroupCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthorizationGroup"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnAuthorizationGroupLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridge": {
      "properties": {
        "averageRxByteRate": {
          "description": "The one minute average of the message rate received from the Bridge, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxMsgRate": {
          "description": "The one minute average of the message rate received from the Bridge, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxByteRate": {
          "description": "The one minute average of the message rate transmitted to the Bridge, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxMsgRate": {
          "description": "The one minute average of the message rate transmitted to the Bridge, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "boundToQueue": {
          "description": "Indicates whether the Bridge is bound to the queue in the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "bridgeName": {
          "description": "The name of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "bridgeVirtualRouter": {
          "description": "The virtual router of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary virtual router.\n\"backup\" - The Bridge is used for the backup virtual router.\n\"auto\" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.\n</pre>\n",
          "enum": [
            "primary",
            "backup",
            "auto"
          ],
          "type": "string"
        },
        "clientName": {
          "description": "The name of the Client for the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "compressed": {
          "description": "Indicates whether messages transmitted over the Bridge are compressed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "controlRxByteCount": {
          "description": "The amount of client control messages received from the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "controlRxMsgCount": {
          "description": "The number of client control messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "controlTxByteCount": {
          "description": "The amount of client control messages transmitted to the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "controlTxMsgCount": {
          "description": "The number of client control messages transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "counter": {
          "$ref": "#/definitions/MsgVpnBridgeCounter"
        },
        "dataRxByteCount": {
          "description": "The amount of client data messages received from the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgCount": {
          "description": "The number of client data messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxByteCount": {
          "description": "The amount of client data messages transmitted to the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgCount": {
          "description": "The number of client data messages transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "discardedRxMsgCount": {
          "description": "The number of messages discarded during reception from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "discardedTxMsgCount": {
          "description": "The number of messages discarded during transmission to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "enabled": {
          "description": "Enable or disable the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "encrypted": {
          "description": "Indicates whether messages transmitted over the Bridge are encrypted with TLS.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "establisher": {
          "description": "The establisher of the Bridge connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"local\" - The Bridge connection was established by the local Message VPN.\n\"remote\" - The Bridge connection was established by the remote Message VPN.\n</pre>\n",
          "type": "string"
        },
        "inboundFailureReason": {
          "description": "The reason for the inbound connection failure from the Bridge. If there is no failure reason, an empty string (\"\") is returned.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "inboundState": {
          "description": "The state of the inbound connection from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"init\" - The bridge is down but is initializing.\n\"disabled\" - The bridge is down. It has been disabled by configuration.\n\"prepare-wait-to-connect\" - The bridge is down. It is waiting to connect to the remote broker.\n\"prepare-fetching-dns\" - The bridge is down. The domain name of the remote broker is being resolved.\n\"not-ready-connecting\" - The bridge is down. It is in the process of connecting to the remote broker.\n\"not-ready-handshaking\" - The bridge is down. It has connected to the remote broker, and is in the process of negotiating with it.\n\"not-ready-wait-next\" - The bridge is down. It has failed to connect to a remote broker, and is waiting for the configured remote retry delay to expire before retrying.\n\"not-ready-wait-reuse\" - The bridge is down. It established its own connection to  the remote broker, but determined instead that it should use a pre-existing connection established from that remote broker. It is waiting for its own connection to close before reusing the existing connection.\n\"not-ready-wait-bridge-version-mismatch\" - The bridge is down. The connection failed to connect due to the remote broker presenting an unexpected version.\n\"not-ready-wait-cleanup\" - The bridge is down. Its connection has closed and is in the process of being cleaned up.\n\"ready-subscribing\" - The bridge is up and is attracting traffic. It is in the process of adding configured subscriptions to the  remote broker.\n\"ready-in-sync\" - The bridge is up and is attracting traffic. All configured subscriptions have been added to the remote broker.\n\"stalled\" - The bridge is down. Inbound guaranteed messages are not flowing. Administrative actions may be required to clear this state.\n\"not-applicable\" - The connection is not relevant in the inbound direction.\n</pre>\n",
          "type": "string"
        },
        "lastTxMsgId": {
          "description": "The ID of the last message transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "localInterface": {
          "description": "The physical interface on the local Message VPN host for connecting to the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "localQueueName": {
          "description": "The name of the local queue for the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "loginRxMsgCount": {
          "description": "The number of login request messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "loginTxMsgCount": {
          "description": "The number of login response messages transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "maxTtl": {
          "description": "The maximum time-to-live (TTL) in hops. Messages are discarded if their TTL exceeds this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolRxMsgCount": {
          "description": "The number of guaranteed messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "outboundState": {
          "description": "The state of the outbound connection to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"ready\" - The bridge is up and is delivering traffic.\n\"not-applicable\" - The connection is not relevant in the outbound direction.\n</pre>\n",
          "type": "string"
        },
        "rate": {
          "$ref": "#/definitions/MsgVpnBridgeRate"
        },
        "remoteAddress": {
          "description": "The FQDN or IP address of the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteAuthenticationBasicClientUsername": {
          "description": "The Client Username the Bridge uses to login to the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "remoteAuthenticationClientCertConfigTime": {
          "description": "The timestamp of when the client-certificate was configured.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.28.",
          "format": "int32",
          "type": "integer"
        },
        "remoteAuthenticationClientCertThumbprint": {
          "description": "The thumbprint of the client-certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.28.",
          "type": "string"
        },
        "remoteAuthenticationScheme": {
          "description": "The authentication scheme for the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"basic\" - Basic Authentication Scheme (via username and password).\n\"client-certificate\" - Client Certificate Authentication Scheme (via certificate file or content).\n</pre>\n",
          "enum": [
            "basic",
            "client-certificate"
          ],
          "type": "string"
        },
        "remoteConnectionRetryCount": {
          "description": "The number of retry attempts to establish a connection before moving on to the next remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "remoteConnectionRetryDelay": {
          "description": "The number of seconds the broker waits for the bridge connection to be established before attempting a new connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "remoteDeliverToOnePriority": {
          "description": "The priority for deliver-to-one (DTO) messages transmitted from the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"p1\" - The 1st or highest priority.\n\"p2\" - The 2nd highest priority.\n\"p3\" - The 3rd highest priority.\n\"p4\" - The 4th highest priority.\n\"da\" - Ignore priority and deliver always.\n</pre>\n",
          "enum": [
            "p1",
            "p2",
            "p3",
            "p4",
            "da"
          ],
          "type": "string"
        },
        "remoteMsgVpnName": {
          "description": "The name of the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteRouterName": {
          "description": "The name of the remote broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteTxFlowId": {
          "description": "The ID of the transmit flow for the connected remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "rxByteCount": {
          "description": "The amount of messages received from the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "rxByteRate": {
          "description": "The current message rate received from the Bridge, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "rxConnectionFailureCategory": {
          "description": "The category of the inbound connection failure from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"no-failure\" - There is no bridge failure.\n\"local-configuration-problem\" - The bridge failure is a local configuration problem.\n\"local-operational-state-problem\" - The bridge failure is an operational state problem.\n</pre>\n Available since 2.18.",
          "type": "string"
        },
        "rxMsgCount": {
          "description": "The number of messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgRate": {
          "description": "The current message rate received from the Bridge, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "tlsCipherSuiteList": {
          "description": "The colon-separated list of cipher suites supported for TLS connections to the remote Message VPN. The value \"default\" implies all supported suites ordered from most secure to least secure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "tlsDefaultCipherSuiteList": {
          "description": "Indicates whether the Bridge is configured to use the default cipher-suite list.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "ttlExceededEventRaised": {
          "description": "Indicates whether the TTL (hops) exceeded event has been raised.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "txByteCount": {
          "description": "The amount of messages transmitted to the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "txByteRate": {
          "description": "The current message rate transmitted to the Bridge, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "txMsgCount": {
          "description": "The number of messages transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "txMsgRate": {
          "description": "The current message rate transmitted to the Bridge, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Bridge connected to the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeCollections": {
      "properties": {
        "localSubscriptions": {
          "$ref": "#/definitions/MsgVpnBridgeCollectionsLocalSubscriptions"
        },
        "remoteMsgVpns": {
          "$ref": "#/definitions/MsgVpnBridgeCollectionsRemoteMsgVpns"
        },
        "remoteSubscriptions": {
          "$ref": "#/definitions/MsgVpnBridgeCollectionsRemoteSubscriptions"
        },
        "tlsTrustedCommonNames": {
          "$ref": "#/definitions/MsgVpnBridgeCollectionsTlsTrustedCommonNames"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeCollectionsLocalSubscriptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the localSubscriptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeCollectionsRemoteMsgVpns": {
      "properties": {
        "count": {
          "description": "The total number of objects in the remoteMsgVpns collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeCollectionsRemoteSubscriptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the remoteSubscriptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeCollectionsTlsTrustedCommonNames": {
      "properties": {
        "count": {
          "description": "The total number of objects in the tlsTrustedCommonNames collection. Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeCounter": {
      "description": "The counters for the Bridge. Deprecated since 2.13. All attributes in this object have been moved to the MsgVpnBridge object.",
      "properties": {
        "controlRxByteCount": {
          "description": "The amount of client control messages received from the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "controlRxMsgCount": {
          "description": "The number of client control messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "controlTxByteCount": {
          "description": "The amount of client control messages transmitted to the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "controlTxMsgCount": {
          "description": "The number of client control messages transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxByteCount": {
          "description": "The amount of client data messages received from the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgCount": {
          "description": "The number of client data messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxByteCount": {
          "description": "The amount of client data messages transmitted to the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgCount": {
          "description": "The number of client data messages transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "discardedRxMsgCount": {
          "description": "The number of messages discarded during reception from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "discardedTxMsgCount": {
          "description": "The number of messages discarded during transmission to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "loginRxMsgCount": {
          "description": "The number of login request messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "loginTxMsgCount": {
          "description": "The number of login response messages transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolRxMsgCount": {
          "description": "The number of guaranteed messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "rxByteCount": {
          "description": "The amount of messages received from the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgCount": {
          "description": "The number of messages received from the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "txByteCount": {
          "description": "The amount of messages transmitted to the Bridge, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "txMsgCount": {
          "description": "The number of messages transmitted to the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeLinks": {
      "properties": {
        "localSubscriptionsUri": {
          "description": "The URI of this Bridge's collection of Bridge Local Subscriptions objects.",
          "type": "string"
        },
        "remoteMsgVpnsUri": {
          "description": "The URI of this Bridge's collection of Remote Message VPN objects.",
          "type": "string"
        },
        "remoteSubscriptionsUri": {
          "description": "The URI of this Bridge's collection of Remote Subscription objects.",
          "type": "string"
        },
        "tlsTrustedCommonNamesUri": {
          "description": "The URI of this Bridge's collection of Trusted Common Name objects. Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Bridge object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeLocalSubscription": {
      "properties": {
        "bridgeName": {
          "description": "The name of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "bridgeVirtualRouter": {
          "description": "The virtual router of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary virtual router.\n\"backup\" - The Bridge is used for the backup virtual router.\n\"auto\" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.\n</pre>\n",
          "enum": [
            "primary",
            "backup",
            "auto"
          ],
          "type": "string"
        },
        "dtoPriority": {
          "description": "The priority of the Bridge local subscription topic for receiving deliver-to-one (DTO) messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"p1\" - The 1st or highest priority.\n\"p2\" - The 2nd highest priority.\n\"p3\" - The 3rd highest priority.\n\"p4\" - The 4th highest priority.\n\"da\" - Ignore priority and deliver always.\n</pre>\n",
          "type": "string"
        },
        "localSubscriptionTopic": {
          "description": "The topic of the Bridge local subscription.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeLocalSubscriptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnBridgeLocalSubscriptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Bridge Local Subscriptions object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeLocalSubscriptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnBridgeLocalSubscriptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnBridgeLocalSubscription"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnBridgeLocalSubscriptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgeLocalSubscriptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeLocalSubscriptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeLocalSubscription"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeLocalSubscriptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgeRate": {
      "description": "The rates for the Bridge. Deprecated since 2.13. All attributes in this object have been moved to the MsgVpnBridge object.",
      "properties": {
        "averageRxByteRate": {
          "description": "The one minute average of the message rate received from the Bridge, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxMsgRate": {
          "description": "The one minute average of the message rate received from the Bridge, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxByteRate": {
          "description": "The one minute average of the message rate transmitted to the Bridge, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxMsgRate": {
          "description": "The one minute average of the message rate transmitted to the Bridge, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "rxByteRate": {
          "description": "The current message rate received from the Bridge, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgRate": {
          "description": "The current message rate received from the Bridge, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "txByteRate": {
          "description": "The current message rate transmitted to the Bridge, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        },
        "txMsgRate": {
          "description": "The current message rate transmitted to the Bridge, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeRemoteMsgVpn": {
      "properties": {
        "boundToQueue": {
          "description": "Indicates whether the Bridge is bound to the queue in the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "bridgeName": {
          "description": "The name of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "bridgeVirtualRouter": {
          "description": "The virtual router of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary virtual router.\n\"backup\" - The Bridge is used for the backup virtual router.\n\"auto\" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.\n</pre>\n",
          "enum": [
            "primary",
            "backup",
            "auto"
          ],
          "type": "string"
        },
        "clientUsername": {
          "description": "The Client Username the Bridge uses to login to the remote Message VPN. This per remote Message VPN value overrides the value provided for the Bridge overall.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "compressedDataEnabled": {
          "description": "Enable or disable data compression for the remote Message VPN connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "connectOrder": {
          "description": "The preference given to incoming connections from remote Message VPN hosts, from 1 (highest priority) to 4 (lowest priority).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "egressFlowWindowSize": {
          "description": "The number of outstanding guaranteed messages that can be transmitted over the remote Message VPN connection before an acknowledgment is received.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "enabled": {
          "description": "Enable or disable the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "lastConnectionFailureReason": {
          "description": "The reason for the last connection failure to the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastQueueBindFailureReason": {
          "description": "The reason for the last queue bind failure in the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "queueBinding": {
          "description": "The queue binding of the Bridge in the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "queueBoundUptime": {
          "description": "The amount of time in seconds since the queue was bound in the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "remoteMsgVpnInterface": {
          "description": "The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteMsgVpnLocation": {
          "description": "The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with \"v:\").\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteMsgVpnName": {
          "description": "The name of the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "tlsEnabled": {
          "description": "Enable or disable encryption (TLS) for the remote Message VPN connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "unidirectionalClientProfile": {
          "description": "The Client Profile for the unidirectional Bridge of the remote Message VPN. The Client Profile must exist in the local Message VPN, and it is used only for the TCP parameters. Note that the default client profile has a TCP maximum window size of 2 MB.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "up": {
          "description": "Indicates whether the connection to the remote Message VPN is up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeRemoteMsgVpnCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnBridgeRemoteMsgVpnLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Remote Message VPN object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeRemoteMsgVpnResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnBridgeRemoteMsgVpnCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnBridgeRemoteMsgVpn"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnBridgeRemoteMsgVpnLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgeRemoteMsgVpnsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeRemoteMsgVpnCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeRemoteMsgVpn"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeRemoteMsgVpnLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgeRemoteSubscription": {
      "properties": {
        "bridgeName": {
          "description": "The name of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "bridgeVirtualRouter": {
          "description": "The virtual router of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary virtual router.\n\"backup\" - The Bridge is used for the backup virtual router.\n\"auto\" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.\n</pre>\n",
          "enum": [
            "primary",
            "backup",
            "auto"
          ],
          "type": "string"
        },
        "deliverAlwaysEnabled": {
          "description": "Enable or disable deliver-always for the Bridge remote subscription topic instead of a deliver-to-one remote priority. A given topic for the Bridge may be deliver-to-one or deliver-always but not both.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteSubscriptionTopic": {
          "description": "The topic of the Bridge remote subscription.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeRemoteSubscriptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnBridgeRemoteSubscriptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Remote Subscription object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeRemoteSubscriptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnBridgeRemoteSubscriptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnBridgeRemoteSubscription"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnBridgeRemoteSubscriptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgeRemoteSubscriptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeRemoteSubscriptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeRemoteSubscription"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeRemoteSubscriptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgeResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnBridgeCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnBridge"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnBridgeLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgeTlsTrustedCommonName": {
      "properties": {
        "bridgeName": {
          "description": "The name of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "bridgeVirtualRouter": {
          "description": "The virtual router of the Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary virtual router.\n\"backup\" - The Bridge is used for the backup virtual router.\n\"auto\" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.\n</pre>\n Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "enum": [
            "primary",
            "backup",
            "auto"
          ],
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "tlsTrustedCommonName": {
          "description": "The expected trusted common name of the remote certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeTlsTrustedCommonNameCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnBridgeTlsTrustedCommonNameLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Trusted Common Name object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnBridgeTlsTrustedCommonNameResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnBridgeTlsTrustedCommonNameCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnBridgeTlsTrustedCommonName"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnBridgeTlsTrustedCommonNameLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgeTlsTrustedCommonNamesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeTlsTrustedCommonNameCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeTlsTrustedCommonName"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeTlsTrustedCommonNameLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnBridgesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridge"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnBridgeLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnCertMatchingRule": {
      "properties": {
        "enabled": {
          "description": "Enable or disable a certificate matching rule.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "ruleName": {
          "description": "The name of the rule.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleAttributeFilter": {
      "properties": {
        "attributeName": {
          "description": "Client Username Attribute to be tested.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "attributeValue": {
          "description": "Expected attribute value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "filterName": {
          "description": "The name of the filter.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "ruleName": {
          "description": "The name of the rule.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleAttributeFilterCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnCertMatchingRuleAttributeFilterLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Certificate Matching Rule Attribute Filter object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleAttributeFilterResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleAttributeFilterCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleAttributeFilter"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleAttributeFilterLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnCertMatchingRuleAttributeFiltersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRuleAttributeFilterCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRuleAttributeFilter"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRuleAttributeFilterLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnCertMatchingRuleCollections": {
      "properties": {
        "attributeFilters": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleCollectionsAttributeFilters"
        },
        "conditions": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleCollectionsConditions"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleCollectionsAttributeFilters": {
      "properties": {
        "count": {
          "description": "The total number of objects in the attributeFilters collection. Available since 2.28.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleCollectionsConditions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the conditions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleCondition": {
      "properties": {
        "attribute": {
          "description": "Client Username Attribute to be compared with certificate content. Either an attribute or an expression must be provided on creation, but not both.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "comparisonMode": {
          "description": "The comparison mode to use.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"matches-attribute\" - Certificate field matches an attribute value exactly.\n\"matches-expression\" - Certificate field matches a glob expression.\n</pre>\n",
          "type": "string"
        },
        "expression": {
          "description": "Glob expression to be matched with certificate content. Either an expression or an attribute must be provided on creation, but not both.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "ruleName": {
          "description": "The name of the rule.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "source": {
          "description": "Certificate field to be compared with the Attribute.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"certificate-thumbprint\" - The attribute is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.\n\"common-name\" - The attribute is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.\n\"common-name-last\" - The attribute is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.\n\"subject-alternate-name-msupn\" - The attribute is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.\n\"uid\" - The attribute is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.\n\"uid-last\" - The attribute is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.\n\"org-unit\" - The attribute is extracted from the certificate's first instance of the Org Unit attribute in the Subject DN.\n\"org-unit-last\" - The attribute is extracted from the certificate's last instance of the Org Unit attribute in the Subject DN.\n\"issuer\" - The attribute is extracted from the certificate's Issuer DN.\n\"subject\" - The attribute is extracted from the certificate's Subject DN.\n\"serial-number\" - The attribute is extracted from the certificate's Serial Number.\n\"dns-name\" - The attribute is extracted from the certificate's Subject Alt Name DNS Name.\n\"ip-address\" - The attribute is extracted from the certificate's Subject Alt Name IP Address.\n</pre>\n",
          "enum": [
            "certificate-thumbprint",
            "common-name",
            "common-name-last",
            "subject-alternate-name-msupn",
            "uid",
            "uid-last",
            "org-unit",
            "org-unit-last",
            "issuer",
            "subject",
            "serial-number",
            "dns-name",
            "ip-address"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleConditionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnCertMatchingRuleConditionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Certificate Matching Rule Condition object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleConditionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleConditionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleCondition"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleConditionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnCertMatchingRuleConditionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRuleConditionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRuleCondition"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRuleConditionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnCertMatchingRuleLinks": {
      "properties": {
        "attributeFiltersUri": {
          "description": "The URI of this Certificate Matching Rule's collection of Certificate Matching Rule Attribute Filter objects. Available since 2.28.",
          "type": "string"
        },
        "conditionsUri": {
          "description": "The URI of this Certificate Matching Rule's collection of Certificate Matching Rule Condition objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Certificate Matching Rule object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnCertMatchingRuleResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnCertMatchingRule"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnCertMatchingRuleLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnCertMatchingRulesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRuleCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRule"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnCertMatchingRuleLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClient": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the access control list (ACL) profile of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "aliasedFromMsgVpnName": {
          "description": "The name of the original MsgVpn which the client signaled in.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.14.",
          "type": "string"
        },
        "alreadyBoundBindFailureCount": {
          "description": "The number of Client bind failures due to endpoint being already bound.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "amqpLinkCount": {
          "description": "The number of AMQP links currently attached by the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.46.",
          "format": "int64",
          "type": "integer"
        },
        "amqpSessionCount": {
          "description": "The number of AMQP sessions currently begun by the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.46.",
          "format": "int64",
          "type": "integer"
        },
        "authorizationGroupName": {
          "description": "The name of the authorization group of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "averageRxByteRate": {
          "description": "The one minute average of the message rate received from the Client, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageRxMsgRate": {
          "description": "The one minute average of the message rate received from the Client, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageTxByteRate": {
          "description": "The one minute average of the message rate transmitted to the Client, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageTxMsgRate": {
          "description": "The one minute average of the message rate transmitted to the Client, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "bindRequestCount": {
          "description": "The number of Client requests to bind to an endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "bindSuccessCount": {
          "description": "The number of successful Client requests to bind to an endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "clientAddress": {
          "description": "The IP address and port of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientId": {
          "description": "The identifier (ID) of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientProfileName": {
          "description": "The name of the client profile of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientUsername": {
          "description": "The client username of the Client used for authorization.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "controlRxByteCount": {
          "description": "The amount of client control messages received from the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "controlRxMsgCount": {
          "description": "The number of client control messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "controlTxByteCount": {
          "description": "The amount of client control messages transmitted to the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "controlTxMsgCount": {
          "description": "The number of client control messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "cutThroughDeniedBindFailureCount": {
          "description": "The number of Client bind failures due to being denied cut-through forwarding.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "dataRxByteCount": {
          "description": "The amount of client data messages received from the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgCount": {
          "description": "The number of client data messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "dataTxByteCount": {
          "description": "The amount of client data messages transmitted to the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgCount": {
          "description": "The number of client data messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "description": {
          "description": "The description text of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "disabledBindFailureCount": {
          "description": "The number of Client bind failures due to endpoint being disabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "dtoLocalPriority": {
          "description": "The priority of the Client's subscriptions for receiving deliver-to-one (DTO) messages published on the local broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "dtoNetworkPriority": {
          "description": "The priority of the Client's subscriptions for receiving deliver-to-one (DTO) messages published on a remote broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "eliding": {
          "description": "Indicates whether message eliding is enabled for the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "elidingTopicCount": {
          "description": "The number of topics requiring message eliding for the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "elidingTopicPeakCount": {
          "description": "The peak number of topics requiring message eliding for the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedDeniedBindFailureCount": {
          "description": "The number of Client bind failures due to being denied guaranteed messaging.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "invalidSelectorBindFailureCount": {
          "description": "The number of Client bind failures due to an invalid selector.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "keepalive": {
          "description": "Indicates whether keepalive messages from the Client are received by the broker. Applicable for SMF and MQTT clients only.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.19.",
          "type": "boolean"
        },
        "keepaliveEffectiveTimeout": {
          "description": "The maximum period of time the broker will accept inactivity from the Client before disconnecting, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.19.",
          "format": "int32",
          "type": "integer"
        },
        "largeMsgEventRaised": {
          "description": "Indicates whether the large-message event has been raised for the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "loginRxMsgCount": {
          "description": "The number of login request messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "loginTxMsgCount": {
          "description": "The number of login response messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxBindCountExceededBindFailureCount": {
          "description": "The number of Client bind failures due to the endpoint maximum bind count being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxElidingTopicCountEventRaised": {
          "description": "Indicates whether the max-eliding-topic-count event has been raised for the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "mqttConnackErrorTxCount": {
          "description": "The number of MQTT connect acknowledgment (CONNACK) refused response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttConnackTxCount": {
          "description": "The number of MQTT connect acknowledgment (CONNACK) accepted response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttConnectRxCount": {
          "description": "The number of MQTT connect (CONNECT) request packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttDisconnectRxCount": {
          "description": "The number of MQTT disconnect (DISCONNECT) request packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPingreqRxCount": {
          "description": "The number of MQTT ping request (PINGREQ) packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPingrespTxCount": {
          "description": "The number of MQTT ping response (PINGRESP) packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubackRxCount": {
          "description": "The number of MQTT publish acknowledgment (PUBACK) response packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubackTxCount": {
          "description": "The number of MQTT publish acknowledgment (PUBACK) response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubcompTxCount": {
          "description": "The number of MQTT publish complete (PUBCOMP) packets transmitted to the Client in response to a PUBREL packet. These packets are the fourth and final packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos0RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 0 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos0TxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets transmitted to the Client for QoS 0 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos1RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 1 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos1TxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets transmitted to the Client for QoS 1 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos2RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 2 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubrecTxCount": {
          "description": "The number of MQTT publish received (PUBREC) packets transmitted to the Client in response to a PUBLISH packet with QoS 2. These packets are the second packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubrelRxCount": {
          "description": "The number of MQTT publish release (PUBREL) packets received from the Client in response to a PUBREC packet. These packets are the third packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttSubackErrorTxCount": {
          "description": "The number of MQTT subscribe acknowledgment (SUBACK) failure response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttSubackTxCount": {
          "description": "The number of MQTT subscribe acknowledgment (SUBACK) response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttSubscribeRxCount": {
          "description": "The number of MQTT subscribe (SUBSCRIBE) request packets received from the Client to create one or more topic subscriptions.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttUnsubackTxCount": {
          "description": "The number of MQTT unsubscribe acknowledgment (UNSUBACK) response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "mqttUnsubscribeRxCount": {
          "description": "The number of MQTT unsubscribe (UNSUBSCRIBE) request packets received from the Client to remove one or more topic subscriptions.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolCongestionRxDiscardedMsgCount": {
          "description": "The number of messages from the Client discarded due to message spool congestion primarily caused by message promotion.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolRxDiscardedMsgCount": {
          "description": "The number of messages from the Client discarded by the message spool.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "noLocalDelivery": {
          "description": "Indicates whether not to deliver messages to the Client if it published them.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "noSubscriptionMatchRxDiscardedMsgCount": {
          "description": "The number of messages from the Client discarded due to no matching subscription found.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "originalClientUsername": {
          "description": "The original value of the client username used for Client authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "otherBindFailureCount": {
          "description": "The number of Client bind failures due to other reasons.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "platform": {
          "description": "The platform the Client application software was built for, which may include the OS and API type.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "publishTopicAclRxDiscardedMsgCount": {
          "description": "The number of messages from the Client discarded due to the publish topic being denied by the Access Control List (ACL) profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpRequestRxByteCount": {
          "description": "The amount of HTTP request messages received from the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpRequestRxMsgCount": {
          "description": "The number of HTTP request messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpRequestTxByteCount": {
          "description": "The amount of HTTP request messages transmitted to the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpRequestTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseErrorRxMsgCount": {
          "description": "The number of HTTP client/server error response messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseErrorTxMsgCount": {
          "description": "The number of HTTP client/server error response messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseRxByteCount": {
          "description": "The amount of HTTP response messages received from the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseRxMsgCount": {
          "description": "The number of HTTP response messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseSuccessRxMsgCount": {
          "description": "The number of HTTP successful response messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseSuccessTxMsgCount": {
          "description": "The number of HTTP successful response messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseTimeoutRxMsgCount": {
          "description": "The number of HTTP wait for reply timeout response messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseTimeoutTxMsgCount": {
          "description": "The number of HTTP wait for reply timeout response messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseTxByteCount": {
          "description": "The amount of HTTP response messages transmitted to the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "restHttpResponseTxMsgCount": {
          "description": "The number of HTTP response messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxByteCount": {
          "description": "The amount of messages received from the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxByteRate": {
          "description": "The current message rate received from the Client, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxDiscardedMsgCount": {
          "description": "The number of messages discarded during reception from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgCount": {
          "description": "The number of messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgRate": {
          "description": "The current message rate received from the Client, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "scheduledDisconnectTime": {
          "description": "The timestamp of when the Client will be disconnected by the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.13.",
          "format": "int32",
          "type": "integer"
        },
        "slowSubscriber": {
          "description": "Indicates whether the Client is a slow subscriber and blocks for a few seconds when receiving messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "softwareDate": {
          "description": "The date the Client application software was built.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "softwareVersion": {
          "description": "The version of the Client application software.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "tlsCipherDescription": {
          "description": "The description of the TLS cipher used by the Client, which may include cipher name, key exchange and encryption algorithms.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "tlsDowngradedToPlainText": {
          "description": "Indicates whether the Client TLS connection was downgraded to plain-text to increase performance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "tlsVersion": {
          "description": "The version of TLS used by the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "topicParseErrorRxDiscardedMsgCount": {
          "description": "The number of messages from the Client discarded due to an error while parsing the publish topic.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txByteCount": {
          "description": "The amount of messages transmitted to the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txByteRate": {
          "description": "The current message rate transmitted to the Client, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txDiscardedMsgCount": {
          "description": "The number of messages discarded during transmission to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txMsgCount": {
          "description": "The number of messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txMsgRate": {
          "description": "The current message rate transmitted to the Client, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Client connected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "user": {
          "description": "The user description for the Client, which may include computer name and process ID.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "virtualRouter": {
          "description": "The virtual router used by the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The Client is using the primary virtual router.\n\"backup\" - The Client is using the backup virtual router.\n\"internal\" - The Client is using the internal virtual router.\n\"unknown\" - The Client virtual router is unknown.\n</pre>\n",
          "type": "string"
        },
        "webInactiveTimeout": {
          "description": "The maximum web transport timeout for the Client being inactive, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "webMaxPayload": {
          "description": "The maximum web transport message payload size which excludes the size of the message header, in bytes.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webParseErrorRxDiscardedMsgCount": {
          "description": "The number of messages from the Client discarded due to an error while parsing the web message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webRemainingTimeout": {
          "description": "The remaining web transport timeout for the Client being inactive, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "webRxByteCount": {
          "description": "The amount of web transport messages received from the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webRxEncoding": {
          "description": "The type of encoding used during reception from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"binary\" - The Client is using binary encoding.\n\"base64\" - The Client is using base64 encoding.\n\"illegal\" - The Client is using an illegal encoding type.\n</pre>\n",
          "type": "string"
        },
        "webRxMsgCount": {
          "description": "The number of web transport messages received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webRxProtocol": {
          "description": "The type of web transport used during reception from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"ws-binary\" - The Client is using WebSocket binary transport.\n\"http-binary-streaming\" - The Client is using HTTP binary streaming transport.\n\"http-binary\" - The Client is using HTTP binary transport.\n\"http-base64\" - The Client is using HTTP base64 transport.\n</pre>\n",
          "type": "string"
        },
        "webRxRequestCount": {
          "description": "The number of web transport requests received from the Client (HTTP only). Not available for WebSockets.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webRxResponseCount": {
          "description": "The number of web transport responses transmitted to the Client on the receive connection (HTTP only). Not available for WebSockets.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webRxTcpState": {
          "description": "The TCP state of the receive connection from the Client. When fully operational, should be: established. See RFC 793 for further details.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"closed\" - No connection state at all.\n\"listen\" - Waiting for a connection request from any remote TCP and port.\n\"syn-sent\" - Waiting for a matching connection request after having sent a connection request.\n\"syn-received\" - Waiting for a confirming connection request acknowledgment after having both received and sent a connection request.\n\"established\" - An open connection, data received can be delivered to the user.\n\"close-wait\" - Waiting for a connection termination request from the local user.\n\"fin-wait-1\" - Waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent.\n\"closing\" - Waiting for a connection termination request acknowledgment from the remote TCP.\n\"last-ack\" - Waiting for an acknowledgment of the connection termination request previously sent to the remote TCP.\n\"fin-wait-2\" - Waiting for a connection termination request from the remote TCP.\n\"time-wait\" - Waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request.\n</pre>\n",
          "type": "string"
        },
        "webRxTlsCipherDescription": {
          "description": "The description of the TLS cipher received from the Client, which may include cipher name, key exchange and encryption algorithms.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "webRxTlsVersion": {
          "description": "The version of TLS used during reception from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "webSessionId": {
          "description": "The identifier (ID) of the web transport session for the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "webTxByteCount": {
          "description": "The amount of web transport messages transmitted to the Client, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webTxEncoding": {
          "description": "The type of encoding used during transmission to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"binary\" - The Client is using binary encoding.\n\"base64\" - The Client is using base64 encoding.\n\"illegal\" - The Client is using an illegal encoding type.\n</pre>\n",
          "type": "string"
        },
        "webTxMsgCount": {
          "description": "The number of web transport messages transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webTxProtocol": {
          "description": "The type of web transport used during transmission to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"ws-binary\" - The Client is using WebSocket binary transport.\n\"http-binary-streaming\" - The Client is using HTTP binary streaming transport.\n\"http-binary\" - The Client is using HTTP binary transport.\n\"http-base64\" - The Client is using HTTP base64 transport.\n</pre>\n",
          "type": "string"
        },
        "webTxRequestCount": {
          "description": "The number of web transport requests transmitted to the Client (HTTP only). Not available for WebSockets.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webTxResponseCount": {
          "description": "The number of web transport responses received from the Client on the transmit connection (HTTP only). Not available for WebSockets.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "webTxTcpState": {
          "description": "The TCP state of the transmit connection to the Client. When fully operational, should be: established. See RFC 793 for further details.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"closed\" - No connection state at all.\n\"listen\" - Waiting for a connection request from any remote TCP and port.\n\"syn-sent\" - Waiting for a matching connection request after having sent a connection request.\n\"syn-received\" - Waiting for a confirming connection request acknowledgment after having both received and sent a connection request.\n\"established\" - An open connection, data received can be delivered to the user.\n\"close-wait\" - Waiting for a connection termination request from the local user.\n\"fin-wait-1\" - Waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent.\n\"closing\" - Waiting for a connection termination request acknowledgment from the remote TCP.\n\"last-ack\" - Waiting for an acknowledgment of the connection termination request previously sent to the remote TCP.\n\"fin-wait-2\" - Waiting for a connection termination request from the remote TCP.\n\"time-wait\" - Waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request.\n</pre>\n",
          "type": "string"
        },
        "webTxTlsCipherDescription": {
          "description": "The description of the TLS cipher transmitted to the Client, which may include cipher name, key exchange and encryption algorithms.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "webTxTlsVersion": {
          "description": "The version of TLS used during transmission to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientCollections": {
      "properties": {
        "connections": {
          "$ref": "#/definitions/MsgVpnClientCollectionsConnections"
        },
        "rxFlows": {
          "$ref": "#/definitions/MsgVpnClientCollectionsRxFlows"
        },
        "subscriptions": {
          "$ref": "#/definitions/MsgVpnClientCollectionsSubscriptions"
        },
        "transactedSessions": {
          "$ref": "#/definitions/MsgVpnClientCollectionsTransactedSessions"
        },
        "txFlows": {
          "$ref": "#/definitions/MsgVpnClientCollectionsTxFlows"
        }
      },
      "type": "object"
    },
    "MsgVpnClientCollectionsConnections": {
      "properties": {
        "count": {
          "description": "The total number of objects in the connections collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientCollectionsRxFlows": {
      "properties": {
        "count": {
          "description": "The total number of objects in the rxFlows collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientCollectionsSubscriptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the subscriptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientCollectionsTransactedSessions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the transactedSessions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientCollectionsTxFlows": {
      "properties": {
        "count": {
          "description": "The total number of objects in the txFlows collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientConnection": {
      "properties": {
        "clientAddress": {
          "description": "The IP address and TCP port on the Client side of the Client Connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "compression": {
          "description": "Indicates whether compression is enabled for the Client Connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "encryption": {
          "description": "Indicates whether encryption (TLS) is enabled for the Client Connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "fastRetransmitCount": {
          "description": "The number of TCP fast retransmits due to duplicate acknowledgments (ACKs). See RFC 5681 for further details.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "rxQueueByteCount": {
          "description": "The number of bytes currently in the receive queue for the Client Connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "segmentReceivedOutOfOrderCount": {
          "description": "The number of TCP segments received from the Client Connection out of order.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "smoothedRoundTripTime": {
          "description": "The TCP smoothed round-trip time (SRTT) for the Client Connection, in nanoseconds. See RFC 2988 for further details.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "tcpState": {
          "description": "The TCP state of the Client Connection. When fully operational, should be: established. See RFC 793 for further details.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"closed\" - No connection state at all.\n\"listen\" - Waiting for a connection request from any remote TCP and port.\n\"syn-sent\" - Waiting for a matching connection request after having sent a connection request.\n\"syn-received\" - Waiting for a confirming connection request acknowledgment after having both received and sent a connection request.\n\"established\" - An open connection, data received can be delivered to the user.\n\"close-wait\" - Waiting for a connection termination request from the local user.\n\"fin-wait-1\" - Waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent.\n\"closing\" - Waiting for a connection termination request acknowledgment from the remote TCP.\n\"last-ack\" - Waiting for an acknowledgment of the connection termination request previously sent to the remote TCP.\n\"fin-wait-2\" - Waiting for a connection termination request from the remote TCP.\n\"time-wait\" - Waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request.\n</pre>\n",
          "type": "string"
        },
        "timedRetransmitCount": {
          "description": "The number of TCP segments retransmitted due to timeout awaiting an acknowledgment (ACK). See RFC 793 for further details.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "txQueueByteCount": {
          "description": "The number of bytes currently in the transmit queue for the Client Connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Client Connection was established.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientConnectionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnClientConnectionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Client Connection object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientConnectionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientConnectionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClientConnection"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientConnectionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientConnectionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientConnectionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientConnection"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientConnectionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientLinks": {
      "properties": {
        "connectionsUri": {
          "description": "The URI of this Client's collection of Client Connection objects.",
          "type": "string"
        },
        "rxFlowsUri": {
          "description": "The URI of this Client's collection of Client Receive Flow objects.",
          "type": "string"
        },
        "subscriptionsUri": {
          "description": "The URI of this Client's collection of Client Subscription objects.",
          "type": "string"
        },
        "transactedSessionsUri": {
          "description": "The URI of this Client's collection of Client Transacted Session objects.",
          "type": "string"
        },
        "txFlowsUri": {
          "description": "The URI of this Client's collection of Client Transmit Flow objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Client object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfile": {
      "properties": {
        "allowBridgeConnectionsEnabled": {
          "description": "Enable or disable allowing Bridge clients using the Client Profile to connect. Changing this setting does not affect existing Bridge client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "allowCutThroughForwardingEnabled": {
          "description": "Enable or disable allowing clients using the Client Profile to bind to endpoints with the cut-through forwarding delivery mode. Changing this value does not affect existing client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.22. This attribute has been deprecated. Please visit the Solace Product Lifecycle Policy web page for details on deprecated features.",
          "type": "boolean"
        },
        "allowGuaranteedEndpointCreateDurability": {
          "description": "The types of Queues and Topic Endpoints that clients using the client-profile can create. Changing this value does not affect existing client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"all\" - Client can create any type of endpoint.\n\"durable\" - Client can create only durable endpoints.\n\"non-durable\" - Client can create only non-durable endpoints.\n</pre>\n Available since 2.14.",
          "enum": [
            "all",
            "durable",
            "non-durable"
          ],
          "type": "string"
        },
        "allowGuaranteedEndpointCreateEnabled": {
          "description": "Enable or disable allowing clients using the Client Profile to create topic endpoints or queues. Changing this value does not affect existing client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "allowGuaranteedMsgReceiveEnabled": {
          "description": "Enable or disable allowing clients using the Client Profile to receive guaranteed messages. Changing this setting does not affect existing client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "allowGuaranteedMsgSendEnabled": {
          "description": "Enable or disable allowing clients using the Client Profile to send guaranteed messages. Changing this setting does not affect existing client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "allowSharedSubscriptionsEnabled": {
          "description": "Enable or disable allowing shared subscriptions. Changing this setting does not affect existing subscriptions.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "allowTransactedSessionsEnabled": {
          "description": "Enable or disable allowing clients using the Client Profile to establish transacted sessions. Changing this setting does not affect existing client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "apiQueueManagementCopyFromOnCreateName": {
          "description": "The name of a queue to copy settings from when a new queue is created by a client using the Client Profile. The referenced queue must exist in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.14. This attribute has been replaced with `apiQueueManagementCopyFromOnCreateTemplateName`.",
          "type": "string"
        },
        "apiQueueManagementCopyFromOnCreateTemplateName": {
          "description": "The name of a queue template to copy settings from when a new queue is created by a client using the Client Profile. If the referenced queue template does not exist, queue creation will fail when it tries to resolve this template.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "type": "string"
        },
        "apiTopicEndpointManagementCopyFromOnCreateName": {
          "description": "The name of a topic endpoint to copy settings from when a new topic endpoint is created by a client using the Client Profile. The referenced topic endpoint must exist in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Deprecated since 2.14. This attribute has been replaced with `apiTopicEndpointManagementCopyFromOnCreateTemplateName`.",
          "type": "string"
        },
        "apiTopicEndpointManagementCopyFromOnCreateTemplateName": {
          "description": "The name of a topic endpoint template to copy settings from when a new topic endpoint is created by a client using the Client Profile. If the referenced topic endpoint template does not exist, topic endpoint creation will fail when it tries to resolve this template.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "type": "string"
        },
        "clientProfileName": {
          "description": "The name of the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "compressionEnabled": {
          "description": "Enable or disable allowing clients using the Client Profile to use compression.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "elidingDelay": {
          "description": "The amount of time to delay the delivery of messages to clients using the Client Profile after the initial message has been delivered (the eliding delay interval), in milliseconds. A value of 0 means there is no delay in delivering messages to clients.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "elidingEnabled": {
          "description": "Enable or disable message eliding for clients using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "elidingMaxTopicCount": {
          "description": "The maximum number of topics tracked for message eliding per client connection using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "eventClientProvisionedEndpointSpoolUsageThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventClientProvisionedEndpointSpoolUsageThreshold"
        },
        "eventConnectionCountPerClientUsernameThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventConnectionCountPerClientUsernameThreshold"
        },
        "eventEgressFlowCountThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventEgressFlowCountThreshold"
        },
        "eventEndpointCountPerClientUsernameThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventEndpointCountPerClientUsernameThreshold"
        },
        "eventIngressFlowCountThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventIngressFlowCountThreshold"
        },
        "eventServiceSmfConnectionCountPerClientUsernameThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventServiceSmfConnectionCountPerClientUsernameThreshold"
        },
        "eventServiceWebConnectionCountPerClientUsernameThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventServiceWebConnectionCountPerClientUsernameThreshold"
        },
        "eventSubscriptionCountThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventSubscriptionCountThreshold"
        },
        "eventTransactedSessionCountThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventTransactedSessionCountThreshold"
        },
        "eventTransactionCountThreshold": {
          "$ref": "#/definitions/MsgVpnClientProfileEventTransactionCountThreshold"
        },
        "maxAmqpLinkCount": {
          "description": "The maximum number of AMQP links per AMQP client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "format": "int32",
          "type": "integer"
        },
        "maxConnectionCountPerClientUsername": {
          "description": "The maximum number of client connections per Client Username using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxEffectiveEndpointCount": {
          "description": "The effective maximum number of queues and topic endpoints per Client Username using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveRxFlowCount": {
          "description": "The effective maximum number of receive flows per client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveSubscriptionCount": {
          "description": "The effective maximum number of subscriptions per client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveTransactedSessionCount": {
          "description": "The effective maximum number of transacted sessions per client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveTransactionCount": {
          "description": "The effective maximum number of transactions per client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEffectiveTxFlowCount": {
          "description": "The effective maximum number of transmit flows per client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxEgressFlowCount": {
          "description": "The maximum number of transmit flows that can be created by one client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxEndpointCountPerClientUsername": {
          "description": "The maximum number of queues and topic endpoints that can be created by clients with the same Client Username using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxIngressFlowCount": {
          "description": "The maximum number of receive flows that can be created by one client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgsPerTransaction": {
          "description": "The maximum number of publisher and consumer messages combined that is allowed within a transaction for each client associated with this client-profile. Exceeding this limit will result in a transaction prepare or commit failure. Changing this value during operation will not affect existing sessions. It is only validated at transaction creation time. Large transactions consume more resources and are more likely to require retrieving messages from the ADB or from disk to process the transaction prepare or commit requests. The transaction processing rate may diminish if a large number of messages must be retrieved from the ADB or from disk. Care should be taken to not use excessively large transactions needlessly to avoid exceeding resource limits and to avoid reducing the overall broker performance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.20.",
          "format": "int32",
          "type": "integer"
        },
        "maxSubscriptionCount": {
          "description": "The maximum number of subscriptions per client using the Client Profile. This limit is not enforced when a client adds a subscription to an endpoint, except for MQTT QoS 1 subscriptions. In addition, this limit is not enforced when a subscription is added using a management interface, such as CLI or SEMP.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTransactedSessionCount": {
          "description": "The maximum number of transacted sessions that can be created by one client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTransactionCount": {
          "description": "The maximum number of transactions that can be created by one client using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "queueControl1MaxDepth": {
          "description": "The maximum depth of the \"Control 1\" (C-1) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueControl1MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Control 1\" (C-1) priority queue, regardless of the `queueControl1MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueDirect1MaxDepth": {
          "description": "The maximum depth of the \"Direct 1\" (D-1) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueDirect1MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Direct 1\" (D-1) priority queue, regardless of the `queueDirect1MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueDirect2MaxDepth": {
          "description": "The maximum depth of the \"Direct 2\" (D-2) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueDirect2MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Direct 2\" (D-2) priority queue, regardless of the `queueDirect2MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueDirect3MaxDepth": {
          "description": "The maximum depth of the \"Direct 3\" (D-3) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueDirect3MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Direct 3\" (D-3) priority queue, regardless of the `queueDirect3MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueGuaranteed1MaxDepth": {
          "description": "The maximum depth of the \"Guaranteed 1\" (G-1) priority queue, in work units. Each work unit is 2048 bytes of message data.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "queueGuaranteed1MinMsgBurst": {
          "description": "The number of messages that are always allowed entry into the \"Guaranteed 1\" (G-1) priority queue, regardless of the `queueGuaranteed1MaxDepth` value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "rejectMsgToSenderOnNoSubscriptionMatchEnabled": {
          "description": "Enable or disable the sending of a negative acknowledgment (NACK) to a client using the Client Profile when discarding a guaranteed message due to no matching subscription found.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "replicationAllowClientConnectWhenStandbyEnabled": {
          "description": "Enable or disable allowing clients using the Client Profile to connect to the Message VPN when its replication state is standby.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "serviceMinKeepaliveTimeout": {
          "description": "The minimum client keepalive timeout which will be enforced for client connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "format": "int32",
          "type": "integer"
        },
        "serviceSmfMaxConnectionCountPerClientUsername": {
          "description": "The maximum number of SMF client connections per Client Username using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceSmfMinKeepaliveEnabled": {
          "description": "Enable or disable the enforcement of a minimum keepalive timeout for SMF clients.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "boolean"
        },
        "serviceWebInactiveTimeout": {
          "description": "The timeout for inactive Web Transport client sessions using the Client Profile, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceWebMaxConnectionCountPerClientUsername": {
          "description": "The maximum number of Web Transport client connections per Client Username using the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "serviceWebMaxPayload": {
          "description": "The maximum Web Transport payload size before fragmentation occurs for clients using the Client Profile, in bytes. The size of the header is not included.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "tcpCongestionWindowSize": {
          "description": "The TCP initial congestion window size for clients using the Client Profile, in multiples of the TCP Maximum Segment Size (MSS). Changing the value from its default of 2 results in non-compliance with RFC 2581. Contact support before changing this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "tcpKeepaliveCount": {
          "description": "The number of TCP keepalive retransmissions to a client using the Client Profile before declaring that it is not available.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "tcpKeepaliveIdleTime": {
          "description": "The amount of time a client connection using the Client Profile must remain idle before TCP begins sending keepalive probes, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "tcpKeepaliveInterval": {
          "description": "The amount of time between TCP keepalive retransmissions to a client using the Client Profile when no acknowledgment is received, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "tcpMaxSegmentSize": {
          "description": "The TCP maximum segment size for clients using the Client Profile, in bytes. Changes are applied to all existing connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "tcpMaxWindowSize": {
          "description": "The TCP maximum window size for clients using the Client Profile, in kilobytes. Changes are applied to all existing connections. This setting is ignored on the software broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "tlsAllowDowngradeToPlainTextEnabled": {
          "description": "Enable or disable allowing a client using the Client Profile to downgrade an encrypted connection to plain text.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnClientProfileEventClientProvisionedEndpointSpoolUsageThreshold": {
      "description": "The thresholds for the message spool usage event of Queues and Topic Endpoints provisioned by clients, relative to `maxMsgSpoolUsage` for these Queues and Topic Endpoints. Changing these values during operation does not affect existing sessions. For provisioned durable Queues and Topic Endpoints, this value applies when initially provisioned, but can then be changed afterwards by configuring the Queue or Topic Endpoint.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventConnectionCountPerClientUsernameThreshold": {
      "description": "The thresholds for the Client Username connection count event of the Client Profile, relative to `maxConnectionCountPerClientUsername`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventEgressFlowCountThreshold": {
      "description": "The thresholds for the transmit flow count event of the Client Profile, relative to `maxEgressFlowCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventEndpointCountPerClientUsernameThreshold": {
      "description": "The thresholds for the Client Username endpoint count event of the Client Profile, relative to `maxEndpointCountPerClientUsername`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventIngressFlowCountThreshold": {
      "description": "The thresholds for the receive flow count event of the Client Profile, relative to `maxIngressFlowCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventServiceSmfConnectionCountPerClientUsernameThreshold": {
      "description": "The thresholds for the client username SMF connection count event of the Client Profile, relative to `serviceSmfMaxConnectionCountPerClientUsername`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventServiceWebConnectionCountPerClientUsernameThreshold": {
      "description": "The thresholds for the Client Username Web Transport connection count event of the Client Profile, relative to `serviceWebMaxConnectionCountPerClientUsername`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventSubscriptionCountThreshold": {
      "description": "The thresholds for the subscription count event of the Client Profile, relative to `maxSubscriptionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventTransactedSessionCountThreshold": {
      "description": "The thresholds for the transacted session count event of the Client Profile, relative to `maxTransactedSessionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileEventTransactionCountThreshold": {
      "description": "The thresholds for the transaction count event of the Client Profile, relative to `maxTransactionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Client Profile object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientProfileResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientProfileCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClientProfile"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientProfileLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientProfilesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientProfileCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientProfile"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientProfileLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClient"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientRxFlow": {
      "properties": {
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "connectTime": {
          "description": "The timestamp of when the Flow from the Client connected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "destinationGroupErrorDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to a destination group error.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "duplicateDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to being a duplicate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "endpointDisabledDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to an eligible endpoint destination being disabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "endpointUsageExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to an eligible endpoint destination having its maximum message spool usage exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "erroredDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to errors being detected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "flowId": {
          "description": "The identifier (ID) of the flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "flowName": {
          "description": "The name of the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "guaranteedMsgCount": {
          "description": "The number of guaranteed messages from the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lastRxMsgId": {
          "description": "The identifier (ID) of the last message received on the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "localMsgCountExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to the maximum number of messages allowed on the broker being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowPriorityMsgCongestionDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to congestion of low priority messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgSizeExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to the maximum allowed message size being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "noEligibleDestinationsDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to there being no eligible endpoint destination.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "noLocalDeliveryDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to no local delivery being requested.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "notCompatibleWithForwardingModeDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to being incompatible with the forwarding mode of an eligible endpoint destination.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "outOfOrderDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to being received out of order.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "publishAclDeniedDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to being denied by the access control list (ACL) profile for the published topic.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "publisherId": {
          "description": "The identifier (ID) of the publisher for the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "queueNotFoundDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to the destination queue not being found.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to the Message VPN being in the replication standby state.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sessionName": {
          "description": "The name of the transacted session on the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "smfTtlExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to the message time-to-live (TTL) count being exceeded. The message TTL count is the maximum number of times the message can cross a bridge between Message VPNs.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spoolFileLimitExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to all available message spool file resources being used.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spoolNotReadyDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to the message spool being not ready.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spoolToAdbFailDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to a failure while spooling to the Assured Delivery Blade (ADB).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spoolToDiskFailDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to a failure while spooling to the disk.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spoolUsageExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to the maximum message spool usage being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "syncReplicationIneligibleDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to synchronous replication being ineligible.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userProfileDeniedGuaranteedDiscardedMsgCount": {
          "description": "The number of guaranteed messages from the Flow discarded due to being denied by the client profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "windowSize": {
          "description": "The size of the window used for guaranteed messages sent on the Flow, in messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientRxFlowCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnClientRxFlowLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Client Receive Flow object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientRxFlowResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientRxFlowCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClientRxFlow"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientRxFlowLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientRxFlowsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientRxFlowCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientRxFlow"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientRxFlowLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientSubscription": {
      "properties": {
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "dtoPriority": {
          "description": "The priority of the Subscription topic for receiving deliver-to-one (DTO) messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"p1\" - The 1st or highest priority.\n\"p2\" - The 2nd highest priority.\n\"p3\" - The 3rd highest priority.\n\"p4\" - The 4th highest priority.\n\"da\" - Ignore priority and deliver always.\n</pre>\n",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscriptionTopic": {
          "description": "The topic of the Subscription.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientSubscriptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnClientSubscriptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Client Subscription object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientSubscriptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientSubscriptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClientSubscription"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientSubscriptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientSubscriptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientSubscriptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientSubscription"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientSubscriptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientTransactedSession": {
      "properties": {
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "commitCount": {
          "description": "The number of transactions committed within the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "commitFailureCount": {
          "description": "The number of transaction commit operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "commitSuccessCount": {
          "description": "The number of transaction commit operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "consumedMsgCount": {
          "description": "The number of messages consumed within the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "endFailFailureCount": {
          "description": "The number of transaction end fail operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "endFailSuccessCount": {
          "description": "The number of transaction end fail operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "endFailureCount": {
          "description": "The number of transaction end operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "endRollbackFailureCount": {
          "description": "The number of transaction end rollback operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "endRollbackSuccessCount": {
          "description": "The number of transaction end rollback operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "endSuccessCount": {
          "description": "The number of transaction end operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "failureCount": {
          "description": "The number of transactions that failed within the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "forgetFailureCount": {
          "description": "The number of transaction forget operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "forgetSuccessCount": {
          "description": "The number of transaction forget operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "onePhaseCommitFailureCount": {
          "description": "The number of transaction one-phase commit operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "onePhaseCommitSuccessCount": {
          "description": "The number of transaction one-phase commit operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "pendingConsumedMsgCount": {
          "description": "The number of messages to be consumed when the transaction is committed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "pendingPublishedMsgCount": {
          "description": "The number of messages to be published when the transaction is committed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "prepareFailureCount": {
          "description": "The number of transaction prepare operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "prepareSuccessCount": {
          "description": "The number of transaction prepare operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "previousTransactionState": {
          "description": "The state of the previous transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"none\" - The previous transaction had no state.\n\"committed\" - The previous transaction was committed.\n\"rolled-back\" - The previous transaction was rolled back.\n\"failed\" - The previous transaction failed.\n</pre>\n",
          "type": "string"
        },
        "publishedMsgCount": {
          "description": "The number of messages published within the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "resumeFailureCount": {
          "description": "The number of transaction resume operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "resumeSuccessCount": {
          "description": "The number of transaction resume operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "retrievedMsgCount": {
          "description": "The number of messages retrieved within the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rollbackCount": {
          "description": "The number of transactions rolled back within the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rollbackFailureCount": {
          "description": "The number of transaction rollback operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rollbackSuccessCount": {
          "description": "The number of transaction rollback operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sessionName": {
          "description": "The name of the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "spooledMsgCount": {
          "description": "The number of messages spooled within the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "startFailureCount": {
          "description": "The number of transaction start operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "startSuccessCount": {
          "description": "The number of transaction start operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "successCount": {
          "description": "The number of transactions that succeeded within the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "suspendFailureCount": {
          "description": "The number of transaction suspend operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "suspendSuccessCount": {
          "description": "The number of transaction suspend operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "transactionId": {
          "description": "The identifier (ID) of the transaction in the Transacted Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "transactionState": {
          "description": "The state of the current transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"in-progress\" - The current transaction is in progress.\n\"committing\" - The current transaction is committing.\n\"rolling-back\" - The current transaction is rolling back.\n\"failing\" - The current transaction is failing.\n</pre>\n",
          "type": "string"
        },
        "twoPhaseCommitFailureCount": {
          "description": "The number of transaction two-phase commit operations that failed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "twoPhaseCommitSuccessCount": {
          "description": "The number of transaction two-phase commit operations that succeeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientTransactedSessionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnClientTransactedSessionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Client Transacted Session object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientTransactedSessionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientTransactedSessionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClientTransactedSession"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientTransactedSessionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientTransactedSessionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientTransactedSessionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientTransactedSession"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientTransactedSessionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientTxFlow": {
      "properties": {
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "endpointName": {
          "description": "The name of the Queue or Topic Endpoint bound.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "endpointType": {
          "description": "The type of endpoint bound.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"queue\" - The Client is bound to a Queue.\n\"topic-endpoint\" - The Client is bound to a Topic Endpoint.\n</pre>\n",
          "type": "string"
        },
        "flowId": {
          "description": "The identifier (ID) of the flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientTxFlowCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnClientTxFlowLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Client Transmit Flow object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientTxFlowResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientTxFlowCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClientTxFlow"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientTxFlowLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientTxFlowsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientTxFlowCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientTxFlow"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientTxFlowLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientUsername": {
      "properties": {
        "aclProfileName": {
          "description": "The ACL Profile of the Client Username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientProfileName": {
          "description": "The Client Profile of the Client Username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientUsername": {
          "description": "The name of the Client Username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "dynamic": {
          "description": "Indicates whether the Client Username was dynamically created based on remote authorization data.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enable or disable the Client Username. When disabled, all clients currently connected as the Client Username are disconnected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "guaranteedEndpointPermissionOverrideEnabled": {
          "description": "Enable or disable guaranteed endpoint permission override for the Client Username. When enabled all guaranteed endpoints may be accessed, modified or deleted with the same permission as the owner.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscriptionManagerEnabled": {
          "description": "Enable or disable the subscription management capability of the Client Username. This is the ability to manage subscriptions on behalf of other Client Usernames.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnClientUsernameAttribute": {
      "properties": {
        "attributeName": {
          "description": "The name of the Attribute.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "attributeValue": {
          "description": "The value of the Attribute.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientUsername": {
          "description": "The name of the Client Username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientUsernameAttributeCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnClientUsernameAttributeLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Client Username Attribute object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientUsernameAttributeResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientUsernameAttributeCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClientUsernameAttribute"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientUsernameAttributeLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientUsernameAttributesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientUsernameAttributeCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientUsernameAttribute"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientUsernameAttributeLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientUsernameCollections": {
      "properties": {
        "attributes": {
          "$ref": "#/definitions/MsgVpnClientUsernameCollectionsAttributes"
        }
      },
      "type": "object"
    },
    "MsgVpnClientUsernameCollectionsAttributes": {
      "properties": {
        "count": {
          "description": "The total number of objects in the attributes collection. Available since 2.27.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnClientUsernameLinks": {
      "properties": {
        "attributesUri": {
          "description": "The URI of this Client Username's collection of Client Username Attribute objects. Available since 2.27.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Client Username object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnClientUsernameResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnClientUsernameCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnClientUsername"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnClientUsernameLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientUsernamesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientUsernameCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientUsername"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientUsernameLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnClientsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnClient"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnClientLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnCollections": {
      "properties": {
        "aclProfiles": {
          "$ref": "#/definitions/MsgVpnCollectionsAclProfiles"
        },
        "authenticationKerberosRealms": {
          "$ref": "#/definitions/MsgVpnCollectionsAuthenticationKerberosRealms"
        },
        "authenticationOauthProfiles": {
          "$ref": "#/definitions/MsgVpnCollectionsAuthenticationOauthProfiles"
        },
        "authenticationOauthProviders": {
          "$ref": "#/definitions/MsgVpnCollectionsAuthenticationOauthProviders"
        },
        "authorizationGroups": {
          "$ref": "#/definitions/MsgVpnCollectionsAuthorizationGroups"
        },
        "bridges": {
          "$ref": "#/definitions/MsgVpnCollectionsBridges"
        },
        "certMatchingRules": {
          "$ref": "#/definitions/MsgVpnCollectionsCertMatchingRules"
        },
        "clientProfiles": {
          "$ref": "#/definitions/MsgVpnCollectionsClientProfiles"
        },
        "clientUsernames": {
          "$ref": "#/definitions/MsgVpnCollectionsClientUsernames"
        },
        "clients": {
          "$ref": "#/definitions/MsgVpnCollectionsClients"
        },
        "configSyncRemoteNodes": {
          "$ref": "#/definitions/MsgVpnCollectionsConfigSyncRemoteNodes"
        },
        "distributedCaches": {
          "$ref": "#/definitions/MsgVpnCollectionsDistributedCaches"
        },
        "dmrBridges": {
          "$ref": "#/definitions/MsgVpnCollectionsDmrBridges"
        },
        "jndiConnectionFactories": {
          "$ref": "#/definitions/MsgVpnCollectionsJndiConnectionFactories"
        },
        "jndiQueues": {
          "$ref": "#/definitions/MsgVpnCollectionsJndiQueues"
        },
        "jndiTopics": {
          "$ref": "#/definitions/MsgVpnCollectionsJndiTopics"
        },
        "kafkaReceivers": {
          "$ref": "#/definitions/MsgVpnCollectionsKafkaReceivers"
        },
        "kafkaSenders": {
          "$ref": "#/definitions/MsgVpnCollectionsKafkaSenders"
        },
        "mqttRetainCaches": {
          "$ref": "#/definitions/MsgVpnCollectionsMqttRetainCaches"
        },
        "mqttSessions": {
          "$ref": "#/definitions/MsgVpnCollectionsMqttSessions"
        },
        "proxies": {
          "$ref": "#/definitions/MsgVpnCollectionsProxies"
        },
        "queueTemplates": {
          "$ref": "#/definitions/MsgVpnCollectionsQueueTemplates"
        },
        "queues": {
          "$ref": "#/definitions/MsgVpnCollectionsQueues"
        },
        "replayLogs": {
          "$ref": "#/definitions/MsgVpnCollectionsReplayLogs"
        },
        "replicatedTopics": {
          "$ref": "#/definitions/MsgVpnCollectionsReplicatedTopics"
        },
        "restDeliveryPoints": {
          "$ref": "#/definitions/MsgVpnCollectionsRestDeliveryPoints"
        },
        "telemetryProfiles": {
          "$ref": "#/definitions/MsgVpnCollectionsTelemetryProfiles"
        },
        "topicEndpointTemplates": {
          "$ref": "#/definitions/MsgVpnCollectionsTopicEndpointTemplates"
        },
        "topicEndpoints": {
          "$ref": "#/definitions/MsgVpnCollectionsTopicEndpoints"
        },
        "transactions": {
          "$ref": "#/definitions/MsgVpnCollectionsTransactions"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsAclProfiles": {
      "properties": {
        "count": {
          "description": "The total number of objects in the aclProfiles collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsAuthenticationKerberosRealms": {
      "properties": {
        "count": {
          "description": "The total number of objects in the authenticationKerberosRealms collection. Available since 2.40.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsAuthenticationOauthProfiles": {
      "properties": {
        "count": {
          "description": "The total number of objects in the authenticationOauthProfiles collection. Available since 2.25.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsAuthenticationOauthProviders": {
      "properties": {
        "count": {
          "description": "The total number of objects in the authenticationOauthProviders collection. Deprecated since 2.25. Replaced by authenticationOauthProfiles.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsAuthorizationGroups": {
      "properties": {
        "count": {
          "description": "The total number of objects in the authorizationGroups collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsBridges": {
      "properties": {
        "count": {
          "description": "The total number of objects in the bridges collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsCertMatchingRules": {
      "properties": {
        "count": {
          "description": "The total number of objects in the certMatchingRules collection. Available since 2.27.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsClientProfiles": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clientProfiles collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsClientUsernames": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clientUsernames collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsClients": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clients collection. Available since 2.12.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsConfigSyncRemoteNodes": {
      "properties": {
        "count": {
          "description": "The total number of objects in the configSyncRemoteNodes collection. Deprecated since 2.22. This attribute has been deprecated.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsDistributedCaches": {
      "properties": {
        "count": {
          "description": "The total number of objects in the distributedCaches collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsDmrBridges": {
      "properties": {
        "count": {
          "description": "The total number of objects in the dmrBridges collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsJndiConnectionFactories": {
      "properties": {
        "count": {
          "description": "The total number of objects in the jndiConnectionFactories collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsJndiQueues": {
      "properties": {
        "count": {
          "description": "The total number of objects in the jndiQueues collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsJndiTopics": {
      "properties": {
        "count": {
          "description": "The total number of objects in the jndiTopics collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsKafkaReceivers": {
      "properties": {
        "count": {
          "description": "The total number of objects in the kafkaReceivers collection. Available since 2.36.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsKafkaSenders": {
      "properties": {
        "count": {
          "description": "The total number of objects in the kafkaSenders collection. Available since 2.36.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsMqttRetainCaches": {
      "properties": {
        "count": {
          "description": "The total number of objects in the mqttRetainCaches collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsMqttSessions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the mqttSessions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsProxies": {
      "properties": {
        "count": {
          "description": "The total number of objects in the proxies collection. Available since 2.36.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsQueueTemplates": {
      "properties": {
        "count": {
          "description": "The total number of objects in the queueTemplates collection. Available since 2.14.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsQueues": {
      "properties": {
        "count": {
          "description": "The total number of objects in the queues collection. Available since 2.12.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsReplayLogs": {
      "properties": {
        "count": {
          "description": "The total number of objects in the replayLogs collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsReplicatedTopics": {
      "properties": {
        "count": {
          "description": "The total number of objects in the replicatedTopics collection. Available since 2.12.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsRestDeliveryPoints": {
      "properties": {
        "count": {
          "description": "The total number of objects in the restDeliveryPoints collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsTelemetryProfiles": {
      "properties": {
        "count": {
          "description": "The total number of objects in the telemetryProfiles collection. Available since 2.31.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsTopicEndpointTemplates": {
      "properties": {
        "count": {
          "description": "The total number of objects in the topicEndpointTemplates collection. Available since 2.14.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsTopicEndpoints": {
      "properties": {
        "count": {
          "description": "The total number of objects in the topicEndpoints collection. Available since 2.12.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnCollectionsTransactions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the transactions collection. Available since 2.12.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnConfigSyncRemoteNode": {
      "properties": {
        "lastMsgRxTime": {
          "description": "The amount of time in seconds since the last message was received from the config sync table of the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.22. This attribute has been deprecated.",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.22. This attribute has been deprecated.",
          "type": "string"
        },
        "remoteNodeName": {
          "description": "The name of the Config Sync Remote Node.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.22. This attribute has been deprecated.",
          "type": "string"
        },
        "role": {
          "description": "The role of the config sync table of the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"unknown\" - The role is unknown.\n\"primary\" - Acts as the primary source of config data.\n\"replica\" - Acts as a replica of the primary config data.\n</pre>\n Deprecated since 2.22. This attribute has been deprecated.",
          "type": "string"
        },
        "stale": {
          "description": "Indicates whether the config sync table of the remote Message VPN is stale.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.22. This attribute has been deprecated.",
          "type": "boolean"
        },
        "state": {
          "description": "The state of the config sync table of the remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"unknown\" - The state is unknown.\n\"in-sync\" - The config data is synchronized between Message VPNs.\n\"reconciling\" - The config data is reconciling between Message VPNs.\n\"blocked\" - The config data is blocked from reconciling due to an error.\n\"out-of-sync\" - The config data is out of sync between Message VPNs.\n\"down\" - The state is down due to configuration.\n</pre>\n Deprecated since 2.22. This attribute has been deprecated.",
          "type": "string"
        },
        "timeInState": {
          "description": "The amount of time in seconds the config sync table of the remote Message VPN has been in the current state.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.22. This attribute has been deprecated.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnConfigSyncRemoteNodeCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnConfigSyncRemoteNodeLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Config Sync Remote Node object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnConfigSyncRemoteNodeResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnConfigSyncRemoteNodeCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnConfigSyncRemoteNode"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnConfigSyncRemoteNodeLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnConfigSyncRemoteNodesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnConfigSyncRemoteNodeCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnConfigSyncRemoteNode"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnConfigSyncRemoteNodeLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnCounter": {
      "description": "The counters for the Message VPN. Deprecated since 2.13. All attributes in this object have been moved to the MsgVpn object.",
      "properties": {
        "controlRxByteCount": {
          "description": "The amount of client control messages received from clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "controlRxMsgCount": {
          "description": "The number of client control messages received from clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "controlTxByteCount": {
          "description": "The amount of client control messages transmitted to clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "controlTxMsgCount": {
          "description": "The number of client control messages transmitted to clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxByteCount": {
          "description": "The amount of client data messages received from clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgCount": {
          "description": "The number of client data messages received from clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxByteCount": {
          "description": "The amount of client data messages transmitted to clients by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgCount": {
          "description": "The number of client data messages transmitted to clients by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "discardedRxMsgCount": {
          "description": "The number of messages discarded during reception by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "discardedTxMsgCount": {
          "description": "The number of messages discarded during transmission by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "loginRxMsgCount": {
          "description": "The number of login request messages received by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "loginTxMsgCount": {
          "description": "The number of login response messages transmitted by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolRxMsgCount": {
          "description": "The number of guaranteed messages received by the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolTxMsgCount": {
          "description": "The number of guaranteed messages transmitted by the Message VPN. One message to multiple clients is counted as one message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "tlsRxByteCount": {
          "description": "The amount of TLS messages received by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "tlsTxByteCount": {
          "description": "The amount of TLS messages transmitted by the Message VPN, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCache": {
      "properties": {
        "cacheManagementUp": {
          "description": "Indicates whether managing of the distributed cache over the  message bus is operationally up in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.28.",
          "type": "boolean"
        },
        "cacheName": {
          "description": "The name of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "cacheVirtualRouter": {
          "description": "The virtual router of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"auto\" - The Distributed Cache is automatically assigned a virtual router at creation, depending on the broker's active-standby role.\n</pre>\n Available since 2.28.",
          "enum": [
            "auto"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "heartbeat": {
          "description": "The heartbeat interval, in seconds, used by the Cache Instances to monitor connectivity with the message broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "lastFailureReason": {
          "description": "The reason for the last distributed cache management failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.28.",
          "type": "string"
        },
        "lastFailureTime": {
          "description": "The timestamp of the last distributed cache management failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.28.",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgsLost": {
          "description": "Indicates whether one or more messages were lost by any Cache Instance in the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "scheduledDeleteMsgDayList": {
          "description": "The scheduled delete message day(s), specified as \"daily\" or a comma-separated list of days. Days must be specified as \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces, and in sorted order from Sunday to Saturday. The empty-string (\"\") can also be specified, indicating no schedule is configured (\"scheduledDeleteMsgTimeList\" must also be configured to the empty-string).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "scheduledDeleteMsgTimeList": {
          "description": "The scheduled delete message time(s), specified as \"hourly\" or a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There must be no spaces, and times (up to 4) must be in sorted order from 0:00 to 23:59. The empty-string (\"\") can also be specified, indicating no schedule is configured (\"scheduledDeleteMsgDayList\" must also be configured to the empty-string).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheCluster": {
      "properties": {
        "cacheName": {
          "description": "The name of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clusterName": {
          "description": "The name of the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "deliverToOneOverrideEnabled": {
          "description": "Enable or disable deliver-to-one override for the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enable or disable the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "eventDataByteRateThreshold": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterEventDataByteRateThreshold"
        },
        "eventDataMsgRateThreshold": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterEventDataMsgRateThreshold"
        },
        "eventMaxMemoryThreshold": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterEventMaxMemoryThreshold"
        },
        "eventMaxTopicsThreshold": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterEventMaxTopicsThreshold"
        },
        "eventRequestQueueDepthThreshold": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterEventRequestQueueDepthThreshold"
        },
        "eventRequestRateThreshold": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterEventRequestRateThreshold"
        },
        "eventResponseRateThreshold": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterEventResponseRateThreshold"
        },
        "globalCachingEnabled": {
          "description": "Enable or disable global caching for the Cache Cluster. When enabled, the Cache Instances will fetch topics from remote Home Cache Clusters when requested, and subscribe to those topics to cache them locally. When disabled, the Cache Instances will remove all subscriptions and cached messages for topics from remote Home Cache Clusters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "globalCachingHeartbeat": {
          "description": "The heartbeat interval, in seconds, used by the Cache Instances to monitor connectivity with the remote Home Cache Clusters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "globalCachingTopicLifetime": {
          "description": "The topic lifetime, in seconds. If no client requests are received for a given global topic over the duration of the topic lifetime, then the Cache Instance will remove the subscription and cached messages for that topic. A value of 0 disables aging.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxMemory": {
          "description": "The maximum memory usage, in megabytes (MB), for each Cache Instance in the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgsPerTopic": {
          "description": "The maximum number of messages per topic for each Cache Instance in the Cache Cluster. When at the maximum, old messages are removed as new messages arrive.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxRequestQueueDepth": {
          "description": "The maximum queue depth for cache requests received by the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTopicCount": {
          "description": "The maximum number of topics for each Cache Instance in the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "msgLifetime": {
          "description": "The message lifetime, in seconds. If a message remains cached for the duration of its lifetime, the Cache Instance will remove the message. A lifetime of 0 results in the message being retained indefinitely.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgsLost": {
          "description": "Indicates whether one or more messages were lost by any Cache Instance in the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "newTopicAdvertisementEnabled": {
          "description": "Enable or disable the advertising, onto the message bus, of new topics learned by each Cache Instance in the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterCollections": {
      "properties": {
        "globalCachingHomeClusters": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterCollectionsGlobalCachingHomeClusters"
        },
        "instances": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterCollectionsInstances"
        },
        "topics": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterCollectionsTopics"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterCollectionsGlobalCachingHomeClusters": {
      "properties": {
        "count": {
          "description": "The total number of objects in the globalCachingHomeClusters collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterCollectionsInstances": {
      "properties": {
        "count": {
          "description": "The total number of objects in the instances collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterCollectionsTopics": {
      "properties": {
        "count": {
          "description": "The total number of objects in the topics collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterEventDataByteRateThreshold": {
      "description": "The thresholds for the cached data incoming byte rate event, in bytes per second.",
      "properties": {
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter or rate. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter or rate. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterEventDataMsgRateThreshold": {
      "description": "The thresholds for the cached data incoming message rate event, in messages per second.",
      "properties": {
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter or rate. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter or rate. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterEventMaxMemoryThreshold": {
      "description": "The thresholds for the memory usage per instance event, relative to `maxMemory`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterEventMaxTopicsThreshold": {
      "description": "The thresholds for the topics per instance event, relative to `maxTopicCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterEventRequestQueueDepthThreshold": {
      "description": "The thresholds for the request queue depth event, relative to `maxRequestQueueDepth`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterEventRequestRateThreshold": {
      "description": "The thresholds for the cache request message rate event, in messages per second.",
      "properties": {
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter or rate. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter or rate. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterEventResponseRateThreshold": {
      "description": "The thresholds for the cache response message rate event, in messages per second.",
      "properties": {
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter or rate. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter or rate. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeCluster": {
      "properties": {
        "cacheName": {
          "description": "The name of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clusterName": {
          "description": "The name of the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "homeClusterName": {
          "description": "The name of the remote Home Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections": {
      "properties": {
        "topicPrefixes": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollectionsTopicPrefixes"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollectionsTopicPrefixes": {
      "properties": {
        "count": {
          "description": "The total number of objects in the topicPrefixes collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks": {
      "properties": {
        "topicPrefixesUri": {
          "description": "The URI of this Home Cache Cluster's collection of Topic Prefix objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Home Cache Cluster object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix": {
      "properties": {
        "cacheName": {
          "description": "The name of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clusterName": {
          "description": "The name of the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "homeClusterName": {
          "description": "The name of the remote Home Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "topicPrefix": {
          "description": "A topic prefix for global topics available from the remote Home Cache Cluster. A wildcard (/&gt;) is implied at the end of the prefix.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Topic Prefix object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstance": {
      "properties": {
        "autoStartEnabled": {
          "description": "Enable or disable auto-start for the Cache Instance. When enabled, the Cache Instance will automatically attempt to transition from the Stopped operational state to Up whenever it restarts or reconnects to the message broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "averageDataRxBytePeakRate": {
          "description": "The peak of the one minute average of the data message rate received by the Cache Instance, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataRxByteRate": {
          "description": "The one minute average of the data message rate received by the Cache Instance, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataRxMsgPeakRate": {
          "description": "The peak of the one minute average of the data message rate received by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataRxMsgRate": {
          "description": "The one minute average of the data message rate received by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataTxMsgPeakRate": {
          "description": "The peak of the one minute average of the data message rate transmitted by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataTxMsgRate": {
          "description": "The one minute average of the data message rate transmitted by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageRequestRxPeakRate": {
          "description": "The peak of the one minute average of the request rate received by the Cache Instance, in requests per second (req/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "averageRequestRxRate": {
          "description": "The one minute average of the request rate received by the Cache Instance, in requests per second (req/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "cacheName": {
          "description": "The name of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clusterName": {
          "description": "The name of the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "counter": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceCounter"
        },
        "dataRxBytePeakRate": {
          "description": "The data message peak rate received by the Cache Instance, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxByteRate": {
          "description": "The data message rate received by the Cache Instance, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgPeakRate": {
          "description": "The data message peak rate received by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgRate": {
          "description": "The data message rate received by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgPeakRate": {
          "description": "The data message peak rate transmitted by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgRate": {
          "description": "The data message rate transmitted by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "enabled": {
          "description": "Enable or disable the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "instanceName": {
          "description": "The name of the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastRegisteredTime": {
          "description": "The timestamp of when the Cache Instance last registered with the message broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastRxHeartbeatTime": {
          "description": "The timestamp of the last heartbeat message received from the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastRxSetLostMsgTime": {
          "description": "The timestamp of the last request for setting the lost message indication received from the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastStoppedReason": {
          "description": "The reason why the Cache Instance was last stopped.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastStoppedTime": {
          "description": "The timestamp of when the Cache Instance was last stopped.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastTxClearLostMsgTime": {
          "description": "The timestamp of the last request for clearing the lost message indication transmitted to the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "memoryUsage": {
          "description": "The memory usage of the Cache Instance, in megabytes (MB).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "msgCount": {
          "description": "The number of messages cached for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "msgPeakCount": {
          "description": "The number of messages cached peak for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgsLost": {
          "description": "Indicates whether one or more messages were lost by the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "rate": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRate"
        },
        "requestQueueDepthCount": {
          "description": "The received request message queue depth for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "requestQueueDepthPeakCount": {
          "description": "The received request message queue depth peak for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "requestRxPeakRate": {
          "description": "The request peak rate received by the Cache Instance, in requests per second (req/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "requestRxRate": {
          "description": "The request rate received by the Cache Instance, in requests per second (req/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "state": {
          "description": "The operational state of the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"invalid\" - The Cache Instance state is invalid.\n\"down\" - The Cache Instance is operationally down.\n\"stopped\" - The Cache Instance has stopped processing cache requests.\n\"stopped-lost-msg\" - The Cache Instance has stopped due to a lost message.\n\"register\" - The Cache Instance is registering with the broker.\n\"config-sync\" - The Cache Instance is synchronizing its configuration with the broker.\n\"cluster-sync\" - The Cache Instance is synchronizing its messages with the Cache Cluster.\n\"up\" - The Cache Instance is operationally up.\n\"backup\" - The Cache Instance is backing up its messages to disk.\n\"restore\" - The Cache Instance is restoring its messages from disk.\n\"not-available\" - The Cache Instance state is not available.\n</pre>\n",
          "type": "string"
        },
        "stopOnLostMsgEnabled": {
          "description": "Enable or disable stop-on-lost-message for the Cache Instance. When enabled, the Cache Instance will transition to the stopped operational state upon losing a message. When stopped, it cannot accept or respond to cache requests, but continues to cache messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "topicCount": {
          "description": "The number of topics cached for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "topicPeakCount": {
          "description": "The number of topics cached peak for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceCollections": {
      "properties": {
        "remoteGlobalCachingHomeClusters": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceCollectionsRemoteGlobalCachingHomeClusters"
        },
        "remoteTopics": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceCollectionsRemoteTopics"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceCollectionsRemoteGlobalCachingHomeClusters": {
      "properties": {
        "count": {
          "description": "The total number of objects in the remoteGlobalCachingHomeClusters collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceCollectionsRemoteTopics": {
      "properties": {
        "count": {
          "description": "The total number of objects in the remoteTopics collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceCounter": {
      "description": "The counters associated with the Cache Instance. Deprecated since 2.13. All attributes in this object have been moved to the MsgVpnDistributedCacheClusterInstance object.",
      "properties": {
        "msgCount": {
          "description": "The number of messages cached for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "msgPeakCount": {
          "description": "The number of messages cached peak for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "requestQueueDepthCount": {
          "description": "The received request message queue depth for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "requestQueueDepthPeakCount": {
          "description": "The received request message queue depth peak for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "topicCount": {
          "description": "The number of topics cached for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "topicPeakCount": {
          "description": "The number of topics cached peak for the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceLinks": {
      "properties": {
        "remoteGlobalCachingHomeClustersUri": {
          "description": "The URI of this Cache Instance's collection of Remote Home Cache Cluster objects.",
          "type": "string"
        },
        "remoteTopicsUri": {
          "description": "The URI of this Cache Instance's collection of Remote Topic objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Cache Instance object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRate": {
      "description": "The rates associated with the Cache Instance. Deprecated since 2.13. All attributes in this object have been moved to the MsgVpnDistributedCacheClusterInstance object.",
      "properties": {
        "averageDataRxBytePeakRate": {
          "description": "The peak of the one minute average of the data message rate received by the Cache Instance, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataRxByteRate": {
          "description": "The one minute average of the data message rate received by the Cache Instance, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataRxMsgPeakRate": {
          "description": "The peak of the one minute average of the data message rate received by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataRxMsgRate": {
          "description": "The one minute average of the data message rate received by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataTxMsgPeakRate": {
          "description": "The peak of the one minute average of the data message rate transmitted by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "averageDataTxMsgRate": {
          "description": "The one minute average of the data message rate transmitted by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "averageRequestRxPeakRate": {
          "description": "The peak of the one minute average of the request rate received by the Cache Instance, in requests per second (req/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "averageRequestRxRate": {
          "description": "The one minute average of the request rate received by the Cache Instance, in requests per second (req/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxBytePeakRate": {
          "description": "The data message peak rate received by the Cache Instance, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxByteRate": {
          "description": "The data message rate received by the Cache Instance, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgPeakRate": {
          "description": "The data message peak rate received by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "dataRxMsgRate": {
          "description": "The data message rate received by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgPeakRate": {
          "description": "The data message peak rate transmitted by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "dataTxMsgRate": {
          "description": "The data message rate transmitted by the Cache Instance, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "requestRxPeakRate": {
          "description": "The request peak rate received by the Cache Instance, in requests per second (req/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        },
        "requestRxRate": {
          "description": "The request rate received by the Cache Instance, in requests per second (req/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster": {
      "properties": {
        "cacheName": {
          "description": "The name of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "cacheRequestForwardedCount": {
          "description": "The number of cache requests forwarded to the remote Home Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "cacheRequestRxCount": {
          "description": "The number of cache requests received from the remote Home Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "clusterName": {
          "description": "The name of the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "heartbeatRxCount": {
          "description": "The number of heartbeat messages received from the remote Home Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "heartbeatUp": {
          "description": "Indicates whether the operational state of the heartbeat with the remote Home Cache Cluster is up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "homeClusterName": {
          "description": "The name of the remote Home Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "instanceName": {
          "description": "The name of the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Remote Home Cache Cluster object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClustersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteTopic": {
      "properties": {
        "cacheName": {
          "description": "The name of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clusterName": {
          "description": "The name of the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "globalTopic": {
          "description": "Indicates whether the type of the remote Topic is global.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "homeClusterName": {
          "description": "The name of the remote Home Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "instanceName": {
          "description": "The name of the Cache Instance.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgCount": {
          "description": "The number of messages cached for the remote Topic.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "suspect": {
          "description": "Indicates whether the remote Topic is suspect due to the remote Home Cache Cluster being in the lost message state.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "topic": {
          "description": "The value of the remote Topic.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteTopicCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Remote Topic object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteTopicResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopic"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceRemoteTopicsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopic"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstanceResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstance"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterInstancesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstance"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterLinks": {
      "properties": {
        "globalCachingHomeClustersUri": {
          "description": "The URI of this Cache Cluster's collection of Home Cache Cluster objects.",
          "type": "string"
        },
        "instancesUri": {
          "description": "The URI of this Cache Cluster's collection of Cache Instance objects.",
          "type": "string"
        },
        "topicsUri": {
          "description": "The URI of this Cache Cluster's collection of Topic objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Cache Cluster object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDistributedCacheCluster"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterTopic": {
      "properties": {
        "cacheName": {
          "description": "The name of the Distributed Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clusterName": {
          "description": "The name of the Cache Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "topic": {
          "description": "The value of the Topic in the form a/b/c.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterTopicCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterTopicLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Topic object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterTopicResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterTopicCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterTopic"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDistributedCacheClusterTopicLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClusterTopicsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterTopicCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterTopic"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterTopicLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheClustersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheCluster"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheClusterLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCacheCollections": {
      "properties": {
        "clusters": {
          "$ref": "#/definitions/MsgVpnDistributedCacheCollectionsClusters"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheCollectionsClusters": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clusters collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheLinks": {
      "properties": {
        "clustersUri": {
          "description": "The URI of this Distributed Cache's collection of Cache Cluster objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Distributed Cache object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDistributedCacheResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDistributedCacheCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDistributedCache"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDistributedCacheLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDistributedCachesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCache"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDistributedCacheLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDmrBridge": {
      "properties": {
        "failureReason": {
          "description": "The last failure reason for the DMR Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteMsgVpnName": {
          "description": "The remote Message VPN of the DMR Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "remoteNodeName": {
          "description": "The name of the node at the remote end of the DMR Bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "up": {
          "description": "Indicates whether the operational state of the DMR Bridge is up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "uptime": {
          "description": "The amount of time in seconds since the DMR Bridge was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnDmrBridgeCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnDmrBridgeLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this DMR Bridge object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnDmrBridgeResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnDmrBridgeCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnDmrBridge"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnDmrBridgeLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnDmrBridgesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnDmrBridgeCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnDmrBridge"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnDmrBridgeLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnEventConnectionCountThreshold": {
      "description": "The thresholds for the client connection count event of the Message VPN, relative to `maxConnectionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventEgressFlowCountThreshold": {
      "description": "The thresholds for the egress flow count event of the Message VPN, relative to `maxEgressFlowCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventEgressMsgRateThreshold": {
      "description": "The thresholds for the egress message rate event of the Message VPN.",
      "properties": {
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter or rate. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter or rate. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventEndpointCountThreshold": {
      "description": "The thresholds for the Queues and Topic Endpoints count event of the Message VPN, relative to `maxEndpointCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventIngressFlowCountThreshold": {
      "description": "The thresholds for the receive flow count event of the Message VPN, relative to `maxIngressFlowCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventIngressMsgRateThreshold": {
      "description": "The thresholds for the receive message rate event of the Message VPN.",
      "properties": {
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter or rate. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter or rate. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventMsgSpoolUsageThreshold": {
      "description": "The thresholds for the message spool usage event of the Message VPN, relative to `maxMsgSpoolUsage`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventServiceAmqpConnectionCountThreshold": {
      "description": "The thresholds for the AMQP client connection count event of the Message VPN, relative to `serviceAmqpMaxConnectionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventServiceMqttConnectionCountThreshold": {
      "description": "The thresholds for the MQTT client connection count event of the Message VPN, relative to `serviceMqttMaxConnectionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventServiceRestIncomingConnectionCountThreshold": {
      "description": "The thresholds for the incoming REST client connection count event of the Message VPN, relative to `serviceRestIncomingMaxConnectionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventServiceSmfConnectionCountThreshold": {
      "description": "The thresholds for the SMF client connection count event of the Message VPN, relative to `serviceSmfMaxConnectionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventServiceWebConnectionCountThreshold": {
      "description": "The thresholds for the Web Transport client connection count event of the Message VPN, relative to `serviceWebMaxConnectionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventSubscriptionCountThreshold": {
      "description": "The thresholds for the subscription count event of the Message VPN, relative to `maxSubscriptionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventTransactedSessionCountThreshold": {
      "description": "The thresholds for the transacted session count event of the Message VPN, relative to `maxTransactedSessionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnEventTransactionCountThreshold": {
      "description": "The thresholds for the transaction count event of the Message VPN, relative to `maxTransactionCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnJndiConnectionFactoriesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiConnectionFactoryCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiConnectionFactory"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiConnectionFactoryLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnJndiConnectionFactory": {
      "properties": {
        "allowDuplicateClientIdEnabled": {
          "description": "Enable or disable whether new JMS connections can use the same Client identifier (ID) as an existing connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "clientDescription": {
          "description": "The description of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientId": {
          "description": "The Client identifier (ID). If not specified, a unique value for it will be generated.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "connectionFactoryName": {
          "description": "The name of the JMS Connection Factory.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "dtoReceiveOverrideEnabled": {
          "description": "Enable or disable overriding by the Subscriber (Consumer) of the deliver-to-one (DTO) property on messages. When enabled, the Subscriber can receive all DTO tagged messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "dtoReceiveSubscriberLocalPriority": {
          "description": "The priority for receiving deliver-to-one (DTO) messages by the Subscriber (Consumer) if the messages are published on the local broker that the Subscriber is directly connected to.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "dtoReceiveSubscriberNetworkPriority": {
          "description": "The priority for receiving deliver-to-one (DTO) messages by the Subscriber (Consumer) if the messages are published on a remote broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "dtoSendEnabled": {
          "description": "Enable or disable the deliver-to-one (DTO) property on messages sent by the Publisher (Producer).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "dynamicEndpointCreateDurableEnabled": {
          "description": "Enable or disable whether a durable endpoint will be dynamically created on the broker when the client calls \"Session.createDurableSubscriber()\" or \"Session.createQueue()\". The created endpoint respects the message time-to-live (TTL) according to the \"dynamicEndpointRespectTtlEnabled\" property.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "dynamicEndpointRespectTtlEnabled": {
          "description": "Enable or disable whether dynamically created durable and non-durable endpoints respect the message time-to-live (TTL) property.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "guaranteedReceiveAckTimeout": {
          "description": "The timeout for sending the acknowledgment (ACK) for guaranteed messages received by the Subscriber (Consumer), in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedReceiveReconnectRetryCount": {
          "description": "The maximum number of attempts to reconnect to the host or list of hosts after the guaranteed  messaging connection has been lost. The value \"-1\" means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedReceiveReconnectRetryWait": {
          "description": "The amount of time to wait before making another attempt to connect or reconnect to the host after the guaranteed messaging connection has been lost, in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedReceiveWindowSize": {
          "description": "The size of the window for guaranteed messages received by the Subscriber (Consumer), in messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedReceiveWindowSizeAckThreshold": {
          "description": "The threshold for sending the acknowledgment (ACK) for guaranteed messages received by the Subscriber (Consumer) as a percentage of `guaranteedReceiveWindowSize`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedSendAckTimeout": {
          "description": "The timeout for receiving the acknowledgment (ACK) for guaranteed messages sent by the Publisher (Producer), in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "guaranteedSendWindowSize": {
          "description": "The size of the window for non-persistent guaranteed messages sent by the Publisher (Producer), in messages. For persistent messages the window size is fixed at 1.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "messagingDefaultDeliveryMode": {
          "description": "The default delivery mode for messages sent by the Publisher (Producer).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"persistent\" - The broker spools messages (persists in the Message Spool) as part of the send operation.\n\"non-persistent\" - The broker does not spool messages (does not persist in the Message Spool) as part of the send operation.\n</pre>\n",
          "enum": [
            "persistent",
            "non-persistent"
          ],
          "type": "string"
        },
        "messagingDefaultDmqEligibleEnabled": {
          "description": "Enable or disable whether messages sent by the Publisher (Producer) are Dead Message Queue (DMQ) eligible by default.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "messagingDefaultElidingEligibleEnabled": {
          "description": "Enable or disable whether messages sent by the Publisher (Producer) are Eliding eligible by default.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "messagingJmsxUserIdEnabled": {
          "description": "Enable or disable inclusion (adding or replacing) of the JMSXUserID property in messages sent by the Publisher (Producer).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "messagingPayloadCompressionLevel": {
          "description": "The level of compression to apply to the message payload, from 1 (least compression) to 9 (most compression). A value of 0 means no compression.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.42.",
          "format": "int32",
          "type": "integer"
        },
        "messagingTextInXmlPayloadEnabled": {
          "description": "Enable or disable encoding of JMS text messages in Publisher (Producer) messages as XML payload. When disabled, JMS text messages are encoded as a binary attachment.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "transportCompressionLevel": {
          "description": "The ZLIB compression level for the connection to the broker. The value \"0\" means no compression, and the value \"-1\" means the compression level is specified in the JNDI Properties file.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportConnectRetryCount": {
          "description": "The maximum number of retry attempts to establish an initial connection to the host or list of hosts. The value \"0\" means a single attempt (no retries), and the value \"-1\" means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportConnectRetryPerHostCount": {
          "description": "The maximum number of retry attempts to establish an initial connection to each host on the list of hosts. The value \"0\" means a single attempt (no retries), and the value \"-1\" means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportConnectTimeout": {
          "description": "The timeout for establishing an initial connection to the broker, in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportDirectTransportEnabled": {
          "description": "Enable or disable usage of Direct Transport mode. When enabled, NON-PERSISTENT messages are sent as direct messages and non-durable topic consumers and temporary queue consumers consume using direct subscriptions rather than from guaranteed endpoints. If disabled all messaging uses guaranteed transport.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "transportKeepaliveCount": {
          "description": "The maximum number of consecutive application-level keepalive messages sent without the broker response before the connection to the broker is closed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportKeepaliveEnabled": {
          "description": "Enable or disable usage of application-level keepalive messages to maintain a connection with the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "transportKeepaliveInterval": {
          "description": "The interval between application-level keepalive messages, in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportMsgCallbackOnIoThreadEnabled": {
          "description": "Enable or disable delivery of asynchronous messages directly from the I/O thread. Contact support before enabling this property.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "transportOptimizeDirectEnabled": {
          "description": "Enable or disable optimization for the Direct Transport delivery mode. If enabled, the client application is limited to one Publisher (Producer) and one non-durable Subscriber (Consumer).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "transportPort": {
          "description": "The connection port number on the broker for SMF clients. The value \"-1\" means the port is specified in the JNDI Properties file.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportReadTimeout": {
          "description": "The timeout for reading a reply from the broker, in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportReceiveBufferSize": {
          "description": "The size of the receive socket buffer, in bytes. It corresponds to the SO_RCVBUF socket option.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportReconnectRetryCount": {
          "description": "The maximum number of attempts to reconnect to the host or list of hosts after the connection has been lost. The value \"-1\" means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportReconnectRetryWait": {
          "description": "The amount of time before making another attempt to connect or reconnect to the host after the connection has been lost, in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportSendBufferSize": {
          "description": "The size of the send socket buffer, in bytes. It corresponds to the SO_SNDBUF socket option.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportTcpNoDelayEnabled": {
          "description": "Enable or disable the TCP_NODELAY option. When enabled, Nagle's algorithm for TCP/IP congestion control (RFC 896) is disabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "xaEnabled": {
          "description": "Enable or disable this as an XA Connection Factory. When enabled, the Connection Factory can be cast to \"XAConnectionFactory\", \"XAQueueConnectionFactory\" or \"XATopicConnectionFactory\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnJndiConnectionFactoryCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnJndiConnectionFactoryLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this JNDI Connection Factory object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnJndiConnectionFactoryResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnJndiConnectionFactoryCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnJndiConnectionFactory"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnJndiConnectionFactoryLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnJndiQueue": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "physicalName": {
          "description": "The physical name of the JMS Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "queueName": {
          "description": "The JNDI name of the JMS Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnJndiQueueCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnJndiQueueLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this JNDI Queue object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnJndiQueueResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnJndiQueueCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnJndiQueue"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnJndiQueueLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnJndiQueuesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiQueueCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiQueue"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiQueueLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnJndiTopic": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "physicalName": {
          "description": "The physical name of the JMS Topic.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "topicName": {
          "description": "The JNDI name of the JMS Topic.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnJndiTopicCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnJndiTopicLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this JNDI Topic object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnJndiTopicResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnJndiTopicCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnJndiTopic"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnJndiTopicLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnJndiTopicsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiTopicCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiTopic"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnJndiTopicLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaReceiver": {
      "properties": {
        "authenticationAwsMskIamAccessKeyId": {
          "description": "The AWS Access Key identifier, typically beginning \"AKIA...\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationAwsMskIamRegion": {
          "description": "The AWS Region code, such as \"us-east-1\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationAwsMskIamStsExternalId": {
          "description": "The External ID is a unique identifier that might be required when assuming a role. Used with STS only; optional.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationAwsMskIamStsRoleArn": {
          "description": "The Amazon Resource Name (ARN) of the role to assume, typically beginning \"arn:aws:iam::...\". Used with STS only.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationAwsMskIamStsRoleSessionName": {
          "description": "An identifier for the assumed role's session. Used with STS only.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationBasicUsername": {
          "description": "The username the Kafka Receiver uses to login to the remote Kafka broker. To be used when authenticationScheme is \"basic\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationClientCertConfigTime": {
          "description": "The timestamp of when the client-certificate was configured.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int64",
          "type": "integer"
        },
        "authenticationClientCertThumbprint": {
          "description": "The thumbprint of the client-certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "authenticationKerberosKeytabConfigTime": {
          "description": "The timestamp of when the keytab was configured.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.40.",
          "format": "int64",
          "type": "integer"
        },
        "authenticationKerberosKeytabFileName": {
          "description": "The name of this User Principal's keytab file.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.40.",
          "type": "string"
        },
        "authenticationKerberosKeytabThumbprint": {
          "description": "The thumbprint of the keytab.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.40.",
          "type": "string"
        },
        "authenticationKerberosServiceName": {
          "description": "The Kerberos service name of the remote Kafka broker, not including /hostname@REALM.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.40.",
          "type": "string"
        },
        "authenticationKerberosUserPrincipalName": {
          "description": "The Kerberos user principal name of the Kafka Receiver. This must include the @&lt;REALM&gt; suffix.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.40.",
          "type": "string"
        },
        "authenticationOauthClientId": {
          "description": "The OAuth client ID. To be used when authenticationScheme is \"oauth-client\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationOauthClientScope": {
          "description": "The OAuth scope. To be used when authenticationScheme is \"oauth-client\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationOauthClientTokenEndpoint": {
          "description": "The OAuth token endpoint URL that the Kafka Receiver will use to request a token for login to the Kafka broker. Must begin with \"https\". To be used when authenticationScheme is \"oauth-client\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationScheme": {
          "description": "The authentication scheme for the Kafka Receiver. The bootstrap addresses must resolve to an appropriately configured and compatible listener port on the Kafka Broker for the given scheme.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - Anonymous Authentication. Used with Kafka Broker PLAINTEXT listener ports.\n\"aws-msk-iam\" - Amazon Web Services (AWS) Managed Streaming for Kafka (MSK) Identity and Access Management (IAM) Authentication. Requires encryption.\n\"aws-msk-iam-sts\" - AWS MSK IAM with Security Token Service (STS) Authentication. Requires encryption.\n\"basic\" - Basic Authentication. Used with Kafka Broker SASL_PLAINTEXT and SASL_SSL listener ports.\n\"scram\" - Salted Challenge Response Authentication. Used with Kafka Broker SASL_PLAINTEXT and SASL_SSL listener ports.\n\"client-certificate\" - Client Certificate Authentication. Used with Kafka Broker SSL listener ports.\n\"kerberos\" - Kerberos Authentication.\n\"oauth-client\" - Oauth Authentication. Used with Kafka Broker SASL_SSL listener ports.\n</pre>\n",
          "enum": [
            "none",
            "aws-msk-iam",
            "aws-msk-iam-sts",
            "basic",
            "scram",
            "client-certificate",
            "kerberos",
            "oauth-client"
          ],
          "type": "string"
        },
        "authenticationScramHash": {
          "description": "The hash used for SCRAM authentication. To be used when authenticationScheme is \"scram\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"sha-256\" - SHA-2 256 bits.\n\"sha-512\" - SHA-2 512 bits.\n</pre>\n",
          "enum": [
            "sha-256",
            "sha-512"
          ],
          "type": "string"
        },
        "authenticationScramUsername": {
          "description": "The username the Kafka Receiver uses to login to the remote Kafka broker. To be used when authenticationScheme is \"scram\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "batchDelay": {
          "description": "Delay (in ms) to wait to accumulate a batch of messages to receive. Batching is done on a per-partition basis.\n\nThis corresponds to the Kafka consumer API `fetch.max.wait.ms` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "batchMaxSize": {
          "description": "Maximum size of a message batch, in bytes (B). Batching is done on a per-partition basis.\n\nThis corresponds to the Kafka consumer API `fetch.min.bytes` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "bootstrapAddressList": {
          "description": "Comma separated list of addresses (and optional ports) of brokers in the Kafka Cluster from which the state of the entire Kafka Cluster can be learned. If a port is not provided with an address it will default to 9092.\n\nThis corresponds to the Kafka consumer API `bootstrap.servers` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientName": {
          "description": "The name of the Client for the Kafka Receiver.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "connectionCount": {
          "description": "The number of connections to remote Kafka Brokers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "enabled": {
          "description": "Enable or disable the Kafka Receiver.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "failureReason": {
          "description": "Indicates why the Kafka Receiver is not operational.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "groupId": {
          "description": "The id of the Kafka consumer group for the Receiver.\n\nThis corresponds to the Kafka consumer API `group.id` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "groupKeepaliveInterval": {
          "description": "The time (in ms) between sending keepalives to the group.\n\nThis corresponds to the Kafka consumer API `heartbeat.interval.ms` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "groupKeepaliveTimeout": {
          "description": "The time (in ms) until unresponsive group members are removed, triggering a partition rebalance across other members of the group.\n\nThis corresponds to the Kafka consumer API `session.timeout.ms` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "groupMembershipType": {
          "description": "The membership type of the Kafka consumer group for the Receiver. Static members can leave and rejoin the group (within groupKeepaliveTimeout) without prompting a group rebalance.\n\nThis corresponds to the Kafka consumer API `group.instance.id` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"dynamic\" - Dynamic Membership.\n\"static\" - Static Membership.\n</pre>\n",
          "enum": [
            "dynamic",
            "static"
          ],
          "type": "string"
        },
        "groupPartitionSchemeList": {
          "description": "The ordered, comma-separated list of schemes used for partition assignment of the consumer group for this Receiver. Both Eager (\"range\", \"roundrobin\") and Cooperative (\"cooperative-sticky\") schemes are supported. The elected group leader will choose the first common strategy provided by all members of the group. Eager and Cooperative schemes must not be mixed. For more information on these schemes, see Kafka documentation.\n\nThis corresponds to the Kafka consumer API `partition.assignment.strategy` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "kafkaReceiverName": {
          "description": "The name of the Kafka Receiver.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastNotice": {
          "description": "Last notice issued for the Kafka Receiver. If recent this may help to diagnose operational problems.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.39.",
          "type": "string"
        },
        "lastNoticeTime": {
          "description": "Timestamp of the last reported notice.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "metadataTopicExcludeList": {
          "description": "A comma-separated list of POSIX.2 regular expressions. Commas within each regular expression must be escaped as double commas. Any matching topic names will be ignored in broker metadata.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "metadataTopicRefreshInterval": {
          "description": "The time between refreshes of topic metadata from the Kafka Cluster.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "rejectedMsgCount": {
          "description": "Rejected message count. These messages were received from  Kafka but failed to be published to Solace.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgByteCount": {
          "description": "Received message byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgCount": {
          "description": "Received message count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxRequestByteCount": {
          "description": "Received request byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxRequestCount": {
          "description": "Received request count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "transportTlsEnabled": {
          "description": "Enable or disable encryption (TLS) for the Kafka Receiver. The bootstrap addresses must resolve to PLAINTEXT or SASL_PLAINTEXT listener ports when disabled, and SSL or SASL_SSL listener ports when enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "txMsgByteCount": {
          "description": "Sent message byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txMsgCount": {
          "description": "Sent message count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRequestByteCount": {
          "description": "Sent request byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRequestCount": {
          "description": "Sent request count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "up": {
          "description": "Indicates whether the Kafka Receiver is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "upSinceTime": {
          "description": "The timestamp when the Kafka Receiver became up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Kafka Receiver was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.39. Replaced by upSinceTime.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverCollections": {
      "properties": {
        "keytabEntries": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverCollectionsKeytabEntries"
        },
        "remoteBrokers": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverCollectionsRemoteBrokers"
        },
        "topicBindings": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverCollectionsTopicBindings"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverCollectionsKeytabEntries": {
      "properties": {
        "count": {
          "description": "The total number of objects in the keytabEntries collection. Available since 2.40.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverCollectionsRemoteBrokers": {
      "properties": {
        "count": {
          "description": "The total number of objects in the remoteBrokers collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverCollectionsTopicBindings": {
      "properties": {
        "count": {
          "description": "The total number of objects in the topicBindings collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverKeytabEntriesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverKeytabEntryCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverKeytabEntry"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverKeytabEntryLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaReceiverKeytabEntry": {
      "properties": {
        "encryptionType": {
          "description": "Encryption type used by the keytab entry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "kafkaReceiverName": {
          "description": "The name of the Kafka Receiver.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "keyVersionNumber": {
          "description": "Key Version Number (KVNO) of the keytab entry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "timestamp": {
          "description": "Timestamp of the keytab entry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverKeytabEntryCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnKafkaReceiverKeytabEntryLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Kerberos Keytab Entries object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverKeytabEntryResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverKeytabEntryCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverKeytabEntry"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverKeytabEntryLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaReceiverLinks": {
      "properties": {
        "keytabEntriesUri": {
          "description": "The URI of this Kafka Receiver's collection of Kerberos Keytab Entries objects. Available since 2.40.",
          "type": "string"
        },
        "remoteBrokersUri": {
          "description": "The URI of this Kafka Receiver's collection of Remote Kafka Brokers objects.",
          "type": "string"
        },
        "topicBindingsUri": {
          "description": "The URI of this Kafka Receiver's collection of Topic Binding objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Kafka Receiver object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverRemoteBroker": {
      "properties": {
        "averageLatency": {
          "description": "Average latency (in ms) for the remote broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "connectCount": {
          "description": "Connect attempt count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "kafkaReceiverName": {
          "description": "The name of the Kafka Receiver.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteBroker": {
          "description": "The Kafka remote broker name.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "rxErrorCount": {
          "description": "Received error count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxResponseByteCount": {
          "description": "Received response byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxResponseCount": {
          "description": "Received response count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "state": {
          "description": "Remote broker state.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "txErrorCount": {
          "description": "Sent error count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRequestByteCount": {
          "description": "Sent request byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRequestCount": {
          "description": "Sent request count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRetryCount": {
          "description": "Sent request retry count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverRemoteBrokerCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnKafkaReceiverRemoteBrokerLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Remote Kafka Brokers object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverRemoteBrokerResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverRemoteBrokerCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverRemoteBroker"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverRemoteBrokerLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaReceiverRemoteBrokersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverRemoteBrokerCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverRemoteBroker"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverRemoteBrokerLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaReceiverResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnKafkaReceiver"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaReceiverTopicBinding": {
      "properties": {
        "enabled": {
          "description": "Enable or disable this topic binding of the Kafka Receiver.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "failureReason": {
          "description": "Indicates why the Topic Binding is not operational.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "initialOffset": {
          "description": "The initial offset to consume from the Kafka Topic if no member of the group has consumed and committed any offset already, or if the last committed offset has been deleted. Offsets are unique per partition.\n\nThis corresponds to the Kafka consumer API `auto.offset.reset` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"beginning\" - Start with the earliest offset available.\n\"end\" - Start with new offsets only.\n</pre>\n",
          "enum": [
            "beginning",
            "end"
          ],
          "type": "string"
        },
        "kafkaReceiverName": {
          "description": "The name of the Kafka Receiver.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastNotice": {
          "description": "Last notice issued for the Topic Binding. If recent this may help to diagnose operational problems.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.39.",
          "type": "string"
        },
        "lastNoticeTime": {
          "description": "Timestamp of the last reported notice.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "localKey": {
          "description": "The Substitution Expression used to generate the key for each message received from Kafka. This expression can include fields extracted from the metadata of each individual Kafka message as it is received from the Kafka Topic.\n\nIf empty, no key is included for each message as it is published into Solace.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "localTopic": {
          "description": "The Substitution Expression used to generate the Solace Topic for each message received from Kafka. This expression can include data extracted from the metadata of each individual Kafka message as it is received from the Kafka Topic.\n\nIf empty, the Topic Binding will not be operational.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "rejectedMsgCount": {
          "description": "Rejected message count. These messages were received from  Kafka but failed to be published to Solace.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "topicName": {
          "description": "The name of the Topic or a POSIX.2 regular expression starting with '^'.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "up": {
          "description": "Indicates whether the Topic Binding is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "upSinceTime": {
          "description": "The timestamp when the Topic Binding became up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Topic Binding was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.39. Replaced by upSinceTime.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverTopicBindingCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnKafkaReceiverTopicBindingLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Topic Binding object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaReceiverTopicBindingResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverTopicBindingCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverTopicBinding"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnKafkaReceiverTopicBindingLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaReceiverTopicBindingsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverTopicBindingCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverTopicBinding"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverTopicBindingLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaReceiversResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiver"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaReceiverLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaSender": {
      "properties": {
        "authenticationAwsMskIamAccessKeyId": {
          "description": "The AWS Access Key identifier, typically beginning \"AKIA...\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationAwsMskIamRegion": {
          "description": "The AWS Region code, such as \"us-east-1\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationAwsMskIamStsExternalId": {
          "description": "The External ID is a unique identifier that might be required when assuming a role. Used with STS only; optional.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationAwsMskIamStsRoleArn": {
          "description": "The Amazon Resource Name (ARN) of the role to assume, typically beginning \"arn:aws:iam::...\". Used with STS only.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationAwsMskIamStsRoleSessionName": {
          "description": "An identifier for the assumed role's session. Used with STS only.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.46.",
          "type": "string"
        },
        "authenticationBasicUsername": {
          "description": "The username the Kafka Sender uses to login to the remote Kafka broker. To be used when authenticationScheme is \"basic\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationClientCertConfigTime": {
          "description": "The timestamp of when the client-certificate was configured.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int64",
          "type": "integer"
        },
        "authenticationClientCertThumbprint": {
          "description": "The thumbprint of the client-certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "authenticationKerberosKeytabConfigTime": {
          "description": "The timestamp of when the keytab was configured.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.40.",
          "format": "int64",
          "type": "integer"
        },
        "authenticationKerberosKeytabFileName": {
          "description": "The name of this User Principal's keytab file.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.40.",
          "type": "string"
        },
        "authenticationKerberosKeytabThumbprint": {
          "description": "The thumbprint of the keytab.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.40.",
          "type": "string"
        },
        "authenticationKerberosServiceName": {
          "description": "The Kerberos service name of the remote Kafka broker, not including /hostname@REALM.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.40.",
          "type": "string"
        },
        "authenticationKerberosUserPrincipalName": {
          "description": "The Kerberos user principal name of the Kafka Sender. This must include the @&lt;REALM&gt; suffix.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.40.",
          "type": "string"
        },
        "authenticationOauthClientId": {
          "description": "The OAuth client ID. To be used when authenticationScheme is \"oauth-client\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationOauthClientScope": {
          "description": "The OAuth scope. To be used when authenticationScheme is \"oauth-client\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationOauthClientTokenEndpoint": {
          "description": "The OAuth token endpoint URL that the Kafka Sender will use to request a token for login to the Kafka broker. Must begin with \"https\". To be used when authenticationScheme is \"oauth-client\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationScheme": {
          "description": "The authentication scheme for the Kafka Sender. The bootstrap addresses must resolve to an appropriately configured and compatible listener port on the Kafka Broker for the given scheme.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - Anonymous Authentication. Used with Kafka Broker PLAINTEXT listener ports.\n\"aws-msk-iam\" - Amazon Web Services (AWS) Managed Streaming for Kafka (MSK) Identity and Access Management (IAM) Authentication. Requires encryption.\n\"aws-msk-iam-sts\" - AWS MSK IAM with Security Token Service (STS) Authentication. Requires encryption.\n\"basic\" - Basic Authentication. Used with Kafka Broker SASL_PLAINTEXT and SASL_SSL listener ports.\n\"scram\" - Salted Challenge Response Authentication. Used with Kafka Broker SASL_PLAINTEXT and SASL_SSL listener ports.\n\"client-certificate\" - Client Certificate Authentication. Used with Kafka Broker SSL listener ports.\n\"kerberos\" - Kerberos Authentication.\n\"oauth-client\" - Oauth Authentication. Used with Kafka Broker SASL_SSL listener ports.\n</pre>\n",
          "enum": [
            "none",
            "aws-msk-iam",
            "aws-msk-iam-sts",
            "basic",
            "scram",
            "client-certificate",
            "kerberos",
            "oauth-client"
          ],
          "type": "string"
        },
        "authenticationScramHash": {
          "description": "The hash used for SCRAM authentication. To be used when authenticationScheme is \"scram\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"sha-256\" - SHA-2 256 bits.\n\"sha-512\" - SHA-2 512 bits.\n</pre>\n",
          "enum": [
            "sha-256",
            "sha-512"
          ],
          "type": "string"
        },
        "authenticationScramUsername": {
          "description": "The username the Kafka Sender uses to login to the remote Kafka broker. To be used when authenticationScheme is \"scram\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "batchDelay": {
          "description": "Delay (in ms) to wait to accumulate a batch of messages to send. Batching is done for all Senders on a per-partition basis.\n\nThis corresponds to the Kafka producer API `linger.ms` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "batchMaxMsgCount": {
          "description": "Maximum number of messages sent in a single batch. Batching is done for all Senders on a per-partition basis.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "batchMaxSize": {
          "description": "Maximum size of a message batch, in bytes (B). Batching is done for all Senders on a per-partition basis.\n\nThis corresponds to the Kafka producer API `batch.size` configuration setting, and should not exceed either the Kafka broker `message.max.bytes` configuration setting, or the per-Topic override of `max.message.bytes`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "bootstrapAddressList": {
          "description": "Comma separated list of addresses (and optional ports) of brokers in the Kafka Cluster from which the state of the entire Kafka Cluster can be learned. If a port is not provided with an address it will default to 9092.\n\nThis corresponds to the Kafka producer API `bootstrap.servers` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientName": {
          "description": "The name of the Client for the Kafka Sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "connectionCount": {
          "description": "The number of connections to remote Kafka Brokers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "enabled": {
          "description": "Enable or disable the Kafka Sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "failureReason": {
          "description": "Indicates why the Kafka Sender is not operational.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "idempotenceEnabled": {
          "description": "Enable or disable idempotence for the Kafka Sender. Idempotence guarantees in order at-least-once message delivery to the remote Kafka Topic, at the expense of performance. When idempotence is enabled the Queue Bindings of the Kafka Sender must have ackMode of \"all\" to be operational.\n\nThis corresponds to the Kafka producer API `enable.idempotence` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "kafkaSenderName": {
          "description": "The name of the Kafka Sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastNotice": {
          "description": "Last notice issued for the Kafka Sender. If recent this may help to diagnose operational problems.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.39.",
          "type": "string"
        },
        "lastNoticeTime": {
          "description": "Timestamp of the last reported notice.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "rxMsgByteCount": {
          "description": "Received message byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgCount": {
          "description": "Received message count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxRequestByteCount": {
          "description": "Received request byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxRequestCount": {
          "description": "Received request count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "transportCompressionEnabled": {
          "description": "Enable or disable compression for the Kafka Sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "transportCompressionLevel": {
          "description": "Compression level. The valid range is dependent on the compression type.\n\nThis corresponds to the Kafka producer API `compression.level` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "transportCompressionType": {
          "description": "Compression type. Only relevant if compression is enabled.\n\nThis corresponds to the Kafka producer API `compression.type` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"gzip\" - GZIP Compression.\n\"snappy\" - Snappy Compression.\n\"lz4\" - LZ4 Compression.\n\"zstd\" - Zstandard Compression.\n</pre>\n",
          "enum": [
            "gzip",
            "snappy",
            "lz4",
            "zstd"
          ],
          "type": "string"
        },
        "transportTlsEnabled": {
          "description": "Enable or disable encryption (TLS) for the Kafka Sender. The bootstrap addresses must resolve to PLAINTEXT or SASL_PLAINTEXT listener ports when disabled, and SSL or SASL_SSL listener ports when enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "txMsgByteCount": {
          "description": "Sent message byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txMsgCount": {
          "description": "Sent message count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRequestByteCount": {
          "description": "Sent request byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRequestCount": {
          "description": "Sent request count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "up": {
          "description": "Indicates whether the Kafka Sender is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "upSinceTime": {
          "description": "The timestamp when the Kafka Sender became up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Kafka Sender was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.39. Replaced by upSinceTime.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderCollections": {
      "properties": {
        "keytabEntries": {
          "$ref": "#/definitions/MsgVpnKafkaSenderCollectionsKeytabEntries"
        },
        "queueBindings": {
          "$ref": "#/definitions/MsgVpnKafkaSenderCollectionsQueueBindings"
        },
        "remoteBrokers": {
          "$ref": "#/definitions/MsgVpnKafkaSenderCollectionsRemoteBrokers"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderCollectionsKeytabEntries": {
      "properties": {
        "count": {
          "description": "The total number of objects in the keytabEntries collection. Available since 2.40.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderCollectionsQueueBindings": {
      "properties": {
        "count": {
          "description": "The total number of objects in the queueBindings collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderCollectionsRemoteBrokers": {
      "properties": {
        "count": {
          "description": "The total number of objects in the remoteBrokers collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderKeytabEntriesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderKeytabEntryCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderKeytabEntry"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderKeytabEntryLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaSenderKeytabEntry": {
      "properties": {
        "encryptionType": {
          "description": "Encryption type used by the keytab entry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "kafkaSenderName": {
          "description": "The name of the Kafka Sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "keyVersionNumber": {
          "description": "Key Version Number (KVNO) of the keytab entry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "timestamp": {
          "description": "Timestamp of the keytab entry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderKeytabEntryCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnKafkaSenderKeytabEntryLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Kerberos Keytab Entries object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderKeytabEntryResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnKafkaSenderKeytabEntryCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnKafkaSenderKeytabEntry"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnKafkaSenderKeytabEntryLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaSenderLinks": {
      "properties": {
        "keytabEntriesUri": {
          "description": "The URI of this Kafka Sender's collection of Kerberos Keytab Entries objects. Available since 2.40.",
          "type": "string"
        },
        "queueBindingsUri": {
          "description": "The URI of this Kafka Sender's collection of Queue Binding objects.",
          "type": "string"
        },
        "remoteBrokersUri": {
          "description": "The URI of this Kafka Sender's collection of Remote Kafka Brokers objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Kafka Sender object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderQueueBinding": {
      "properties": {
        "ackMode": {
          "description": "The number of acks required from the remote Kafka Broker. When \"none\" messages are delivered at-most-once. When \"one\" or \"all\" messages are delivered at-least-once but may be reordered. This must be configured as \"all\" for an idempotent Kafka Sender, otherwise the Queue Binding will be operationally down.\n\nThis corresponds to the Kafka producer API `acks` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - No Acks.\n\"one\" - Leader Ack Only.\n\"all\" - All Replica Acks.\n</pre>\n",
          "enum": [
            "none",
            "one",
            "all"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable this queue binding of the Kafka Sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "failureReason": {
          "description": "Indicates why the Queue Binding is not operational.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "kafkaSenderName": {
          "description": "The name of the Kafka Sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastNotice": {
          "description": "Last notice issued for the Queue Binding. If recent this may help to diagnose operational problems.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.39.",
          "type": "string"
        },
        "lastNoticeTime": {
          "description": "Timestamp of the last reported notice.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "outstandingAckTime": {
          "description": "Indicates how long (in ms) the Queue Binding has been waiting for an ack from the Kafka Cluster for its last publish.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "partitionConsistentHash": {
          "description": "The hash algorithm to use for consistent partition selection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"crc\" - CRC Hash.\n\"murmur2\" - Murmer2 Hash.\n\"fnv1a\" - Fowler-Noll-Vo 1a Hash.\n</pre>\n",
          "enum": [
            "crc",
            "murmur2",
            "fnv1a"
          ],
          "type": "string"
        },
        "partitionExplicitNumber": {
          "description": "The partition number to use for explicit partition selection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "partitionRandomFallbackEnabled": {
          "description": "Enable or disable fallback to the random partition selection scheme when the consistent partition scheme is being used but no partition key is available for the message. When enabled a random partition will be selected for each unkeyed messages, otherwise some partition will be selected for groups of unkeyed messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "partitionScheme": {
          "description": "The partitioning scheme used to select a partition of the topic on the Kafka cluster to send messages to.\n\nThis corresponds to the Kafka producer API `partitioner.class` configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"consistent\" - Select a consistent partition for each key value. A hash of the key will be used to select the partition number.\n\"explicit\" - Select an explicit partition independent of key value.\n\"random\" - Select a random partition independent of key value.\n</pre>\n",
          "enum": [
            "consistent",
            "explicit",
            "random"
          ],
          "type": "string"
        },
        "queueName": {
          "description": "The name of the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteKey": {
          "description": "The Substitution Expression used to generate the key for each message sent to Kafka. This expression can include fields extracted from the metadata of each individual Solace message as it is taken from the Solace Queue.\n\nIf empty, no key is included for each message as it is published into Kafka.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "remoteTopic": {
          "description": "The Kafka Topic on the Kafka Cluster to send each message taken from the Solace Queue to.\n\nIf empty, the Queue Binding will not be operational.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "up": {
          "description": "Indicates whether the Queue Binding is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "upSinceTime": {
          "description": "The timestamp when the Queue Binding became up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.39.",
          "format": "int64",
          "type": "integer"
        },
        "uptime": {
          "description": "The amount of time in seconds since the Queue Binding was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated since 2.39. Replaced by upSinceTime.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderQueueBindingCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnKafkaSenderQueueBindingLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Queue Binding object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderQueueBindingResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnKafkaSenderQueueBindingCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnKafkaSenderQueueBinding"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnKafkaSenderQueueBindingLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaSenderQueueBindingsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderQueueBindingCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderQueueBinding"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderQueueBindingLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaSenderRemoteBroker": {
      "properties": {
        "averageLatency": {
          "description": "Average latency (in ms) for the remote broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "connectCount": {
          "description": "Connect attempt count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "kafkaSenderName": {
          "description": "The name of the Kafka Sender.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "remoteBroker": {
          "description": "The Kafka remote broker name.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "rxErrorCount": {
          "description": "Received error count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxResponseByteCount": {
          "description": "Received response byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxResponseCount": {
          "description": "Received response count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "state": {
          "description": "Remote broker state.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "txErrorCount": {
          "description": "Sent error count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRequestByteCount": {
          "description": "Sent request byte count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRequestCount": {
          "description": "Sent request count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txRetryCount": {
          "description": "Sent request retry count.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderRemoteBrokerCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnKafkaSenderRemoteBrokerLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Remote Kafka Brokers object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnKafkaSenderRemoteBrokerResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnKafkaSenderRemoteBrokerCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnKafkaSenderRemoteBroker"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnKafkaSenderRemoteBrokerLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaSenderRemoteBrokersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderRemoteBrokerCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderRemoteBroker"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderRemoteBrokerLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaSenderResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnKafkaSenderCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnKafkaSender"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnKafkaSenderLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnKafkaSendersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSender"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnKafkaSenderLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnLinks": {
      "properties": {
        "aclProfilesUri": {
          "description": "The URI of this Message VPN's collection of ACL Profile objects.",
          "type": "string"
        },
        "authenticationKerberosRealmsUri": {
          "description": "The URI of this Message VPN's collection of Realm objects. Available since 2.40.",
          "type": "string"
        },
        "authenticationOauthProfilesUri": {
          "description": "The URI of this Message VPN's collection of OAuth Profile objects. Available since 2.25.",
          "type": "string"
        },
        "authenticationOauthProvidersUri": {
          "description": "The URI of this Message VPN's collection of OAuth Provider objects. Deprecated since 2.25. Replaced by authenticationOauthProfiles.",
          "type": "string"
        },
        "authorizationGroupsUri": {
          "description": "The URI of this Message VPN's collection of Authorization Group objects.",
          "type": "string"
        },
        "bridgesUri": {
          "description": "The URI of this Message VPN's collection of Bridge objects.",
          "type": "string"
        },
        "certMatchingRulesUri": {
          "description": "The URI of this Message VPN's collection of Certificate Matching Rule objects. Available since 2.27.",
          "type": "string"
        },
        "clientProfilesUri": {
          "description": "The URI of this Message VPN's collection of Client Profile objects.",
          "type": "string"
        },
        "clientUsernamesUri": {
          "description": "The URI of this Message VPN's collection of Client Username objects.",
          "type": "string"
        },
        "clientsUri": {
          "description": "The URI of this Message VPN's collection of Client objects. Available since 2.12.",
          "type": "string"
        },
        "configSyncRemoteNodesUri": {
          "description": "The URI of this Message VPN's collection of Config Sync Remote Node objects. Deprecated since 2.22. This attribute has been deprecated.",
          "type": "string"
        },
        "distributedCachesUri": {
          "description": "The URI of this Message VPN's collection of Distributed Cache objects.",
          "type": "string"
        },
        "dmrBridgesUri": {
          "description": "The URI of this Message VPN's collection of DMR Bridge objects.",
          "type": "string"
        },
        "jndiConnectionFactoriesUri": {
          "description": "The URI of this Message VPN's collection of JNDI Connection Factory objects.",
          "type": "string"
        },
        "jndiQueuesUri": {
          "description": "The URI of this Message VPN's collection of JNDI Queue objects.",
          "type": "string"
        },
        "jndiTopicsUri": {
          "description": "The URI of this Message VPN's collection of JNDI Topic objects.",
          "type": "string"
        },
        "kafkaReceiversUri": {
          "description": "The URI of this Message VPN's collection of Kafka Receiver objects. Available since 2.36.",
          "type": "string"
        },
        "kafkaSendersUri": {
          "description": "The URI of this Message VPN's collection of Kafka Sender objects. Available since 2.36.",
          "type": "string"
        },
        "mqttRetainCachesUri": {
          "description": "The URI of this Message VPN's collection of MQTT Retain Cache objects.",
          "type": "string"
        },
        "mqttSessionsUri": {
          "description": "The URI of this Message VPN's collection of MQTT Session objects.",
          "type": "string"
        },
        "proxiesUri": {
          "description": "The URI of this Message VPN's collection of Proxy objects. Available since 2.36.",
          "type": "string"
        },
        "queueTemplatesUri": {
          "description": "The URI of this Message VPN's collection of Queue Template objects. Available since 2.14.",
          "type": "string"
        },
        "queuesUri": {
          "description": "The URI of this Message VPN's collection of Queue objects. Available since 2.12.",
          "type": "string"
        },
        "replayLogsUri": {
          "description": "The URI of this Message VPN's collection of Replay Log objects.",
          "type": "string"
        },
        "replicatedTopicsUri": {
          "description": "The URI of this Message VPN's collection of Replicated Topic objects. Available since 2.12.",
          "type": "string"
        },
        "restDeliveryPointsUri": {
          "description": "The URI of this Message VPN's collection of REST Delivery Point objects.",
          "type": "string"
        },
        "telemetryProfilesUri": {
          "description": "The URI of this Message VPN's collection of Telemetry Profile objects. Available since 2.31.",
          "type": "string"
        },
        "topicEndpointTemplatesUri": {
          "description": "The URI of this Message VPN's collection of Topic Endpoint Template objects. Available since 2.14.",
          "type": "string"
        },
        "topicEndpointsUri": {
          "description": "The URI of this Message VPN's collection of Topic Endpoint objects. Available since 2.12.",
          "type": "string"
        },
        "transactionsUri": {
          "description": "The URI of this Message VPN's collection of Replicated Local Transaction or XA Transaction objects. Available since 2.12.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Message VPN object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttRetainCache": {
      "properties": {
        "backupCacheInstance": {
          "description": "The name of the backup Cache Instance associated with this MQTT Retain Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "backupFailureReason": {
          "description": "The reason why the backup cache associated with this MQTT Retain Cache is operationally down, if any.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "backupUp": {
          "description": "Indicates whether the backup cache associated with this MQTT Retain Cache is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "backupUptime": {
          "description": "The number of seconds that the backup cache associated with this MQTT Retain Cache has been operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "cacheCluster": {
          "description": "The name of the Cache Cluster associated with this MQTT Retain Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "cacheName": {
          "description": "The name of the MQTT Retain Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "distributedCache": {
          "description": "The name of the Distributed Cache associated with this MQTT Retain Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable this MQTT Retain Cache. When the cache is disabled, neither retain messages nor retain requests will be delivered by the cache. However, live retain messages will continue to be delivered to currently connected MQTT clients.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "failureReason": {
          "description": "The reason why this MQTT Retain Cache is operationally down, if any.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgLifetime": {
          "description": "The message lifetime, in seconds. If a message remains cached for the duration of its lifetime, the cache will remove the message. A lifetime of 0 results in the message being retained indefinitely, otherwise it must be 3 seconds or more.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "primaryCacheInstance": {
          "description": "The name of the primary Cache Instance associated with this MQTT Retain Cache.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "primaryFailureReason": {
          "description": "The reason why the primary cache associated with this MQTT Retain Cache is operationally down, if any.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "primaryUp": {
          "description": "Indicates whether the primary cache associated with this MQTT Retain Cache is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "primaryUptime": {
          "description": "The number of seconds that the primary cache associated with this MQTT Retain Cache has been operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "up": {
          "description": "Indicates whether this MQTT Retain Cache is operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "uptime": {
          "description": "The number of seconds that the MQTT Retain Cache has been operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttRetainCacheCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnMqttRetainCacheLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this MQTT Retain Cache object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttRetainCacheResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnMqttRetainCacheCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnMqttRetainCache"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnMqttRetainCacheLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnMqttRetainCachesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttRetainCacheCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttRetainCache"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttRetainCacheLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnMqttSession": {
      "properties": {
        "clean": {
          "description": "Indicates whether the Client requested a clean (newly created) MQTT Session when connecting. If not clean (already existing), then previously stored messages for QoS 1 subscriptions are delivered.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "clientName": {
          "description": "The name of the MQTT Session Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "counter": {
          "$ref": "#/definitions/MsgVpnMqttSessionCounter"
        },
        "createdByManagement": {
          "description": "Indicates whether the MQTT Session was created by a Management API.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "durable": {
          "description": "Indicates whether the MQTT Session is durable. Disconnected durable MQTT Sessions are deleted when their expiry time is reached. Disconnected non-durable MQTT Sessions are deleted immediately.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enable or disable the MQTT Session. When disabled, the client is disconnected, new messages matching QoS 0 subscriptions are discarded, and new messages matching QoS 1 subscriptions are stored for future delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "expiryTime": {
          "description": "The timestamp of when the disconnected MQTT session expires and is deleted. This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). A value of 0 indicates that the session is either connected, or will never expire.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "format": "int64",
          "type": "integer"
        },
        "maxPacketSize": {
          "description": "The maximum size of a packet, including all headers and payload, that the Client has signaled it is willing to accept. A value of zero indicates no limit. Note that there are other broker settings which may further limit packet size.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "format": "int64",
          "type": "integer"
        },
        "mqttConnackErrorTxCount": {
          "description": "The number of MQTT connect acknowledgment (CONNACK) refused response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttConnackTxCount": {
          "description": "The number of MQTT connect acknowledgment (CONNACK) accepted response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttConnectRxCount": {
          "description": "The number of MQTT connect (CONNECT) request packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttDisconnectRxCount": {
          "description": "The number of MQTT disconnect (DISCONNECT) request packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPingreqRxCount": {
          "description": "The number of MQTT ping request (PINGREQ) packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPingrespTxCount": {
          "description": "The number of MQTT ping response (PINGRESP) packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubackRxCount": {
          "description": "The number of MQTT publish acknowledgment (PUBACK) response packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubackTxCount": {
          "description": "The number of MQTT publish acknowledgment (PUBACK) response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubcompTxCount": {
          "description": "The number of MQTT publish complete (PUBCOMP) packets transmitted to the Client in response to a PUBREL packet. These packets are the fourth and final packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos0RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 0 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos0TxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets transmitted to the Client for QoS 0 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos1RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 1 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos1TxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets transmitted to the Client for QoS 1 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos2RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 2 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubrecTxCount": {
          "description": "The number of MQTT publish received (PUBREC) packets transmitted to the Client in response to a PUBLISH packet with QoS 2. These packets are the second packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubrelRxCount": {
          "description": "The number of MQTT publish release (PUBREL) packets received from the Client in response to a PUBREC packet. These packets are the third packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "mqttSessionClientId": {
          "description": "The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "mqttSessionVirtualRouter": {
          "description": "The virtual router of the MQTT Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The MQTT Session belongs to the primary virtual router.\n\"backup\" - The MQTT Session belongs to the backup virtual router.\n\"auto\" - The MQTT Session is automatically assigned a virtual router at creation, depending on the broker's active-standby role.\n</pre>\n",
          "enum": [
            "primary",
            "backup",
            "auto"
          ],
          "type": "string"
        },
        "mqttSubackErrorTxCount": {
          "description": "The number of MQTT subscribe acknowledgment (SUBACK) failure response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "mqttSubackTxCount": {
          "description": "The number of MQTT subscribe acknowledgment (SUBACK) response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "mqttSubscribeRxCount": {
          "description": "The number of MQTT subscribe (SUBSCRIBE) request packets received from the Client to create one or more topic subscriptions.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "mqttUnsubackTxCount": {
          "description": "The number of MQTT unsubscribe acknowledgment (UNSUBACK) response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "mqttUnsubscribeRxCount": {
          "description": "The number of MQTT unsubscribe (UNSUBSCRIBE) request packets received from the Client to remove one or more topic subscriptions.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.23.",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "owner": {
          "description": "The owner of the MQTT Session. For externally-created sessions this defaults to the Client Username of the connecting client. For management-created sessions this defaults to empty.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "queueConsumerAckPropagationEnabled": {
          "description": "Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to the standby replication Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "type": "boolean"
        },
        "queueDeadMsgQueue": {
          "description": "The name of the Dead Message Queue (DMQ) used by the MQTT Session Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "type": "string"
        },
        "queueEventBindCountThreshold": {
          "$ref": "#/definitions/MsgVpnMqttSessionQueueEventBindCountThreshold"
        },
        "queueEventMsgSpoolUsageThreshold": {
          "$ref": "#/definitions/MsgVpnMqttSessionQueueEventMsgSpoolUsageThreshold"
        },
        "queueEventRejectLowPriorityMsgLimitThreshold": {
          "$ref": "#/definitions/MsgVpnMqttSessionQueueEventRejectLowPriorityMsgLimitThreshold"
        },
        "queueMaxBindCount": {
          "description": "The maximum number of consumer flows that can bind to the MQTT Session Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "queueMaxDeliveredUnackedMsgsPerFlow": {
          "description": "The maximum number of messages delivered but not acknowledged per flow for the MQTT Session Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "queueMaxMsgSize": {
          "description": "The maximum message size allowed in the MQTT Session Queue, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int32",
          "type": "integer"
        },
        "queueMaxMsgSpoolUsage": {
          "description": "The maximum message spool usage allowed by the MQTT Session Queue, in megabytes (MB). A value of 0 only allows spooling of the last message received and disables quota checking.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "queueMaxRedeliveryCount": {
          "description": "The maximum number of times the MQTT Session Queue will attempt redelivery of a message prior to it being discarded or moved to the DMQ. A value of 0 means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "queueMaxTtl": {
          "description": "The maximum time in seconds a message can stay in the MQTT Session Queue when `queueRespectTtlEnabled` is `\"true\"`. A message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queueMaxTtl` configured for the MQTT Session Queue, is exceeded. A value of 0 disables expiry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "queueName": {
          "description": "The name of the MQTT Session Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "queueRejectLowPriorityMsgEnabled": {
          "description": "Enable or disable the checking of low priority messages against the `queueRejectLowPriorityMsgLimit`. This may only be enabled if `queueRejectMsgToSenderOnDiscardBehavior` does not have a value of `\"never\"`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "type": "boolean"
        },
        "queueRejectLowPriorityMsgLimit": {
          "description": "The number of messages of any priority in the MQTT Session Queue above which low priority messages are not admitted but higher priority messages are allowed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "format": "int64",
          "type": "integer"
        },
        "queueRejectMsgToSenderOnDiscardBehavior": {
          "description": "Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"never\" - Silently discard messages.\n\"when-queue-enabled\" - NACK each message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.\n\"always\" - NACK each message discard back to the client, including messages that are discarded because an endpoint is administratively disabled.\n</pre>\n Available since 2.14.",
          "enum": [
            "never",
            "when-queue-enabled",
            "always"
          ],
          "type": "string"
        },
        "queueRespectTtlEnabled": {
          "description": "Enable or disable the respecting of the time-to-live (TTL) for messages in the MQTT Session Queue. When enabled, expired messages are discarded or moved to the DMQ.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.14.",
          "type": "boolean"
        },
        "rxMax": {
          "description": "The maximum number of outstanding QoS1 and QoS2 messages that the Client has signaled it is willing to accept. Note that there are other broker settings which may further limit the number of outstanding messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "format": "int64",
          "type": "integer"
        },
        "will": {
          "description": "Indicates whether the MQTT Session has the Will message specified by the Client. The Will message is published if the Client disconnects without sending the MQTT DISCONNECT packet.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionCollections": {
      "properties": {
        "subscriptions": {
          "$ref": "#/definitions/MsgVpnMqttSessionCollectionsSubscriptions"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionCollectionsSubscriptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the subscriptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionCounter": {
      "description": "The counters for the MQTT Session. Deprecated since 2.13. All attributes in this object have been moved to the MsgVpnMqttSession object.",
      "properties": {
        "mqttConnackErrorTxCount": {
          "description": "The number of MQTT connect acknowledgment (CONNACK) refused response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttConnackTxCount": {
          "description": "The number of MQTT connect acknowledgment (CONNACK) accepted response packets transmitted to the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttConnectRxCount": {
          "description": "The number of MQTT connect (CONNECT) request packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttDisconnectRxCount": {
          "description": "The number of MQTT disconnect (DISCONNECT) request packets received from the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubcompTxCount": {
          "description": "The number of MQTT publish complete (PUBCOMP) packets transmitted to the Client in response to a PUBREL packet. These packets are the fourth and final packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos0RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 0 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos0TxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets transmitted to the Client for QoS 0 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos1RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 1 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos1TxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets transmitted to the Client for QoS 1 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPublishQos2RxCount": {
          "description": "The number of MQTT publish message (PUBLISH) request packets received from the Client for QoS 2 message delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubrecTxCount": {
          "description": "The number of MQTT publish received (PUBREC) packets transmitted to the Client in response to a PUBLISH packet with QoS 2. These packets are the second packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        },
        "mqttPubrelRxCount": {
          "description": "The number of MQTT publish release (PUBREL) packets received from the Client in response to a PUBREC packet. These packets are the third packet of a QoS 2 protocol exchange.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnMqttSession object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionLinks": {
      "properties": {
        "subscriptionsUri": {
          "description": "The URI of this MQTT Session's collection of Subscription objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this MQTT Session object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionQueueEventBindCountThreshold": {
      "description": "Thresholds for the high number of the MQTT Session Queue Consumers Event, relative to `queueMaxBindCount`. Available since 2.14.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionQueueEventMsgSpoolUsageThreshold": {
      "description": "The threshold for the Message Spool usage event of the MQTT Session Queue, relative to `queueMaxMsgSpoolUsage`. Available since 2.14.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionQueueEventRejectLowPriorityMsgLimitThreshold": {
      "description": "The threshold for the maximum allowed number of any priority messages queued in the MQTT Session Queue, relative to `queueRejectLowPriorityMsgLimit`. Available since 2.14.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnMqttSessionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnMqttSession"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnMqttSessionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnMqttSessionSubscription": {
      "properties": {
        "mqttSessionClientId": {
          "description": "The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "mqttSessionVirtualRouter": {
          "description": "The virtual router of the MQTT Session.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The MQTT Session belongs to the primary virtual router.\n\"backup\" - The MQTT Session belongs to the backup virtual router.\n\"auto\" - The MQTT Session is automatically assigned a virtual router at creation, depending on the broker's active-standby role.\n</pre>\n",
          "enum": [
            "primary",
            "backup",
            "auto"
          ],
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscriptionQos": {
          "description": "The quality of service (QoS) for the subscription as either 0 (deliver at most once) or 1 (deliver at least once). QoS 2 is not supported, but QoS 2 messages attracted by QoS 0 or QoS 1 subscriptions are accepted and delivered accordingly.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "subscriptionTopic": {
          "description": "The MQTT subscription topic.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionSubscriptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnMqttSessionSubscriptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Subscription object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnMqttSessionSubscriptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnMqttSessionSubscriptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnMqttSessionSubscription"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnMqttSessionSubscriptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnMqttSessionSubscriptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttSessionSubscriptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttSessionSubscription"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttSessionSubscriptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnMqttSessionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttSessionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttSession"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnMqttSessionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnProxiesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnProxyCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnProxy"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnProxyLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnProxy": {
      "properties": {
        "authenticationBasicUsername": {
          "description": "The username to use with basic authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationScheme": {
          "description": "The authentication scheme used to connect to the proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - No authentication.\n\"basic\" - Username/password authentication.\n</pre>\n",
          "enum": [
            "none",
            "basic"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable the proxy. When disabled, no connections are initiated to this particular Proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "host": {
          "description": "The IP address or host name of the proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "port": {
          "description": "The port to connect to on the proxy host.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "proxyName": {
          "description": "The name of the proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "proxyType": {
          "description": "The type of proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"direct\" - Direct connection (no proxy).\n\"http\" - HTTP proxy.\n</pre>\n",
          "enum": [
            "direct",
            "http"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnProxyCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnProxyLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Proxy object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnProxyResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnProxyCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnProxy"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnProxyLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueue": {
      "properties": {
        "accessType": {
          "description": "The access type for delivering messages to consumer flows bound to the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"exclusive\" - Exclusive delivery of messages to the first bound consumer flow.\n\"non-exclusive\" - Non-exclusive delivery of messages to bound consumer flows in a round-robin (if partition count is zero) or partitioned (if partition count is non-zero) fashion.\n</pre>\n",
          "enum": [
            "exclusive",
            "non-exclusive"
          ],
          "type": "string"
        },
        "alreadyBoundBindFailureCount": {
          "description": "The number of Queue bind failures due to being already bound.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageBindRequestRate": {
          "description": "The one minute average of the bind request rate received by the Queue, in binds per second (binds/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxByteRate": {
          "description": "The one minute average of the message rate received by the Queue, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageRxMsgRate": {
          "description": "The one minute average of the message rate received by the Queue, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageTxByteRate": {
          "description": "The one minute average of the message rate transmitted by the Queue, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageTxMsgRate": {
          "description": "The one minute average of the message rate transmitted by the Queue, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "bindRequestCount": {
          "description": "The number of consumer requests to bind to the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "bindRequestRate": {
          "description": "The current bind request rate received by the Queue, in binds per second (binds/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "bindSuccessCount": {
          "description": "The number of successful consumer requests to bind to the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "bindTimeForwardingMode": {
          "description": "The forwarding mode of the Queue at bind time.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"store-and-forward\" - Deliver messages using the guaranteed data path.\n\"cut-through\" - Deliver messages using the direct and guaranteed data paths for lower latency.\n</pre>\n",
          "type": "string"
        },
        "clientProfileDeniedDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to being denied by the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "consumerAckPropagationEnabled": {
          "description": "Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to the standby replication Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "createdByManagement": {
          "description": "Indicates whether the Queue was created by a management API (CLI or SEMP).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "deadMsgQueue": {
          "description": "The name of the Dead Message Queue (DMQ) used by the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "deletedMsgCount": {
          "description": "The number of guaranteed messages deleted from the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "deliveryCountEnabled": {
          "description": "Enable or disable the ability for client applications to query the message delivery count of messages received from the Queue. This is a controlled availability feature. Please contact support to find out if this feature is supported for your use case.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "boolean"
        },
        "deliveryDelay": {
          "description": "The delay, in seconds, to apply to messages arriving on the Queue before the messages are eligible for delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "destinationGroupErrorDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to a destination group error.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "disabledBindFailureCount": {
          "description": "The number of Queue bind failures due to being disabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "disabledDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to it being disabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "durable": {
          "description": "Indicates whether the Queue is durable and not temporary.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "egressEnabled": {
          "description": "Enable or disable the transmission of messages from the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "eventBindCountThreshold": {
          "$ref": "#/definitions/MsgVpnQueueEventBindCountThreshold"
        },
        "eventMsgSpoolUsageThreshold": {
          "$ref": "#/definitions/MsgVpnQueueEventMsgSpoolUsageThreshold"
        },
        "eventRejectLowPriorityMsgLimitThreshold": {
          "$ref": "#/definitions/MsgVpnQueueEventRejectLowPriorityMsgLimitThreshold"
        },
        "highestAckedMsgId": {
          "description": "The highest identifier (ID) of guaranteed messages in the Queue that were acknowledged.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "highestMsgId": {
          "description": "The highest identifier (ID) of guaranteed messages in the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "inProgressAckMsgCount": {
          "description": "The number of acknowledgment messages received by the Queue that are in the process of updating and deleting associated guaranteed messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "ingressEnabled": {
          "description": "Enable or disable the reception of messages to the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "invalidSelectorBindFailureCount": {
          "description": "The number of Queue bind failures due to an invalid selector.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lastReplayCompleteTime": {
          "description": "The timestamp of the last completed replay for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastReplayFailureReason": {
          "description": "The reason for the last replay failure for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastReplayFailureTime": {
          "description": "The timestamp of the last replay failure for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastReplayStartTime": {
          "description": "The timestamp of the last replay started for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastReplayedMsgTxTime": {
          "description": "The timestamp of the last replayed message transmitted by the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastSpooledMsgId": {
          "description": "The identifier (ID) of the last guaranteed message spooled in the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowPriorityMsgCongestionDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to low priority message congestion control.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowPriorityMsgCongestionState": {
          "description": "The state of the low priority message congestion in the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"disabled\" - Messages are not being checked for priority.\n\"not-congested\" - Low priority messages are being stored and delivered.\n\"congested\" - Low priority messages are being discarded.\n</pre>\n",
          "type": "string"
        },
        "lowestAckedMsgId": {
          "description": "The lowest identifier (ID) of guaranteed messages in the Queue that were acknowledged.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowestMsgId": {
          "description": "The lowest identifier (ID) of guaranteed messages in the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxBindCount": {
          "description": "The maximum number of consumer flows that can bind to the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxBindCountExceededBindFailureCount": {
          "description": "The number of Queue bind failures due to the maximum bind count being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxDeliveredUnackedMsgsPerFlow": {
          "description": "The maximum number of messages delivered but not acknowledged per flow for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgSize": {
          "description": "The maximum message size allowed in the Queue, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "maxMsgSizeExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to the maximum message size being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgSpoolUsage": {
          "description": "The maximum message spool usage allowed by the Queue, in megabytes (MB). A value of 0 only allows spooling of the last message received and disables quota checking.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgSpoolUsageExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to the maximum message spool usage being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryCount": {
          "description": "The maximum number of times the Queue will attempt redelivery of a message prior to it being discarded or moved to the DMQ. A value of 0 means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to the maximum redelivery attempts being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryExceededToDmqFailedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to the maximum redelivery attempts being exceeded and failing to move to the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryExceededToDmqMsgCount": {
          "description": "The number of guaranteed messages moved to the Dead Message Queue (DMQ) by the Queue due to the maximum redelivery attempts being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxTtl": {
          "description": "The maximum time in seconds a message can stay in the Queue when `respectTtlEnabled` is `\"true\"`. A message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `maxTtl` configured for the Queue, is exceeded. A value of 0 disables expiry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTtlExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to the maximum time-to-live (TTL) in hops being exceeded. The TTL hop count is incremented when the message crosses a bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxTtlExpiredDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to the maximum time-to-live (TTL) timestamp expiring.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxTtlExpiredToDmqFailedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to the maximum time-to-live (TTL) timestamp expiring and failing to move to the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxTtlExpiredToDmqMsgCount": {
          "description": "The number of guaranteed messages moved to the Dead Message Queue (DMQ) by the Queue due to the maximum time-to-live (TTL) timestamp expiring.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolPeakUsage": {
          "description": "The message spool peak usage by the Queue, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolUsage": {
          "description": "The message spool usage by the Queue, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "networkTopic": {
          "description": "The name of the network topic for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "noLocalDeliveryDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to no local delivery being requested.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "otherBindFailureCount": {
          "description": "The number of Queue bind failures due to other reasons.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "owner": {
          "description": "The Client Username that owns the Queue and has permission equivalent to `\"delete\"`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "partitionClientName": {
          "description": "The name of the client assigned to the partition if the client is currently bound to the queue. Only relevant for queues implementing an individual partition.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.35.",
          "type": "string"
        },
        "partitionCount": {
          "description": "The count of partitions of the queue. Only relevant for queues with an access type of non-exclusive. When zero, bound clients receive messages round-robin. Otherwise, bound clients receive messages from individually assigned partitions.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.35.",
          "format": "int32",
          "type": "integer"
        },
        "partitionNumber": {
          "description": "The partition number. Only relevant for queues implementing an individual partition.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.35.",
          "format": "int32",
          "type": "integer"
        },
        "partitionOperationalCount": {
          "description": "The operational count of partitions of the queue. Only relevant for queues with an access type of non-exclusive. This may not match the configured count while scaling is underway.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.35.",
          "format": "int32",
          "type": "integer"
        },
        "partitionQueueName": {
          "description": "The name of our partitioned queue. Only relevant for queues implementing an individual partition.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.35.",
          "type": "string"
        },
        "partitionRebalanceDelay": {
          "description": "The delay (in seconds) before a partition rebalance is started once needed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.35.",
          "format": "int64",
          "type": "integer"
        },
        "partitionRebalanceMaxHandoffTime": {
          "description": "The maximum time (in seconds) to wait before handing off a partition while rebalancing.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.35.",
          "format": "int64",
          "type": "integer"
        },
        "partitionRebalanceStatus": {
          "description": "The rebalance status of the partitioned queue. Only relevant for queues with an access type of non-exclusive and at least 1 partition.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"ready\" - Rebalancing is complete.\n\"holddown\" - Rebalancing will start after delay.\n\"rebalancing\" - Rebalancing is underway.\n</pre>\n Available since 2.35.",
          "type": "string"
        },
        "partitionScaleStatus": {
          "description": "The scale status of the partitioned queue. Only relevant for queues with an access type of non-exclusive and at least 1 partition.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"invalid-exclusive\" - Exclusive queues have no partitions.\n\"ready\" - Partition scaling is complete.\n\"scaling-up\" - Partitions are being added.\n\"scaling-down\" - Partitions are being removed.\n\"max-partitioned-queues-exceeded\" - Maximum number of partitioned queues has been exceeded.\n\"max-partitions-exceeded\" - Maximum number of partitions has been exceeded for this partitioned queue.\n</pre>\n Available since 2.35.",
          "type": "string"
        },
        "partitionStatus": {
          "description": "The status of the partition of the partitioned queue. Only relevant for queues implementing an individual partition.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"unassigned\" - Partition is not assigned to a client.\n\"ready\" - Partition is assigned to a client.\n\"paused\" - Partition is being handed off to another client.\n\"unbound\" - Assigned client is not bound.\n</pre>\n Available since 2.35.",
          "type": "string"
        },
        "permission": {
          "description": "The permission level for all consumers of the Queue, excluding the owner.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"no-access\" - Disallows all access.\n\"read-only\" - Read-only access to the messages.\n\"consume\" - Consume (read and remove) messages.\n\"modify-topic\" - Consume messages or modify the topic/selector.\n\"delete\" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.\n</pre>\n",
          "enum": [
            "no-access",
            "read-only",
            "consume",
            "modify-topic",
            "delete"
          ],
          "type": "string"
        },
        "queueName": {
          "description": "The name of the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "redeliveredMsgCount": {
          "description": "The number of guaranteed messages transmitted by the Queue for redelivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "redeliveryDelayEnabled": {
          "description": "Enable or disable a message redelivery delay. When false, messages are redelivered as soon as possible.  When true, messages are redelivered according to the initial, max and multiplier.  This should only be enabled when redelivery is enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "type": "boolean"
        },
        "redeliveryDelayInitialInterval": {
          "description": "The delay to be used between the first 2 redelivery attempts.  This value is in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryDelayMaxInterval": {
          "description": "The maximum delay to be used between any 2 redelivery attempts.  This value is in milliseconds.  Due to technical limitations, some redelivery attempt delays may slightly exceed this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryDelayMultiplier": {
          "description": "The amount each delay interval is multiplied by after each failed delivery attempt.  This number is in a fixed-point decimal format in which you must divide by 100 to get the floating point value. For example, a value of 125 would cause the delay to be multiplied by 1.25.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryEnabled": {
          "description": "Enable or disable message redelivery. When enabled, the number of redelivery attempts is controlled by maxRedeliveryCount. When disabled, the message will never be delivered from the queue more than once.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "type": "boolean"
        },
        "rejectLowPriorityMsgEnabled": {
          "description": "Enable or disable the checking of low priority messages against the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior` does not have a value of `\"never\"`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "rejectLowPriorityMsgLimit": {
          "description": "The number of messages of any priority in the Queue above which low priority messages are not admitted but higher priority messages are allowed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "rejectMsgToSenderOnDiscardBehavior": {
          "description": "Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"never\" - Silently discard messages.\n\"when-queue-enabled\" - NACK each message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.\n\"always\" - NACK each message discard back to the client, including messages that are discarded because an endpoint is administratively disabled.\n</pre>\n",
          "enum": [
            "never",
            "when-queue-enabled",
            "always"
          ],
          "type": "string"
        },
        "replayFailureCount": {
          "description": "The number of replays that failed for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayStartCount": {
          "description": "The number of replays started for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayState": {
          "description": "The state of replay for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"initializing\" - All messages are being deleted from the endpoint before replay starts.\n\"active\" - Subscription matching logged messages are being replayed to the endpoint.\n\"pending-complete\" - Replay is complete, but final accounting is in progress.\n\"complete\" - Replay and all related activities are complete.\n\"failed\" - Replay has failed and is waiting for an unbind response.\n</pre>\n",
          "type": "string"
        },
        "replaySuccessCount": {
          "description": "The number of replays that succeeded for the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayedAckedMsgCount": {
          "description": "The number of replayed messages transmitted by the Queue and acked by all consumers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayedTxMsgCount": {
          "description": "The number of replayed messages transmitted by the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveAckPropTxMsgCount": {
          "description": "The number of acknowledgment messages propagated by the Queue to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyAckPropRxMsgCount": {
          "description": "The number of propagated acknowledgment messages received by the Queue from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyAckedByAckPropMsgCount": {
          "description": "The number of messages acknowledged in the Queue by acknowledgment propagation from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyRxMsgCount": {
          "description": "The number of messages received by the Queue from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "respectMsgPriorityEnabled": {
          "description": "Enable or disable the respecting of message priority. When enabled, messages contained in the Queue are delivered in priority order, from 9 (highest) to 0 (lowest). Regardless of this setting, message priority is not respected when browsing the queue, when the queue is used by a bridge, or if the queue is partitioned.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "respectTtlEnabled": {
          "description": "Enable or disable the respecting of the time-to-live (TTL) for messages in the Queue. When enabled, expired messages are discarded or moved to the DMQ.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "rxByteRate": {
          "description": "The current message rate received by the Queue, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgRate": {
          "description": "The current message rate received by the Queue, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spooledByteCount": {
          "description": "The amount of guaranteed messages that were spooled in the Queue, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spooledMsgCount": {
          "description": "The number of guaranteed messages that were spooled in the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "transportRetransmitMsgCount": {
          "description": "The number of guaranteed messages that were retransmitted by the Queue at the transport layer as part of a single delivery attempt.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "txByteRate": {
          "description": "The current message rate transmitted by the Queue, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txMsgRate": {
          "description": "The current message rate transmitted by the Queue, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txSelector": {
          "description": "Indicates whether the Queue has consumers with selectors to filter transmitted messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "txUnackedMsgCount": {
          "description": "The number of guaranteed messages in the Queue that have been transmitted but not acknowledged by all consumers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "virtualRouter": {
          "description": "The virtual router of the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The endpoint belongs to the primary virtual router.\n\"backup\" - The endpoint belongs to the backup virtual router.\n</pre>\n Deprecated since 2.31. This attribute has been deprecated. When Guaranteed Messaging is active, this value is always the virtual router for which Guaranteed Messaging is enabled. Otherwise, this value should be ignored.",
          "type": "string"
        },
        "xaTransactionNotSupportedDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Queue due to XA Transactions not being supported.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.35.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueCollections": {
      "properties": {
        "msgs": {
          "$ref": "#/definitions/MsgVpnQueueCollectionsMsgs"
        },
        "priorities": {
          "$ref": "#/definitions/MsgVpnQueueCollectionsPriorities"
        },
        "subscriptions": {
          "$ref": "#/definitions/MsgVpnQueueCollectionsSubscriptions"
        },
        "txFlows": {
          "$ref": "#/definitions/MsgVpnQueueCollectionsTxFlows"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueCollectionsMsgs": {
      "properties": {
        "count": {
          "description": "The total number of objects in the msgs collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueCollectionsPriorities": {
      "properties": {
        "count": {
          "description": "The total number of objects in the priorities collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueCollectionsSubscriptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the subscriptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueCollectionsTxFlows": {
      "properties": {
        "count": {
          "description": "The total number of objects in the txFlows collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueEventBindCountThreshold": {
      "description": "The thresholds for the Queue consumer flows event, relative to `maxBindCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueEventMsgSpoolUsageThreshold": {
      "description": "The thresholds for the message spool usage event of the Queue, relative to `maxMsgSpoolUsage`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueEventRejectLowPriorityMsgLimitThreshold": {
      "description": "The thresholds for the maximum allowed number of any priority messages queued in the Queue event, relative to `rejectLowPriorityMsgLimit`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueLinks": {
      "properties": {
        "msgsUri": {
          "description": "The URI of this Queue's collection of Queue Message objects.",
          "type": "string"
        },
        "prioritiesUri": {
          "description": "The URI of this Queue's collection of Queue Priority objects.",
          "type": "string"
        },
        "subscriptionsUri": {
          "description": "The URI of this Queue's collection of Queue Subscription objects.",
          "type": "string"
        },
        "txFlowsUri": {
          "description": "The URI of this Queue's collection of Queue Transmit Flow objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Queue object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueMsg": {
      "properties": {
        "attachmentSize": {
          "description": "The size of the Message attachment, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "contentSize": {
          "description": "The size of the Message content, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "deliveryEligibleTime": {
          "description": "The timestamp of when the Message is eligible for delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.22.",
          "format": "int32",
          "type": "integer"
        },
        "dmqEligible": {
          "description": "Indicates whether the Message is eligible for the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "expiryTime": {
          "description": "The timestamp of when the Message expires.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "msgId": {
          "description": "The identifier (ID) of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "partitionKey": {
          "description": "The partition key of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.35.",
          "type": "string"
        },
        "partitionKeyHash": {
          "description": "The partition key hash of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.35.",
          "format": "int32",
          "type": "integer"
        },
        "priority": {
          "description": "The priority level of the Message, from 9 (highest) to 0 (lowest).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "publisherId": {
          "description": "The identifier (ID) of the Message publisher.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "queueName": {
          "description": "The name of the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "redeliveryCount": {
          "description": "The number of times the Message has been redelivered.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "replicatedMateMsgId": {
          "description": "The Message identifier (ID) on the replication mate. Applicable only to replicated messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationGroupMsgId": {
          "description": "An ID that uniquely identifies this Message within this replication group.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "type": "string"
        },
        "replicationState": {
          "description": "The replication state of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"replicated\" - The Message is replicated to the remote Message VPN.\n\"not-replicated\" - The Message is not being replicated to the remote Message VPN.\n\"pending-replication\" - The Message is queued for replication to the remote Message VPN.\n</pre>\n",
          "type": "string"
        },
        "spooledTime": {
          "description": "The timestamp of when the Message was spooled in the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "undelivered": {
          "description": "Indicates whether delivery of the Message has never been attempted.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueMsgCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnQueueMsgLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Queue Message object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueMsgResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnQueueMsgCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnQueueMsg"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnQueueMsgLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueueMsgsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueMsgCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueMsg"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueMsgLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueuePrioritiesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueuePriorityCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueuePriority"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueuePriorityLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueuePriority": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "priority": {
          "description": "The level of the Priority, from 9 (highest) to 0 (lowest).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "queueName": {
          "description": "The name of the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "spooledByteCount": {
          "description": "The amount of guaranteed messages at this Priority spooled by the Queue, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spooledMsgCount": {
          "description": "The number of guaranteed messages at this Priority spooled by the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueuePriorityCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnQueuePriorityLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Queue Priority object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnQueuePriorityResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnQueuePriorityCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnQueuePriority"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnQueuePriorityLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueueResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnQueueCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnQueue"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnQueueLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueueSubscription": {
      "properties": {
        "createdByManagement": {
          "description": "Indicates whether the Subscription topic was created by a management API (CLI or SEMP).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "queueName": {
          "description": "The name of the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscriptionTopic": {
          "description": "The topic of the Subscription.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueSubscriptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnQueueSubscriptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Queue Subscription object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueSubscriptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnQueueSubscriptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnQueueSubscription"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnQueueSubscriptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueueSubscriptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueSubscriptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueSubscription"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueSubscriptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueueTemplate": {
      "properties": {
        "accessType": {
          "description": "The access type for delivering messages to consumer flows.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"exclusive\" - Exclusive delivery of messages to the first bound consumer flow.\n\"non-exclusive\" - Non-exclusive delivery of messages to bound consumer flows in a round-robin (if partition count is zero) or partitioned (if partition count is non-zero) fashion.\n</pre>\n",
          "enum": [
            "exclusive",
            "non-exclusive"
          ],
          "type": "string"
        },
        "consumerAckPropagationEnabled": {
          "description": "Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to the standby replication Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "deadMsgQueue": {
          "description": "The name of the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "deliveryDelay": {
          "description": "The delay, in seconds, to apply to messages arriving on the Queue before the messages are eligible for delivery. This attribute does not apply to MQTT queues created from this template, but it may apply in future releases. Therefore, to maintain forward compatibility, do not set this value on templates that might be used for MQTT queues.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "durabilityOverride": {
          "description": "Controls the durability of queues created from this template. If non-durable, the created queue will be non-durable, regardless of the specified durability. If none, the created queue will have the requested durability.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - The durability of the endpoint will be as requested on create.\n\"non-durable\" - The durability of the created queue will be non-durable, regardless of what was requested.\n</pre>\n",
          "enum": [
            "none",
            "non-durable"
          ],
          "type": "string"
        },
        "eventBindCountThreshold": {
          "$ref": "#/definitions/MsgVpnQueueTemplateEventBindCountThreshold"
        },
        "eventMsgSpoolUsageThreshold": {
          "$ref": "#/definitions/MsgVpnQueueTemplateEventMsgSpoolUsageThreshold"
        },
        "eventRejectLowPriorityMsgLimitThreshold": {
          "$ref": "#/definitions/MsgVpnQueueTemplateEventRejectLowPriorityMsgLimitThreshold"
        },
        "maxBindCount": {
          "description": "The maximum number of consumer flows that can bind.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxDeliveredUnackedMsgsPerFlow": {
          "description": "The maximum number of messages delivered but not acknowledged per flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgSize": {
          "description": "The maximum message size allowed, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "maxMsgSpoolUsage": {
          "description": "The maximum message spool usage allowed, in megabytes (MB). A value of 0 only allows spooling of the last message received and disables quota checking.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryCount": {
          "description": "The maximum number of message redelivery attempts that will occur prior to the message being discarded or moved to the DMQ. A value of 0 means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTtl": {
          "description": "The maximum time in seconds a message can stay in a Queue when `respectTtlEnabled` is `\"true\"`. A message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `maxTtl` configured for the Queue, is exceeded. A value of 0 disables expiry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "permission": {
          "description": "The permission level for all consumers, excluding the owner.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"no-access\" - Disallows all access.\n\"read-only\" - Read-only access to the messages.\n\"consume\" - Consume (read and remove) messages.\n\"modify-topic\" - Consume messages or modify the topic/selector.\n\"delete\" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.\n</pre>\n",
          "enum": [
            "no-access",
            "read-only",
            "consume",
            "modify-topic",
            "delete"
          ],
          "type": "string"
        },
        "queueNameFilter": {
          "description": "A pattern used to determine which Queues use settings from this Template. Two different wildcards can be used in the pattern: * and &gt;. Similar to topic filters or subscription patterns, a &gt; matches anything (but only when used at the end), and a * matches zero or more characters but never a slash (/). A &gt; is only a wildcard when used at the end, after a /. A * is only allowed at the end, after a slash (/).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "queueTemplateName": {
          "description": "The name of the Queue Template.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "redeliveryDelayEnabled": {
          "description": "Enable or disable a message redelivery delay. When false, messages are redelivered as soon as possible.  When true, messages are redelivered according to the initial, max and multiplier.  This should only be enabled when redelivery is enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "type": "boolean"
        },
        "redeliveryDelayInitialInterval": {
          "description": "The delay to be used between the first 2 redelivery attempts.  This value is in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryDelayMaxInterval": {
          "description": "The maximum delay to be used between any 2 redelivery attempts.  This value is in milliseconds.  Due to technical limitations, some redelivery attempt delays may slightly exceed this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryDelayMultiplier": {
          "description": "The amount each delay interval is multiplied by after each failed delivery attempt.  This number is in a fixed-point decimal format in which you must divide by 100 to get the floating point value. For example, a value of 125 would cause the delay to be multiplied by 1.25.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryEnabled": {
          "description": "Enable or disable message redelivery. When enabled, the number of redelivery attempts is controlled by maxRedeliveryCount. When disabled, the message will never be delivered from the queue more than once.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "type": "boolean"
        },
        "rejectLowPriorityMsgEnabled": {
          "description": "Enable or disable the checking of low priority messages against the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior` does not have a value of `\"never\"`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "rejectLowPriorityMsgLimit": {
          "description": "The number of messages of any priority above which low priority messages are not admitted but higher priority messages are allowed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "rejectMsgToSenderOnDiscardBehavior": {
          "description": "Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs prevent the message from being delivered to any destination and Transacted Session commits to fail.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"never\" - Silently discard messages.\n\"when-queue-enabled\" - NACK each message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.\n\"always\" - NACK each message discard back to the client, including messages that are discarded because an endpoint is administratively disabled.\n</pre>\n",
          "enum": [
            "never",
            "when-queue-enabled",
            "always"
          ],
          "type": "string"
        },
        "respectMsgPriorityEnabled": {
          "description": "Enable or disable the respecting of message priority. When enabled, messages are delivered in priority order, from 9 (highest) to 0 (lowest).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "respectTtlEnabled": {
          "description": "Enable or disable the respecting of the time-to-live (TTL) for messages. When enabled, expired messages are discarded or moved to the DMQ.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueTemplateCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnQueueTemplateEventBindCountThreshold": {
      "description": "The thresholds for the Queue consumer flows event, relative to `maxBindCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueTemplateEventMsgSpoolUsageThreshold": {
      "description": "The thresholds for the message spool usage event of the Queue, relative to `maxMsgSpoolUsage`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueTemplateEventRejectLowPriorityMsgLimitThreshold": {
      "description": "The thresholds for the maximum allowed number of any priority messages queued in the Queue event, relative to `rejectLowPriorityMsgLimit`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueTemplateLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Queue Template object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueTemplateResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnQueueTemplateCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnQueueTemplate"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnQueueTemplateLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueueTemplatesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueTemplateCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueTemplate"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueTemplateLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueueTxFlow": {
      "properties": {
        "ackedMsgCount": {
          "description": "The number of guaranteed messages delivered and acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "activationTime": {
          "description": "The timestamp of when the bound Flow became active.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "activityState": {
          "description": "The activity state of the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"active-browser\" - The Flow is active as a browser.\n\"active-consumer\" - The Flow is active as a consumer.\n\"inactive\" - The Flow is inactive.\n</pre>\n",
          "type": "string"
        },
        "activityUpdateState": {
          "description": "The state of updating the consumer with the Flow activity.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"in-progress\" - The Flow is in the process of updating the client with its activity state.\n\"synchronized\" - The Flow has updated the client with its activity state.\n\"not-requested\" - The Flow has not been requested by the client to provide activity updates.\n</pre>\n",
          "type": "string"
        },
        "bindTime": {
          "description": "The timestamp of when the Flow bound to the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "consumerRedeliveryRequestAllowed": {
          "description": "Indicates whether redelivery requests can be received as negative acknowledgments (NACKs) from the consumer. Applicable only to REST consumers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "cutThroughAckedMsgCount": {
          "description": "The number of guaranteed messages that used cut-through delivery and are acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "deliveryState": {
          "description": "The delivery state of the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"closed\" - The Flow is unbound.\n\"opened\" - The Flow is bound but inactive.\n\"unbinding\" - The Flow received an unbind request.\n\"handshaking\" - The Flow is handshaking to become active.\n\"deliver-cut-through\" - The Flow is streaming messages using direct+guaranteed delivery.\n\"deliver-from-input-stream\" - The Flow is streaming messages using guaranteed delivery.\n\"deliver-from-memory\" - The Flow throttled causing message delivery from memory (RAM).\n\"deliver-from-spool\" - The Flow stalled causing message delivery from spool (ADB or disk).\n</pre>\n",
          "type": "string"
        },
        "flowId": {
          "description": "The identifier (ID) of the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "highestAckPendingMsgId": {
          "description": "The highest identifier (ID) of message transmitted and waiting for acknowledgment.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lastAckedMsgId": {
          "description": "The identifier (ID) of the last message transmitted and acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lastSelectorExaminedMsgId": {
          "description": "The identifier (ID) of the last message examined by the Flow selector.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowestAckPendingMsgId": {
          "description": "The lowest identifier (ID) of message transmitted and waiting for acknowledgment.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxUnackedMsgsExceededMsgCount": {
          "description": "The number of guaranteed messages that exceeded the maximum number of delivered unacknowledged messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "noLocalDelivery": {
          "description": "Indicates whether not to deliver messages to a consumer that published them.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "queueName": {
          "description": "The name of the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "redeliveredMsgCount": {
          "description": "The number of guaranteed messages that were redelivered.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "redeliveryRequestCount": {
          "description": "The number of consumer requests via negative acknowledgments (NACKs) to redeliver guaranteed messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "selector": {
          "description": "The value of the Flow selector.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "selectorExaminedMsgCount": {
          "description": "The number of guaranteed messages examined by the Flow selector.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "selectorMatchedMsgCount": {
          "description": "The number of guaranteed messages for which the Flow selector matched.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "selectorNotMatchedMsgCount": {
          "description": "The number of guaranteed messages for which the Flow selector did not match.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sessionName": {
          "description": "The name of the Transacted Session for the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "storeAndForwardAckedMsgCount": {
          "description": "The number of guaranteed messages that used store and forward delivery and are acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "transportRetransmitMsgCount": {
          "description": "The number of guaranteed messages that were retransmitted at the transport layer as part of a single delivery attempt.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "unackedMsgCount": {
          "description": "The number of guaranteed messages delivered but not yet acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "usedWindowSize": {
          "description": "The number of guaranteed messages using the available window size.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "windowClosedCount": {
          "description": "The number of times the window for guaranteed messages was filled and closed before an acknowledgment was received.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "windowSize": {
          "description": "The number of outstanding guaranteed messages that can be transmitted over the Flow before an acknowledgment is received.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueTxFlowCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnQueueTxFlowLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Queue Transmit Flow object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnQueueTxFlowResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnQueueTxFlowCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnQueueTxFlow"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnQueueTxFlowLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueueTxFlowsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueTxFlowCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueTxFlow"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueTxFlowLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnQueuesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueue"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnQueueLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRate": {
      "description": "The rates for the Message VPN. Deprecated since 2.13. All attributes in this object have been moved to the MsgVpn object.",
      "properties": {
        "averageRxByteRate": {
          "description": "The one minute average of the message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxMsgRate": {
          "description": "The one minute average of the message rate received by the Message VPN, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxByteRate": {
          "description": "The one minute average of the message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "averageTxMsgRate": {
          "description": "The one minute average of the message rate transmitted by the Message VPN, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "rxByteRate": {
          "description": "The current message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "rxMsgRate": {
          "description": "The current message rate received by the Message VPN, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "tlsAverageRxByteRate": {
          "description": "The one minute average of the TLS message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "tlsAverageTxByteRate": {
          "description": "The one minute average of the TLS message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "tlsRxByteRate": {
          "description": "The current TLS message rate received by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "tlsTxByteRate": {
          "description": "The current TLS message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "txByteRate": {
          "description": "The current message rate transmitted by the Message VPN, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        },
        "txMsgRate": {
          "description": "The current message rate transmitted by the Message VPN, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpn object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLog": {
      "properties": {
        "egressEnabled": {
          "description": "Enable or disable the transmission of messages from the Replay Log.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "ingressEnabled": {
          "description": "Enable or disable the reception of messages to the Replay Log.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "maxSpoolUsage": {
          "description": "The maximum spool usage allowed by the Replay Log, in megabytes (MB). If this limit is exceeded, old messages will be trimmed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolUsage": {
          "description": "The spool usage of the Replay Log, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "replayLogName": {
          "description": "The name of the Replay Log.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "topicFilterEnabled": {
          "description": "Enable or disable topic filtering for the Replay Log.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.27.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogCollections": {
      "properties": {
        "msgs": {
          "$ref": "#/definitions/MsgVpnReplayLogCollectionsMsgs"
        },
        "topicFilterSubscriptions": {
          "$ref": "#/definitions/MsgVpnReplayLogCollectionsTopicFilterSubscriptions"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogCollectionsMsgs": {
      "properties": {
        "count": {
          "description": "The total number of objects in the msgs collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogCollectionsTopicFilterSubscriptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the topicFilterSubscriptions collection. Available since 2.27.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogLinks": {
      "properties": {
        "msgsUri": {
          "description": "The URI of this Replay Log's collection of Message objects.",
          "type": "string"
        },
        "topicFilterSubscriptionsUri": {
          "description": "The URI of this Replay Log's collection of Topic Filter Subscription objects. Available since 2.27.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Replay Log object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogMsg": {
      "properties": {
        "attachmentSize": {
          "description": "The size of the message attachment, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "contentSize": {
          "description": "The size of the message content, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "dmqEligible": {
          "description": "Indicates whether the message is eligible for the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "msgId": {
          "description": "The identifier (ID) of the message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "priority": {
          "description": "The priority level of the message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "publisherId": {
          "description": "The identifier (ID) of the message publisher.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayLogName": {
          "description": "The name of the Replay Log.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "replicationGroupMsgId": {
          "description": "An ID that uniquely identifies this Message within this replication group.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "type": "string"
        },
        "sequenceNumber": {
          "description": "The sequence number assigned to the message. Applicable only to messages received on sequenced topics.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spooledTime": {
          "description": "The timestamp of when the message was spooled in the Replay Log.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogMsgCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnReplayLogMsgLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Message object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogMsgResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnReplayLogMsgCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnReplayLogMsg"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnReplayLogMsgLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnReplayLogMsgsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLogMsgCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLogMsg"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLogMsgLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnReplayLogResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnReplayLogCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnReplayLog"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnReplayLogLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnReplayLogTopicFilterSubscription": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "replayLogName": {
          "description": "The name of the Replay Log.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "topicFilterSubscription": {
          "description": "The topic of the Subscription.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogTopicFilterSubscriptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnReplayLogTopicFilterSubscriptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Topic Filter Subscription object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnReplayLogTopicFilterSubscriptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnReplayLogTopicFilterSubscriptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnReplayLogTopicFilterSubscription"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnReplayLogTopicFilterSubscriptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnReplayLogTopicFilterSubscriptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLogTopicFilterSubscriptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLogTopicFilterSubscription"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLogTopicFilterSubscriptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnReplayLogsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLogCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLog"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplayLogLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnReplicatedTopic": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "replicatedTopic": {
          "description": "The topic for applying replication. Published messages matching this topic will be replicated to the standby site.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "replicationMode": {
          "description": "The replication mode for the Replicated Topic.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"sync\" - Messages are acknowledged when replicated (spooled remotely).\n\"async\" - Messages are acknowledged when pending replication (spooled locally).\n</pre>\n",
          "enum": [
            "sync",
            "async"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnReplicatedTopicCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnReplicatedTopicLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Replicated Topic object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnReplicatedTopicResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnReplicatedTopicCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnReplicatedTopic"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnReplicatedTopicLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnReplicatedTopicsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplicatedTopicCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplicatedTopic"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnReplicatedTopicLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpn"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPoint": {
      "properties": {
        "clientName": {
          "description": "The name of the Client for the REST Delivery Point.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientProfileName": {
          "description": "The Client Profile of the REST Delivery Point. It must exist in the local Message VPN. Its TCP parameters are used for all REST Consumers in this RDP. Its queue properties are used by the RDP client. The Client Profile is used inside the auto-generated Client Username for this RDP.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable the REST Delivery Point. When disabled, no connections are initiated or messages delivered to any of the contained REST Consumers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "lastFailureReason": {
          "description": "The reason for the last REST Delivery Point failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastFailureTime": {
          "description": "The timestamp of the last REST Delivery Point failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "restDeliveryPointName": {
          "description": "The name of the REST Delivery Point.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "service": {
          "description": "The name of the service that this REST Delivery Point connects to. Internally the broker does not use this value; it is informational only.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "string"
        },
        "timeConnectionsBlocked": {
          "description": "The percentage of time the REST Delivery Point connections are blocked from transmitting data.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "up": {
          "description": "Indicates whether the operational state of the REST Delivery Point is up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "vendor": {
          "description": "The name of the vendor that this REST Delivery Point connects to. Internally the broker does not use this value; it is informational only.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointCollections": {
      "properties": {
        "queueBindings": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointCollectionsQueueBindings"
        },
        "restConsumers": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointCollectionsRestConsumers"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointCollectionsQueueBindings": {
      "properties": {
        "count": {
          "description": "The total number of objects in the queueBindings collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointCollectionsRestConsumers": {
      "properties": {
        "count": {
          "description": "The total number of objects in the restConsumers collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointLinks": {
      "properties": {
        "queueBindingsUri": {
          "description": "The URI of this REST Delivery Point's collection of Queue Binding objects.",
          "type": "string"
        },
        "restConsumersUri": {
          "description": "The URI of this REST Delivery Point's collection of REST Consumer objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this REST Delivery Point object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBinding": {
      "properties": {
        "gatewayReplaceTargetAuthorityEnabled": {
          "description": "Enable or disable whether the authority for the request-target is replaced with that configured for the REST Consumer remote. When enabled, the broker sends HTTP requests in absolute-form, with the request-target's authority taken from the REST Consumer's remote host and port configuration. When disabled, the broker sends HTTP requests whose request-target matches that of the original request message, including whether to use absolute-form or origin-form. This configuration is applicable only when the Message VPN is in REST gateway mode.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "lastFailureReason": {
          "description": "The reason for the last REST Delivery Point queue binding failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastFailureTime": {
          "description": "The timestamp of the last REST Delivery Point queue binding failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "postRequestTarget": {
          "description": "The request-target string to use when sending requests. It identifies the target resource on the far-end REST Consumer upon which to apply the request. There are generally two common forms for the request-target. The origin-form is most often used in practice and contains the path and query components of the target URI. If the path component is empty then the client must generally send a \"/\" as the path. When making a request to a proxy, most often the absolute-form is required. This configuration is only applicable when the Message VPN is in REST messaging mode.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "queueBindingName": {
          "description": "The name of a queue in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "requestTargetEvaluation": {
          "description": "The type of evaluation to perform on the request target.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - Do not evaluate substitution expressions on the request target.\n\"substitution-expressions\" - Evaluate substitution expressions on the request target.\n</pre>\n Available since 2.23.",
          "enum": [
            "none",
            "substitution-expressions"
          ],
          "type": "string"
        },
        "restDeliveryPointName": {
          "description": "The name of the REST Delivery Point.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "up": {
          "description": "Indicates whether the operational state of the REST Delivery Point queue binding is up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "uptime": {
          "description": "The amount of time in seconds since the REST Delivery Point queue binding was up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingCollections": {
      "properties": {
        "protectedRequestHeaders": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingCollectionsProtectedRequestHeaders"
        },
        "requestHeaders": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingCollectionsRequestHeaders"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingCollectionsProtectedRequestHeaders": {
      "properties": {
        "count": {
          "description": "The total number of objects in the protectedRequestHeaders collection. Available since 2.30.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingCollectionsRequestHeaders": {
      "properties": {
        "count": {
          "description": "The total number of objects in the requestHeaders collection. Available since 2.23.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingLinks": {
      "properties": {
        "protectedRequestHeadersUri": {
          "description": "The URI of this Queue Binding's collection of Protected Request Header objects. Available since 2.30.",
          "type": "string"
        },
        "requestHeadersUri": {
          "description": "The URI of this Queue Binding's collection of Request Header objects. Available since 2.23.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Queue Binding object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeader": {
      "properties": {
        "headerName": {
          "description": "The name of the protected HTTP request header.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "queueBindingName": {
          "description": "The name of a queue in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "restDeliveryPointName": {
          "description": "The name of the REST Delivery Point.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Protected Request Header object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeader"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeadersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeader"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingRequestHeader": {
      "properties": {
        "headerName": {
          "description": "The name of the HTTP request header.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "headerValue": {
          "description": "A substitution expression for the value of the HTTP request header.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "queueBindingName": {
          "description": "The name of a queue in the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "restDeliveryPointName": {
          "description": "The name of the REST Delivery Point.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingRequestHeaderCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingRequestHeaderLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Request Header object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingRequestHeaderCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingRequestHeader"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingRequestHeaderLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingRequestHeadersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingRequestHeaderCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingRequestHeader"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingRequestHeaderLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBinding"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointQueueBindingsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBinding"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPoint"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumer": {
      "properties": {
        "authenticationAwsAccessKeyId": {
          "description": "The AWS access key id.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.26.",
          "type": "string"
        },
        "authenticationAwsRegion": {
          "description": "The AWS region id.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.26.",
          "type": "string"
        },
        "authenticationAwsService": {
          "description": "The AWS service id.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.26.",
          "type": "string"
        },
        "authenticationClientCertConfigTime": {
          "description": "The timestamp of when the client-certificate was configured.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.28.",
          "format": "int32",
          "type": "integer"
        },
        "authenticationClientCertThumbprint": {
          "description": "The thumbprint of the client-certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.28.",
          "type": "string"
        },
        "authenticationHttpBasicUsername": {
          "description": "The username that the REST Consumer will use to login to the REST host. Normally a username is only configured when basic authentication is selected for the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationHttpHeaderName": {
          "description": "The authentication header name.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.15.",
          "type": "string"
        },
        "authenticationOauthClientId": {
          "description": "The OAuth client ID.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "string"
        },
        "authenticationOauthClientLastFailureReason": {
          "description": "The reason for the most recent OAuth token retrieval failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.19.",
          "type": "string"
        },
        "authenticationOauthClientLastFailureTime": {
          "description": "The time of the last OAuth token retrieval failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.19.",
          "format": "int32",
          "type": "integer"
        },
        "authenticationOauthClientProxyName": {
          "description": "The name of the proxy to use. Leave empty for no proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.42.",
          "type": "string"
        },
        "authenticationOauthClientScope": {
          "description": "The OAuth scope.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "string"
        },
        "authenticationOauthClientTokenEndpoint": {
          "description": "The OAuth token endpoint URL that the REST Consumer will use to request a token for login to the REST host.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "string"
        },
        "authenticationOauthClientTokenExpiryDefault": {
          "description": "The default expiry time for a token, in seconds. Only used when the token endpoint does not return an expiry time. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.30.",
          "format": "int32",
          "type": "integer"
        },
        "authenticationOauthClientTokenLifetime": {
          "description": "The validity duration of the OAuth token.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.19.",
          "format": "int64",
          "type": "integer"
        },
        "authenticationOauthClientTokenRetrievedTime": {
          "description": "The time at which the broker requested the token from the OAuth token endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.19.",
          "format": "int32",
          "type": "integer"
        },
        "authenticationOauthClientTokenState": {
          "description": "The current state of the current OAuth token.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"valid\" - The token is valid.\n\"invalid\" - The token is invalid.\n</pre>\n Available since 2.19.",
          "type": "string"
        },
        "authenticationOauthJwtLastFailureReason": {
          "description": "The reason for the most recent OAuth token retrieval failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "type": "string"
        },
        "authenticationOauthJwtLastFailureTime": {
          "description": "The time of the last OAuth token retrieval failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.21.",
          "format": "int32",
          "type": "integer"
        },
        "authenticationOauthJwtProxyName": {
          "description": "The name of the proxy to use. Leave empty for no proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.42.",
          "type": "string"
        },
        "authenticationOauthJwtTokenEndpoint": {
          "description": "The OAuth token endpoint URL that the REST Consumer will use to request a token for login to the REST host.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.21.",
          "type": "string"
        },
        "authenticationOauthJwtTokenExpiryDefault": {
          "description": "The default expiry time for a token, in seconds. Only used when the token endpoint does not return an expiry time. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.30.",
          "format": "int32",
          "type": "integer"
        },
        "authenticationOauthJwtTokenLifetime": {
          "description": "The validity duration of the OAuth token.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "format": "int64",
          "type": "integer"
        },
        "authenticationOauthJwtTokenRetrievedTime": {
          "description": "The time at which the broker requested the token from the OAuth token endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.21.",
          "format": "int32",
          "type": "integer"
        },
        "authenticationOauthJwtTokenState": {
          "description": "The current state of the current OAuth token.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"valid\" - The token is valid.\n\"invalid\" - The token is invalid.\n</pre>\n Available since 2.21.",
          "type": "string"
        },
        "authenticationScheme": {
          "description": "The authentication scheme used by the REST Consumer to login to the REST host.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - Login with no authentication. This may be useful for anonymous connections or when a REST Consumer does not require authentication.\n\"http-basic\" - Login with a username and optional password according to HTTP Basic authentication as per RFC 2616.\n\"client-certificate\" - Login with a client TLS certificate as per RFC 5246. Client certificate authentication is only available on TLS connections.\n\"http-header\" - Login with a specified HTTP header.\n\"oauth-client\" - Login with OAuth 2.0 client credentials.\n\"oauth-jwt\" - Login with OAuth (RFC 7523 JWT Profile).\n\"transparent\" - Login using the Authorization header from the message properties, if present. Transparent authentication passes along existing Authorization header metadata instead of discarding it. Note that if the message is coming from a REST producer, the REST service must be configured to forward the Authorization header.\n\"aws\" - Login using AWS Signature Version 4 authentication (AWS4-HMAC-SHA256).\n</pre>\n",
          "enum": [
            "none",
            "http-basic",
            "client-certificate",
            "http-header",
            "oauth-client",
            "oauth-jwt",
            "transparent",
            "aws"
          ],
          "type": "string"
        },
        "counter": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerCounter"
        },
        "enabled": {
          "description": "Enable or disable the REST Consumer. When disabled, no connections are initiated or messages delivered to this particular REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "httpMethod": {
          "description": "The HTTP method to use (POST or PUT). This is used only when operating in the REST service \"messaging\" mode and is ignored in \"gateway\" mode.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"post\" - Use the POST HTTP method.\n\"put\" - Use the PUT HTTP method.\n</pre>\n Available since 2.17.",
          "enum": [
            "post",
            "put"
          ],
          "type": "string"
        },
        "httpRequestConnectionCloseTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the REST Consumer to close the connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "httpRequestOutstandingTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the REST Consumer that are waiting for a response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "httpRequestTimedOutTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the REST Consumer that have timed out.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "httpRequestTxByteCount": {
          "description": "The amount of HTTP request messages transmitted to the REST Consumer, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "httpRequestTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "httpResponseErrorRxMsgCount": {
          "description": "The number of HTTP client/server error response messages received from the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "httpResponseRxByteCount": {
          "description": "The amount of HTTP response messages received from the REST Consumer, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "httpResponseRxMsgCount": {
          "description": "The number of HTTP response messages received from the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "httpResponseSuccessRxMsgCount": {
          "description": "The number of HTTP successful response messages received from the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.13.",
          "format": "int64",
          "type": "integer"
        },
        "lastConnectionFailureLocalEndpoint": {
          "description": "The local endpoint at the time of the last connection failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastConnectionFailureReason": {
          "description": "The reason for the last connection failure between local and remote endpoints.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastConnectionFailureRemoteEndpoint": {
          "description": "The remote endpoint at the time of the last connection failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastConnectionFailureTime": {
          "description": "The timestamp of the last connection failure between local and remote endpoints.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastFailureReason": {
          "description": "The reason for the last REST Consumer failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastFailureTime": {
          "description": "The timestamp of the last REST Consumer failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "localInterface": {
          "description": "The interface that will be used for all outgoing connections associated with the REST Consumer. When unspecified, an interface is automatically chosen.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "maxPostWaitTime": {
          "description": "The maximum amount of time (in seconds) to wait for an HTTP POST response from the REST Consumer. Once this time is exceeded, the TCP connection is reset.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "outgoingConnectionCount": {
          "description": "The number of concurrent TCP connections open to the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "proxyName": {
          "description": "The name of the proxy to use. Leave empty for no proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.36.",
          "type": "string"
        },
        "remoteHost": {
          "description": "The IP address or DNS name to which the broker is to connect to deliver messages for the REST Consumer. A host value must be configured for the REST Consumer to be operationally up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "remoteOutgoingConnectionUpCount": {
          "description": "The number of outgoing connections for the REST Consumer that are up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "remotePort": {
          "description": "The port associated with the host of the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "restConsumerName": {
          "description": "The name of the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "restDeliveryPointName": {
          "description": "The name of the REST Delivery Point.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "retryDelay": {
          "description": "The number of seconds that must pass before retrying the remote REST Consumer connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "tlsCipherSuiteList": {
          "description": "The colon-separated list of cipher suites the REST Consumer uses in its encrypted connection. The value `\"default\"` implies all supported suites ordered from most secure to least secure. The list of default cipher suites is available in the `tlsCipherSuiteMsgBackboneDefaultList` attribute of the Broker object in the Monitoring API. The REST Consumer should choose the first suite from this list that it supports.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "tlsEnabled": {
          "description": "Enable or disable encryption (TLS) for the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "up": {
          "description": "Indicates whether the operational state of the REST Consumer is up.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerCollections": {
      "properties": {
        "oauthJwtClaims": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerCollectionsOauthJwtClaims"
        },
        "tlsTrustedCommonNames": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerCollectionsTlsTrustedCommonNames"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerCollectionsOauthJwtClaims": {
      "properties": {
        "count": {
          "description": "The total number of objects in the oauthJwtClaims collection. Available since 2.21.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerCollectionsTlsTrustedCommonNames": {
      "properties": {
        "count": {
          "description": "The total number of objects in the tlsTrustedCommonNames collection. Deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerCounter": {
      "description": "The counters for the REST Consumer. Deprecated since 2.13. All attributes in this object have been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
      "properties": {
        "httpRequestConnectionCloseTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the REST Consumer to close the connection.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        },
        "httpRequestOutstandingTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the REST Consumer that are waiting for a response.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        },
        "httpRequestTimedOutTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the REST Consumer that have timed out.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        },
        "httpRequestTxByteCount": {
          "description": "The amount of HTTP request messages transmitted to the REST Consumer, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        },
        "httpRequestTxMsgCount": {
          "description": "The number of HTTP request messages transmitted to the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        },
        "httpResponseErrorRxMsgCount": {
          "description": "The number of HTTP client/server error response messages received from the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        },
        "httpResponseRxByteCount": {
          "description": "The amount of HTTP response messages received from the REST Consumer, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        },
        "httpResponseRxMsgCount": {
          "description": "The number of HTTP response messages received from the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        },
        "httpResponseSuccessRxMsgCount": {
          "description": "The number of HTTP successful response messages received from the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.13. This attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerLinks": {
      "properties": {
        "oauthJwtClaimsUri": {
          "description": "The URI of this REST Consumer's collection of Claim objects. Available since 2.21.",
          "type": "string"
        },
        "tlsTrustedCommonNamesUri": {
          "description": "The URI of this REST Consumer's collection of Trusted Common Name objects. Deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this REST Consumer object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "oauthJwtClaimName": {
          "description": "The name of the additional claim. Cannot be \"exp\", \"iat\", or \"jti\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "oauthJwtClaimValue": {
          "description": "The value of the additional claim, which must be a string containing a valid JSON value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "restConsumerName": {
          "description": "The name of the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "restDeliveryPointName": {
          "description": "The name of the REST Delivery Point.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Claim object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumer"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "restConsumerName": {
          "description": "The name of the REST Consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "restDeliveryPointName": {
          "description": "The name of the REST Delivery Point.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        },
        "tlsTrustedCommonName": {
          "description": "The expected trusted common name of the remote certificate.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Trusted Common Name object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointRestConsumersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumer"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnRestDeliveryPointsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPoint"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnRestDeliveryPointLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTelemetryProfile": {
      "properties": {
        "aclProfileName": {
          "description": "The name of the Telemetry Profile ACL Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientProfileName": {
          "description": "The name of the Telemetry Profile Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "queueEventBindCountThreshold": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileQueueEventBindCountThreshold"
        },
        "queueEventMsgSpoolUsageThreshold": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileQueueEventMsgSpoolUsageThreshold"
        },
        "queueMaxBindCount": {
          "description": "The maximum number of consumer flows that can bind to the Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "queueMaxMsgSpoolUsage": {
          "description": "The maximum message spool usage allowed by the Queue, in megabytes (MB).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "queueName": {
          "description": "The name of the Telemetry Profile Queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "receiverAclConnectDefaultAction": {
          "description": "The default action to take when a receiver client connects to the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"allow\" - Allow client connection unless an exception is found for it.\n\"disallow\" - Disallow client connection unless an exception is found for it.\n</pre>\n",
          "enum": [
            "allow",
            "disallow"
          ],
          "type": "string"
        },
        "receiverEnabled": {
          "description": "Enable or disable the ability for receiver clients to consume from the #telemetry queue.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "receiverEventConnectionCountPerClientUsernameThreshold": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverEventConnectionCountPerClientUsernameThreshold"
        },
        "receiverMaxConnectionCountPerClientUsername": {
          "description": "The maximum number of receiver connections per Client Username.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "receiverTcpCongestionWindowSize": {
          "description": "The TCP initial congestion window size for clients using the Client Profile, in multiples of the TCP Maximum Segment Size (MSS). Changing the value from its default of 2 results in non-compliance with RFC 2581. Contact support before changing this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "receiverTcpKeepaliveCount": {
          "description": "The number of TCP keepalive retransmissions to a client using the Client Profile before declaring that it is not available.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "receiverTcpKeepaliveIdleTime": {
          "description": "The amount of time a client connection using the Client Profile must remain idle before TCP begins sending keepalive probes, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "receiverTcpKeepaliveInterval": {
          "description": "The amount of time between TCP keepalive retransmissions to a client using the Client Profile when no acknowledgment is received, in seconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "receiverTcpMaxSegmentSize": {
          "description": "The TCP maximum segment size for clients using the Client Profile, in bytes. Changes are applied to all existing connections.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "receiverTcpMaxWindowSize": {
          "description": "The TCP maximum window size for clients using the Client Profile, in kilobytes. Changes are applied to all existing connections. This setting is ignored on the software broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "telemetryProfileName": {
          "description": "The name of the Telemetry Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "traceEnabled": {
          "description": "Enable or disable generation of all trace span data messages. When enabled, the state of configured trace filters control which messages get traced. When disabled, trace span data messages are never generated, regardless of the state of trace filters.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "traceSendSpanGenerationEnabled": {
          "description": "Enable or disable generation of send spans. For the most complete view of broker message processing, this should be enabled. If the information provided by send spans are not needed, send spans can be disabled to reduce the performance impact of tracing.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.36.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileCollections": {
      "properties": {
        "receiverAclConnectExceptions": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileCollectionsReceiverAclConnectExceptions"
        },
        "traceFilters": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileCollectionsTraceFilters"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileCollectionsReceiverAclConnectExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the receiverAclConnectExceptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileCollectionsTraceFilters": {
      "properties": {
        "count": {
          "description": "The total number of objects in the traceFilters collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileLinks": {
      "properties": {
        "receiverAclConnectExceptionsUri": {
          "description": "The URI of this Telemetry Profile's collection of Receiver ACL Connect Exception objects.",
          "type": "string"
        },
        "traceFiltersUri": {
          "description": "The URI of this Telemetry Profile's collection of Trace Filter objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Telemetry Profile object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileQueueEventBindCountThreshold": {
      "description": "The thresholds for the Queue consumer flows event, relative to `queueMaxBindCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileQueueEventMsgSpoolUsageThreshold": {
      "description": "The thresholds for the message spool usage event of the Queue, relative to `queueMaxMsgSpoolUsage`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileReceiverAclConnectException": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "receiverAclConnectExceptionAddress": {
          "description": "The IP address/netmask of the receiver connect exception in CIDR form.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "telemetryProfileName": {
          "description": "The name of the Telemetry Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileReceiverAclConnectExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnTelemetryProfileReceiverAclConnectExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Receiver ACL Connect Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileReceiverAclConnectExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverAclConnectExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverAclConnectException"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverAclConnectExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTelemetryProfileReceiverAclConnectExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverAclConnectExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverAclConnectException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverAclConnectExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTelemetryProfileReceiverEventConnectionCountPerClientUsernameThreshold": {
      "description": "The thresholds for the receiver connection count event, relative to `receiverMaxConnectionCountPerClientUsername`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTelemetryProfile"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilter": {
      "properties": {
        "enabled": {
          "description": "Enable or disable the trace filter. When the filter is disabled, the filter's subscriptions will not trigger a message to be traced.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "telemetryProfileName": {
          "description": "The name of the Telemetry Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "traceFilterName": {
          "description": "A name used to identify the trace filter. Consider a name that describes the subscriptions contained within the filter, such as the name of the application and/or the scenario in which the trace filter might be enabled, such as \"appNameDebug\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterCollections": {
      "properties": {
        "subscriptions": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterCollectionsSubscriptions"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterCollectionsSubscriptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the subscriptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterLinks": {
      "properties": {
        "subscriptionsUri": {
          "description": "The URI of this Trace Filter's collection of Telemetry Trace Filter Subscription objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Trace Filter object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilter"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterSubscription": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscription": {
          "description": "Messages matching this subscription will follow this filter's configuration.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "subscriptionSyntax": {
          "description": "The syntax of the trace filter subscription.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"smf\" - Subscription uses SMF syntax.\n\"mqtt\" - Subscription uses MQTT syntax.\n</pre>\n",
          "enum": [
            "smf",
            "mqtt"
          ],
          "type": "string"
        },
        "telemetryProfileName": {
          "description": "The name of the Telemetry Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "traceFilterName": {
          "description": "A name used to identify the trace filter. Consider a name that describes the subscriptions contained within the filter, such as the name of the application and/or the scenario in which the trace filter might be enabled, such as \"appNameDebug\".\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterSubscriptionCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterSubscriptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Telemetry Trace Filter Subscription object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterSubscriptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterSubscriptionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterSubscription"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterSubscriptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFilterSubscriptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterSubscriptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterSubscription"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterSubscriptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTelemetryProfileTraceFiltersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilter"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTelemetryProfilesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfile"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTelemetryProfileLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpoint": {
      "properties": {
        "accessType": {
          "description": "The access type for delivering messages to consumer flows bound to the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"exclusive\" - Exclusive delivery of messages to the first bound consumer flow.\n\"non-exclusive\" - Non-exclusive delivery of messages to bound consumer flows in a round-robin fashion.\n</pre>\n",
          "enum": [
            "exclusive",
            "non-exclusive"
          ],
          "type": "string"
        },
        "alreadyBoundBindFailureCount": {
          "description": "The number of Topic Endpoint bind failures due to being already bound.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageBindRequestRate": {
          "description": "The one minute average of the bind request rate received by the Topic Endpoint, in binds per second (binds/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "averageRxByteRate": {
          "description": "The one minute average of the message rate received by the Topic Endpoint, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageRxMsgRate": {
          "description": "The one minute average of the message rate received by the Topic Endpoint, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageTxByteRate": {
          "description": "The one minute average of the message rate transmitted by the Topic Endpoint, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "averageTxMsgRate": {
          "description": "The one minute average of the message rate transmitted by the Topic Endpoint, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "bindRequestCount": {
          "description": "The number of consumer requests to bind to the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "bindRequestRate": {
          "description": "The current bind request rate received by the Topic Endpoint, in binds per second (binds/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.25.",
          "format": "int64",
          "type": "integer"
        },
        "bindSuccessCount": {
          "description": "The number of successful consumer requests to bind to the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "bindTimeForwardingMode": {
          "description": "The forwarding mode of the Topic Endpoint at bind time.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"store-and-forward\" - Deliver messages using the guaranteed data path.\n\"cut-through\" - Deliver messages using the direct and guaranteed data paths for lower latency.\n</pre>\n",
          "type": "string"
        },
        "clientProfileDeniedDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to being denied by the Client Profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "consumerAckPropagationEnabled": {
          "description": "Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to the standby replication Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "createdByManagement": {
          "description": "Indicates whether the Topic Endpoint was created by a management API (CLI or SEMP).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "deadMsgQueue": {
          "description": "The name of the Dead Message Queue (DMQ) used by the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "deletedMsgCount": {
          "description": "The number of guaranteed messages deleted from the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "deliveryCountEnabled": {
          "description": "Enable or disable the ability for client applications to query the message delivery count of messages received from the Topic Endpoint. This is a controlled availability feature. Please contact support to find out if this feature is supported for your use case.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.19.",
          "type": "boolean"
        },
        "deliveryDelay": {
          "description": "The delay, in seconds, to apply to messages arriving on the Topic Endpoint before the messages are eligible for delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "destinationGroupErrorDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to a destination group error.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "destinationTopic": {
          "description": "The destination topic of the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "disabledBindFailureCount": {
          "description": "The number of Topic Endpoint bind failures due to being disabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "disabledDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to it being disabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "durable": {
          "description": "Indicates whether the Topic Endpoint is durable and not temporary.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "egressEnabled": {
          "description": "Enable or disable the transmission of messages from the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "eventBindCountThreshold": {
          "$ref": "#/definitions/MsgVpnTopicEndpointEventBindCountThreshold"
        },
        "eventRejectLowPriorityMsgLimitThreshold": {
          "$ref": "#/definitions/MsgVpnTopicEndpointEventRejectLowPriorityMsgLimitThreshold"
        },
        "eventSpoolUsageThreshold": {
          "$ref": "#/definitions/MsgVpnTopicEndpointEventSpoolUsageThreshold"
        },
        "highestAckedMsgId": {
          "description": "The highest identifier (ID) of guaranteed messages in the Topic Endpoint that were acknowledged.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "highestMsgId": {
          "description": "The highest identifier (ID) of guaranteed messages in the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "inProgressAckMsgCount": {
          "description": "The number of acknowledgment messages received by the Topic Endpoint that are in the process of updating and deleting associated guaranteed messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "ingressEnabled": {
          "description": "Enable or disable the reception of messages to the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "invalidSelectorBindFailureCount": {
          "description": "The number of Topic Endpoint bind failures due to an invalid selector.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lastReplayCompleteTime": {
          "description": "The timestamp of the last completed replay for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastReplayFailureReason": {
          "description": "The reason for the last replay failure for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "lastReplayFailureTime": {
          "description": "The timestamp of the last replay failure for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastReplayStartTime": {
          "description": "The timestamp of the last replay started for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastReplayedMsgTxTime": {
          "description": "The timestamp of the last replayed message transmitted by the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastSelectorExaminedMsgId": {
          "description": "The identifier (ID) of the last message examined by the Topic Endpoint selector.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lastSpooledMsgId": {
          "description": "The identifier (ID) of the last guaranteed message spooled in the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowPriorityMsgCongestionDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to low priority message congestion control.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowPriorityMsgCongestionState": {
          "description": "The state of the low priority message congestion in the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"disabled\" - Messages are not being checked for priority.\n\"not-congested\" - Low priority messages are being stored and delivered.\n\"congested\" - Low priority messages are being discarded.\n</pre>\n",
          "type": "string"
        },
        "lowestAckedMsgId": {
          "description": "The lowest identifier (ID) of guaranteed messages in the Topic Endpoint that were acknowledged.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowestMsgId": {
          "description": "The lowest identifier (ID) of guaranteed messages in the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxBindCount": {
          "description": "The maximum number of consumer flows that can bind to the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxBindCountExceededBindFailureCount": {
          "description": "The number of Topic Endpoint bind failures due to the maximum bind count being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxDeliveredUnackedMsgsPerFlow": {
          "description": "The maximum number of messages delivered but not acknowledged per flow for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxEffectiveBindCount": {
          "description": "The effective maximum number of consumer flows that can bind to the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "maxMsgSize": {
          "description": "The maximum message size allowed in the Topic Endpoint, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "maxMsgSizeExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to the maximum message size being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgSpoolUsageExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to the maximum message spool usage being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryCount": {
          "description": "The maximum number of times the Topic Endpoint will attempt redelivery of a message prior to it being discarded or moved to the DMQ. A value of 0 means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to the maximum redelivery attempts being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryExceededToDmqFailedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to the maximum redelivery attempts being exceeded and failing to move to the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryExceededToDmqMsgCount": {
          "description": "The number of guaranteed messages moved to the Dead Message Queue (DMQ) by the Topic Endpoint due to the maximum redelivery attempts being exceeded.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxSpoolUsage": {
          "description": "The maximum message spool usage allowed by the Topic Endpoint, in megabytes (MB). A value of 0 only allows spooling of the last message received and disables quota checking.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTtl": {
          "description": "The maximum time in seconds a message can stay in the Topic Endpoint when `respectTtlEnabled` is `\"true\"`. A message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `maxTtl` configured for the Topic Endpoint, is exceeded. A value of 0 disables expiry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTtlExceededDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to the maximum time-to-live (TTL) in hops being exceeded. The TTL hop count is incremented when the message crosses a bridge.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxTtlExpiredDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to the maximum time-to-live (TTL) timestamp expiring.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxTtlExpiredToDmqFailedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to the maximum time-to-live (TTL) timestamp expiring and failing to move to the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxTtlExpiredToDmqMsgCount": {
          "description": "The number of guaranteed messages moved to the Dead Message Queue (DMQ) by the Topic Endpoint due to the maximum time-to-live (TTL) timestamp expiring.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolPeakUsage": {
          "description": "The message spool peak usage by the Topic Endpoint, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgSpoolUsage": {
          "description": "The message spool usage by the Topic Endpoint, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "networkTopic": {
          "description": "The name of the network topic for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "noLocalDeliveryDiscardedMsgCount": {
          "description": "The number of guaranteed messages discarded by the Topic Endpoint due to no local delivery being requested.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "otherBindFailureCount": {
          "description": "The number of Topic Endpoint bind failures due to other reasons.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "owner": {
          "description": "The Client Username that owns the Topic Endpoint and has permission equivalent to `\"delete\"`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "permission": {
          "description": "The permission level for all consumers of the Topic Endpoint, excluding the owner.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"no-access\" - Disallows all access.\n\"read-only\" - Read-only access to the messages.\n\"consume\" - Consume (read and remove) messages.\n\"modify-topic\" - Consume messages or modify the topic/selector.\n\"delete\" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.\n</pre>\n",
          "enum": [
            "no-access",
            "read-only",
            "consume",
            "modify-topic",
            "delete"
          ],
          "type": "string"
        },
        "redeliveredMsgCount": {
          "description": "The number of guaranteed messages transmitted by the Topic Endpoint for redelivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "redeliveryDelayEnabled": {
          "description": "Enable or disable a message redelivery delay. When false, messages are redelivered as-soon-as-possible.  When true, messages are redelivered according to the initial, max and multiplier.  This should only be enabled when redelivery is enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "type": "boolean"
        },
        "redeliveryDelayInitialInterval": {
          "description": "The delay to be used between the first 2 redelivery attempts.  This value is in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryDelayMaxInterval": {
          "description": "The maximum delay to be used between any 2 redelivery attempts.  This value is in milliseconds.  Due to technical limitations, some redelivery attempt delays may slightly exceed this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryDelayMultiplier": {
          "description": "The amount each delay interval is multiplied by after each failed delivery attempt.  This number is in a fixed-point decimal format in which you must divide by 100 to get the floating point value. For example, a value of 125 would cause the delay to be multiplied by 1.25.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryEnabled": {
          "description": "Enable or disable message redelivery. When enabled, the number of redelivery attempts is controlled by maxRedeliveryCount. When disabled, the message will never be delivered from the topic-endpoint more than once.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "type": "boolean"
        },
        "rejectLowPriorityMsgEnabled": {
          "description": "Enable or disable the checking of low priority messages against the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior` does not have a value of `\"never\"`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "rejectLowPriorityMsgLimit": {
          "description": "The number of messages of any priority in the Topic Endpoint above which low priority messages are not admitted but higher priority messages are allowed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "rejectMsgToSenderOnDiscardBehavior": {
          "description": "Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"never\" - Silently discard messages.\n\"when-topic-endpoint-enabled\" - NACK each message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.\n\"always\" - NACK each message discard back to the client, including messages that are discarded because an endpoint is administratively disabled.\n</pre>\n",
          "enum": [
            "never",
            "when-topic-endpoint-enabled",
            "always"
          ],
          "type": "string"
        },
        "replayFailureCount": {
          "description": "The number of replays that failed for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayStartCount": {
          "description": "The number of replays started for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayState": {
          "description": "The state of replay for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"initializing\" - All messages are being deleted from the endpoint before replay starts.\n\"active\" - Subscription matching logged messages are being replayed to the endpoint.\n\"pending-complete\" - Replay is complete, but final accounting is in progress.\n\"complete\" - Replay and all related activities are complete.\n\"failed\" - Replay has failed and is waiting for an unbind response.\n</pre>\n",
          "type": "string"
        },
        "replaySuccessCount": {
          "description": "The number of replays that succeeded for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayedAckedMsgCount": {
          "description": "The number of replayed messages transmitted by the Topic Endpoint and acked by all consumers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replayedTxMsgCount": {
          "description": "The number of replayed messages transmitted by the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationActiveAckPropTxMsgCount": {
          "description": "The number of acknowledgment messages propagated by the Topic Endpoint to the replication standby remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyAckPropRxMsgCount": {
          "description": "The number of propagated acknowledgment messages received by the Topic Endpoint from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyAckedByAckPropMsgCount": {
          "description": "The number of messages acknowledged in the Topic Endpoint by acknowledgment propagation from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationStandbyRxMsgCount": {
          "description": "The number of messages received by the Topic Endpoint from the replication active remote Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "respectMsgPriorityEnabled": {
          "description": "Enable or disable the respecting of message priority. When enabled, messages contained in the Topic Endpoint are delivered in priority order, from 9 (highest) to 0 (lowest).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "respectTtlEnabled": {
          "description": "Enable or disable the respecting of the time-to-live (TTL) for messages in the Topic Endpoint. When enabled, expired messages are discarded or moved to the DMQ.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "rxByteRate": {
          "description": "The current message rate received by the Topic Endpoint, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "rxMsgRate": {
          "description": "The current message rate received by the Topic Endpoint, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "rxSelector": {
          "description": "Indicates whether the Topic Endpoint has a selector to filter received messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "selector": {
          "description": "The value of the receive selector for the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "selectorExaminedMsgCount": {
          "description": "The number of guaranteed messages examined by the Topic Endpoint selector.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "selectorMatchedMsgCount": {
          "description": "The number of guaranteed messages for which the Topic Endpoint selector matched.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "selectorNotMatchedMsgCount": {
          "description": "The number of guaranteed messages for which the Topic Endpoint selector did not match.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spooledByteCount": {
          "description": "The amount of guaranteed messages that were spooled in the Topic Endpoint, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spooledMsgCount": {
          "description": "The number of guaranteed messages that were spooled in the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "topicEndpointName": {
          "description": "The name of the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "transportRetransmitMsgCount": {
          "description": "The number of guaranteed messages that were retransmitted by the Topic Endpoint at the transport layer as part of a single delivery attempt.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "txByteRate": {
          "description": "The current message rate transmitted by the Topic Endpoint, in bytes per second (B/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txMsgRate": {
          "description": "The current message rate transmitted by the Topic Endpoint, in messages per second (msg/sec).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "txUnackedMsgCount": {
          "description": "The number of guaranteed messages in the Topic Endpoint that have been transmitted but not acknowledged by all consumers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "virtualRouter": {
          "description": "The virtual router used by the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"primary\" - The endpoint belongs to the primary virtual router.\n\"backup\" - The endpoint belongs to the backup virtual router.\n</pre>\n Deprecated since 2.31. This attribute has been deprecated. When Guaranteed Messaging is active, this value is always the virtual router for which Guaranteed Messaging is enabled. Otherwise, this value should be ignored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointCollections": {
      "properties": {
        "msgs": {
          "$ref": "#/definitions/MsgVpnTopicEndpointCollectionsMsgs"
        },
        "priorities": {
          "$ref": "#/definitions/MsgVpnTopicEndpointCollectionsPriorities"
        },
        "txFlows": {
          "$ref": "#/definitions/MsgVpnTopicEndpointCollectionsTxFlows"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointCollectionsMsgs": {
      "properties": {
        "count": {
          "description": "The total number of objects in the msgs collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointCollectionsPriorities": {
      "properties": {
        "count": {
          "description": "The total number of objects in the priorities collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointCollectionsTxFlows": {
      "properties": {
        "count": {
          "description": "The total number of objects in the txFlows collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointEventBindCountThreshold": {
      "description": "The thresholds for the Topic Endpoint consumer flows event, relative to `maxBindCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointEventRejectLowPriorityMsgLimitThreshold": {
      "description": "The thresholds for the maximum allowed number of any priority messages queued in the Topic Endpoint event, relative to `rejectLowPriorityMsgLimit`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointEventSpoolUsageThreshold": {
      "description": "The thresholds for the message spool usage event of the Topic Endpoint, relative to `maxSpoolUsage`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointLinks": {
      "properties": {
        "msgsUri": {
          "description": "The URI of this Topic Endpoint's collection of Topic Endpoint Message objects.",
          "type": "string"
        },
        "prioritiesUri": {
          "description": "The URI of this Topic Endpoint's collection of Topic Endpoint Priority objects.",
          "type": "string"
        },
        "txFlowsUri": {
          "description": "The URI of this Topic Endpoint's collection of Topic Endpoint Transmit Flow objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Topic Endpoint object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointMsg": {
      "properties": {
        "attachmentSize": {
          "description": "The size of the Message attachment, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "contentSize": {
          "description": "The size of the Message content, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "deliveryEligibleTime": {
          "description": "The timestamp of when the Message is eligible for delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since 2.22.",
          "format": "int32",
          "type": "integer"
        },
        "dmqEligible": {
          "description": "Indicates whether the Message is eligible for the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "expiryTime": {
          "description": "The timestamp of when the Message expires.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "msgId": {
          "description": "The identifier (ID) of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "priority": {
          "description": "The priority level of the Message, from 9 (highest) to 0 (lowest).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "publisherId": {
          "description": "The identifier (ID) of the Message publisher.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "redeliveryCount": {
          "description": "The number of times the Message has been redelivered.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "replicatedMateMsgId": {
          "description": "The Message identifier (ID) on the replication mate. Applicable only to replicated messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "replicationGroupMsgId": {
          "description": "An ID that uniquely identifies this Message within this replication group.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "type": "string"
        },
        "replicationState": {
          "description": "The replication state of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"replicated\" - The Message is replicated to the remote Message VPN.\n\"not-replicated\" - The Message is not being replicated to the remote Message VPN.\n\"pending-replication\" - The Message is queued for replication to the remote Message VPN.\n</pre>\n",
          "type": "string"
        },
        "spooledTime": {
          "description": "The timestamp of when the Message was spooled in the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "topicEndpointName": {
          "description": "The name of the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "undelivered": {
          "description": "Indicates whether delivery of the Message has never been attempted.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointMsgCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnTopicEndpointMsgLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Topic Endpoint Message object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointMsgResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTopicEndpointMsgCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTopicEndpointMsg"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTopicEndpointMsgLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointMsgsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointMsgCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointMsg"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointMsgLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointPrioritiesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointPriorityCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointPriority"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointPriorityLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointPriority": {
      "properties": {
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "priority": {
          "description": "The level of the Priority, from 9 (highest) to 0 (lowest).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spooledByteCount": {
          "description": "The amount of guaranteed messages at this Priority spooled by the Topic Endpoint, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "spooledMsgCount": {
          "description": "The number of guaranteed messages at this Priority spooled by the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "topicEndpointName": {
          "description": "The name of the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointPriorityCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnTopicEndpointPriorityLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Topic Endpoint Priority object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointPriorityResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTopicEndpointPriorityCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTopicEndpointPriority"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTopicEndpointPriorityLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTopicEndpointCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTopicEndpoint"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTopicEndpointLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointTemplate": {
      "properties": {
        "accessType": {
          "description": "The access type for delivering messages to consumer flows.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"exclusive\" - Exclusive delivery of messages to the first bound consumer flow.\n\"non-exclusive\" - Non-exclusive delivery of messages to bound consumer flows in a round-robin fashion.\n</pre>\n",
          "enum": [
            "exclusive",
            "non-exclusive"
          ],
          "type": "string"
        },
        "consumerAckPropagationEnabled": {
          "description": "Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to the standby replication Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "deadMsgQueue": {
          "description": "The name of the Dead Message Queue (DMQ).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "deliveryDelay": {
          "description": "The delay, in seconds, to apply to messages arriving on the Topic Endpoint before the messages are eligible for delivery.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.22.",
          "format": "int64",
          "type": "integer"
        },
        "eventBindCountThreshold": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTemplateEventBindCountThreshold"
        },
        "eventMsgSpoolUsageThreshold": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTemplateEventMsgSpoolUsageThreshold"
        },
        "eventRejectLowPriorityMsgLimitThreshold": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTemplateEventRejectLowPriorityMsgLimitThreshold"
        },
        "maxBindCount": {
          "description": "The maximum number of consumer flows that can bind.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxDeliveredUnackedMsgsPerFlow": {
          "description": "The maximum number of messages delivered but not acknowledged per flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxMsgSize": {
          "description": "The maximum message size allowed, in bytes (B).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "maxMsgSpoolUsage": {
          "description": "The maximum message spool usage allowed, in megabytes (MB). A value of 0 only allows spooling of the last message received and disables quota checking.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxRedeliveryCount": {
          "description": "The maximum number of message redelivery attempts that will occur prior to the message being discarded or moved to the DMQ. A value of 0 means to retry forever.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "maxTtl": {
          "description": "The maximum time in seconds a message can stay in the Topic Endpoint when `respectTtlEnabled` is `\"true\"`. A message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `maxTtl` configured for the Topic Endpoint, is exceeded. A value of 0 disables expiry.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "permission": {
          "description": "The permission level for all consumers, excluding the owner.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"no-access\" - Disallows all access.\n\"read-only\" - Read-only access to the messages.\n\"consume\" - Consume (read and remove) messages.\n\"modify-topic\" - Consume messages or modify the topic/selector.\n\"delete\" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.\n</pre>\n",
          "enum": [
            "no-access",
            "read-only",
            "consume",
            "modify-topic",
            "delete"
          ],
          "type": "string"
        },
        "redeliveryDelayEnabled": {
          "description": "Enable or disable a message redelivery delay. When false, messages are redelivered as-soon-as-possible.  When true, messages are redelivered according to the initial, max and multiplier.  This should only be enabled when redelivery is enabled.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "type": "boolean"
        },
        "redeliveryDelayInitialInterval": {
          "description": "The delay to be used between the first 2 redelivery attempts.  This value is in milliseconds.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryDelayMaxInterval": {
          "description": "The maximum delay to be used between any 2 redelivery attempts.  This value is in milliseconds.  Due to technical limitations, some redelivery attempt delays may slightly exceed this value.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryDelayMultiplier": {
          "description": "The amount each delay interval is multiplied by after each failed delivery attempt.  This number is in a fixed-point decimal format in which you must divide by 100 to get the floating point value. For example, a value of 125 would cause the delay to be multiplied by 1.25.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.33.",
          "format": "int32",
          "type": "integer"
        },
        "redeliveryEnabled": {
          "description": "Enable or disable message redelivery. When enabled, the number of redelivery attempts is controlled by maxRedeliveryCount. When disabled, the message will never be delivered from the topic-endpoint more than once.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.18.",
          "type": "boolean"
        },
        "rejectLowPriorityMsgEnabled": {
          "description": "Enable or disable the checking of low priority messages against the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior` does not have a value of `\"never\"`.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "rejectLowPriorityMsgLimit": {
          "description": "The number of messages that are permitted before low priority messages are rejected.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "rejectMsgToSenderOnDiscardBehavior": {
          "description": "Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"never\" - Silently discard messages.\n\"when-topic-endpoint-enabled\" - NACK each message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.\n\"always\" - NACK each message discard back to the client, including messages that are discarded because an endpoint is administratively disabled.\n</pre>\n",
          "enum": [
            "never",
            "when-topic-endpoint-enabled",
            "always"
          ],
          "type": "string"
        },
        "respectMsgPriorityEnabled": {
          "description": "Enable or disable the respecting of message priority. When enabled, messages are delivered in priority order, from 9 (highest) to 0 (lowest).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "respectTtlEnabled": {
          "description": "Enable or disable the respecting of the time-to-live (TTL) for messages. When enabled, expired messages are discarded or moved to the DMQ.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "topicEndpointNameFilter": {
          "description": "A pattern used to determine which Topic Endpoints use settings from this Template. Two different wildcards can be used in the pattern: * and &gt;. Similar to topic filters or subscription patterns, a &gt; matches anything (but only when used at the end), and a * matches zero or more characters but never a slash (/). A &gt; is only a wildcard when  used at the end, after a /. A * is only allowed at the end, after a slash (/).\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "topicEndpointTemplateName": {
          "description": "The name of the Topic Endpoint Template.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointTemplateCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnTopicEndpointTemplateEventBindCountThreshold": {
      "description": "The thresholds for the Topic Endpoint consumer flows event, relative to `maxBindCount`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointTemplateEventMsgSpoolUsageThreshold": {
      "description": "The thresholds for the message spool usage event of the Topic Endpoint, relative to `maxSpoolUsage`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointTemplateEventRejectLowPriorityMsgLimitThreshold": {
      "description": "The thresholds for the maximum allowed number of any priority messages queued in the Topic Endpoint event, relative to `rejectLowPriorityMsgLimit`.",
      "properties": {
        "clearPercent": {
          "description": "The clear threshold for the value of this counter as a percentage of its maximum value. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "clearValue": {
          "description": "The clear threshold for the absolute value of this counter. Falling below this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setPercent": {
          "description": "The set threshold for the value of this counter as a percentage of its maximum value. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        },
        "setValue": {
          "description": "The set threshold for the absolute value of this counter. Exceeding this value will trigger a corresponding event.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointTemplateLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Topic Endpoint Template object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointTemplateResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTemplateCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTemplate"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTemplateLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointTemplatesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointTemplateCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointTemplate"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointTemplateLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointTxFlow": {
      "properties": {
        "ackedMsgCount": {
          "description": "The number of guaranteed messages delivered and acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "activityState": {
          "description": "The activity state of the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"active-browser\" - The Flow is active as a browser.\n\"active-consumer\" - The Flow is active as a consumer.\n\"inactive\" - The Flow is inactive.\n</pre>\n",
          "type": "string"
        },
        "bindTime": {
          "description": "The timestamp of when the Flow bound to the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "consumerRedeliveryRequestAllowed": {
          "description": "Indicates whether redelivery requests can be received as negative acknowledgments (NACKs) from the consumer. Applicable only to REST consumers.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "cutThroughAckedMsgCount": {
          "description": "The number of guaranteed messages that used cut-through delivery and are acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "deliveryState": {
          "description": "The delivery state of the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"closed\" - The Flow is unbound.\n\"opened\" - The Flow is bound but inactive.\n\"unbinding\" - The Flow received an unbind request.\n\"handshaking\" - The Flow is handshaking to become active.\n\"deliver-cut-through\" - The Flow is streaming messages using direct+guaranteed delivery.\n\"deliver-from-input-stream\" - The Flow is streaming messages using guaranteed delivery.\n\"deliver-from-memory\" - The Flow throttled causing message delivery from memory (RAM).\n\"deliver-from-spool\" - The Flow stalled causing message delivery from spool (ADB or disk).\n</pre>\n",
          "type": "string"
        },
        "flowId": {
          "description": "The identifier (ID) of the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "highestAckPendingMsgId": {
          "description": "The highest identifier (ID) of message transmitted and waiting for acknowledgment.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lastAckedMsgId": {
          "description": "The identifier (ID) of the last message transmitted and acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "lowestAckPendingMsgId": {
          "description": "The lowest identifier (ID) of message transmitted and waiting for acknowledgment.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "maxUnackedMsgsExceededMsgCount": {
          "description": "The number of guaranteed messages that exceeded the maximum number of delivered unacknowledged messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "noLocalDelivery": {
          "description": "Indicates whether not to deliver messages to a consumer that published them.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "redeliveredMsgCount": {
          "description": "The number of guaranteed messages that were redelivered.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "redeliveryRequestCount": {
          "description": "The number of consumer requests via negative acknowledgments (NACKs) to redeliver guaranteed messages.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sessionName": {
          "description": "The name of the Transacted Session for the Flow.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "storeAndForwardAckedMsgCount": {
          "description": "The number of guaranteed messages that used store and forward delivery and are acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "topicEndpointName": {
          "description": "The name of the Topic Endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "transportRetransmitMsgCount": {
          "description": "The number of guaranteed messages that were retransmitted at the transport layer as part of a single delivery attempt.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.18.",
          "format": "int64",
          "type": "integer"
        },
        "unackedMsgCount": {
          "description": "The number of guaranteed messages delivered but not yet acknowledged by the consumer.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "usedWindowSize": {
          "description": "The number of guaranteed messages using the available window size.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "windowClosedCount": {
          "description": "The number of times the window for guaranteed messages was filled and closed before an acknowledgment was received.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "windowSize": {
          "description": "The number of outstanding guaranteed messages that can be transmitted over the Flow before an acknowledgment is received.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointTxFlowCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnTopicEndpointTxFlowLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Topic Endpoint Transmit Flow object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTopicEndpointTxFlowResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTxFlowCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTxFlow"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTopicEndpointTxFlowLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointTxFlowsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointTxFlowCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointTxFlow"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointTxFlowLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTopicEndpointsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpoint"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTopicEndpointLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTransaction": {
      "properties": {
        "clientId": {
          "description": "The identifier (ID) of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "clientName": {
          "description": "The name of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "clientUsername": {
          "description": "The username of the Client.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "idleTimeout": {
          "description": "The number of seconds before an idle Transaction may be automatically rolled back and freed.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "replicated": {
          "description": "Indicates whether the Transaction is replicated.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "boolean"
        },
        "sessionName": {
          "description": "The name of the Transacted Session for the Transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "state": {
          "description": "The state of the Transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"active\" - The Transaction was started.\n\"suspended\" - The Transaction was suspended.\n\"idle\" - The Transaction was ended.\n\"prepared\" - The Transaction was prepared.\n\"complete\" - The Transaction was committed or rolled back.\n</pre>\n",
          "type": "string"
        },
        "timeInState": {
          "description": "The number of seconds the Transaction has remained in the current state.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "The type of Transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"xa\" - The Transaction is an XA Transaction.\n\"local\" - The Transaction is a local Transaction.\n</pre>\n",
          "type": "string"
        },
        "xid": {
          "description": "The identifier (ID) of the Transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionCollections": {
      "properties": {
        "consumerMsgs": {
          "$ref": "#/definitions/MsgVpnTransactionCollectionsConsumerMsgs"
        },
        "publisherMsgs": {
          "$ref": "#/definitions/MsgVpnTransactionCollectionsPublisherMsgs"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionCollectionsConsumerMsgs": {
      "properties": {
        "count": {
          "description": "The total number of objects in the consumerMsgs collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionCollectionsPublisherMsgs": {
      "properties": {
        "count": {
          "description": "The total number of objects in the publisherMsgs collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionConsumerMsg": {
      "properties": {
        "endpointName": {
          "description": "The name of the Queue or Topic Endpoint source.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "endpointType": {
          "description": "The type of endpoint source.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"queue\" - The Message is from a Queue.\n\"topic-endpoint\" - The Message is from a Topic Endpoint.\n</pre>\n",
          "type": "string"
        },
        "msgId": {
          "description": "The identifier (ID) of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "replicationGroupMsgId": {
          "description": "An ID that uniquely identifies this message within this replication group.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\". Available since 2.21.",
          "type": "string"
        },
        "xid": {
          "description": "The identifier (ID) of the Transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionConsumerMsgCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnTransactionConsumerMsgLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Transaction Consumer Message object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionConsumerMsgResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTransactionConsumerMsgCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTransactionConsumerMsg"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTransactionConsumerMsgLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTransactionConsumerMsgsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransactionConsumerMsgCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransactionConsumerMsg"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransactionConsumerMsgLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTransactionLinks": {
      "properties": {
        "consumerMsgsUri": {
          "description": "The URI of this Replicated Local Transaction or XA Transaction's collection of Transaction Consumer Message objects.",
          "type": "string"
        },
        "publisherMsgsUri": {
          "description": "The URI of this Replicated Local Transaction or XA Transaction's collection of Transaction Publisher Message objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Replicated Local Transaction or XA Transaction object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionPublisherMsg": {
      "properties": {
        "msgId": {
          "description": "The identifier (ID) of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "msgVpnName": {
          "description": "The name of the Message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "topic": {
          "description": "The topic destination of the Message.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        },
        "xid": {
          "description": "The identifier (ID) of the Transaction.\n\nThe minimum access scope/level required to retrieve this attribute is \"vpn/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionPublisherMsgCollections": {
      "properties": {},
      "type": "object"
    },
    "MsgVpnTransactionPublisherMsgLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Transaction Publisher Message object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsgVpnTransactionPublisherMsgResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTransactionPublisherMsgCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTransactionPublisherMsg"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTransactionPublisherMsgLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTransactionPublisherMsgsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransactionPublisherMsgCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransactionPublisherMsg"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransactionPublisherMsgLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTransactionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/MsgVpnTransactionCollections"
        },
        "data": {
          "$ref": "#/definitions/MsgVpnTransaction"
        },
        "links": {
          "$ref": "#/definitions/MsgVpnTransactionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnTransactionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransactionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransaction"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnTransactionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "MsgVpnsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/MsgVpnCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/MsgVpn"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/MsgVpnLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfile": {
      "properties": {
        "accessLevelGroupsClaimName": {
          "description": "The name of the groups claim.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "accessLevelGroupsClaimStringFormat": {
          "description": "The format of the access level groups claim value when it is a string.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"single\" - When the claim is a string, it is interpreted as as single group.\n\"space-delimited\" - When the claim is a string, it is interpreted as a space-delimited list of groups, similar to the \"scope\" claim.\n</pre>\n Available since 2.32.",
          "enum": [
            "single",
            "space-delimited"
          ],
          "type": "string"
        },
        "active": {
          "description": "Indicates whether the profile is active. An enabled profile may not be active if discovery is not complete, if there is no issuer specified, or if there is another profile with the same issuer.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". Available since 2.26.",
          "type": "boolean"
        },
        "clientId": {
          "description": "The OAuth client id.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientRedirectUri": {
          "description": "The OAuth redirect URI.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientRequiredType": {
          "description": "The required value for the TYP field in the ID token header.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientScope": {
          "description": "The OAuth scope.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "clientValidateTypeEnabled": {
          "description": "Enable or disable verification of the TYP field in the ID token header.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "completeExpiredStateCount": {
          "description": "The number of requests to the broker OAuth completion endpoint with an expired state token.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "completeInvalidStateCount": {
          "description": "The number of request to the broker OAuth completion endpoint with an invalid state token.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "completeRequestCount": {
          "description": "The number of requests to the broker OAuth completion endpoint (successful and unsuccessful).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "completeSuccessCount": {
          "description": "The number of successful requests to the broker OAuth completion endpoint.  Successful requests have authenticated  the user and established a browser session.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "defaultGlobalAccessLevel": {
          "description": "The default global access level for this OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - User has no access to global data.\n\"read-only\" - User has read-only access to global data.\n\"mesh-manager\" - User has read-write access to global data required to administer this broker as a member of a mesh of brokers.\n\"read-write\" - User has read-write access to most global data.\n\"admin\" - User has read-write access to all global data.\n</pre>\n",
          "enum": [
            "none",
            "read-only",
            "mesh-manager",
            "read-write",
            "admin"
          ],
          "type": "string"
        },
        "defaultMsgVpnAccessLevel": {
          "description": "The default message VPN access level for the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - User has no access to a Message VPN.\n\"read-only\" - User has read-only access to a Message VPN.\n\"read-write\" - User has read-write access to most Message VPN settings.\n</pre>\n",
          "enum": [
            "none",
            "read-only",
            "read-write"
          ],
          "type": "string"
        },
        "discoveryLastRefreshFailureReason": {
          "description": "The reason for the last discovery endpoint refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "discoveryLastRefreshFailureTime": {
          "description": "The timestamp of the last discovery endpoint refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "discoveryLastRefreshTime": {
          "description": "The timestamp of the last discovery endpoint refresh success.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "discoveryNextScheduledRefreshTime": {
          "description": "The timestamp of the next scheduled discovery endpoint refresh.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "discoveryRefreshFailureCount": {
          "description": "The number of discovery endpoint refresh failures.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "displayName": {
          "description": "The user friendly name for the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "endpointAuthorization": {
          "description": "The OAuth authorization endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointAuthorizationOperational": {
          "description": "The operational OAuth authorization endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "endpointDiscovery": {
          "description": "The OpenID Connect discovery endpoint or OAuth Authorization Server Metadata endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointDiscoveryRefreshInterval": {
          "description": "The number of seconds between discovery endpoint requests.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "endpointIntrospection": {
          "description": "The OAuth introspection endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointIntrospectionOperational": {
          "description": "The operational OAuth introspection endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "endpointIntrospectionTimeout": {
          "description": "The maximum time in seconds a token introspection request is allowed to take.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "endpointJwks": {
          "description": "The OAuth JWKS endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointJwksOperational": {
          "description": "The operational OAuth JWKS endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "endpointJwksRefreshInterval": {
          "description": "The number of seconds between JWKS endpoint requests.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "endpointToken": {
          "description": "The OAuth token endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointTokenOperational": {
          "description": "The operational OAuth token endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "endpointTokenTimeout": {
          "description": "The maximum time in seconds a token request is allowed to take.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "endpointUserinfo": {
          "description": "The OpenID Connect Userinfo endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "endpointUserinfoOperational": {
          "description": "The operational OpenID Connect Userinfo endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "endpointUserinfoTimeout": {
          "description": "The maximum time in seconds a userinfo request is allowed to take.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "inactiveReason": {
          "description": "The reason the profile is not active.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". The allowed values and their meaning are:\n\n<pre>\n\"profile-disabled\" - The OAuth profile is disabled.\n\"missing-issuer\" - The issuer has not been discovered or configured.\n\"duplicate-issuer\" - Another OAuth profile already has the same issuer.\n\"none\" - The OAuth profile is active.\n</pre>\n Available since 2.26.",
          "type": "string"
        },
        "initiateInvalidErrorLinkCount": {
          "description": "The number of requests to the broker OAuth initiation endpoint that had an invalid error_link_uri parameter.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "initiateInvalidHostCount": {
          "description": "The number of requests to the broker OAuth initiation endpoint that did not have a valid Host header.  See the Allowed Host configuration setting.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "initiateInvalidTargetLinkCount": {
          "description": "The number of requests to the broker OAuth initiation endpoint that had an invalid target_link_uri parameter.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "initiateRequestCount": {
          "description": "The number of requests to the broker OAuth initiation endpoint (successful and unsuccessful).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "initiateSuccessCount": {
          "description": "The number of requests to the broker OAuth initiation endpoint that successfully redirected to the OAuth provider's authorization endpoint.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveEnabled": {
          "description": "Enable or disable interactive logins via this OAuth provider.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "interactiveGroupsFoundInTokenCount": {
          "description": "The number of times the groups were successfully found in the ID token or access token for interactive authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveIntrospectionMissingCount": {
          "description": "The number of failures during interactive authentication due to missing introspection configuration (a introspection request was required but no introspection endpoint was configured).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveIntrospectionMissingGroupsCount": {
          "description": "The number of introspection request made from the broker during interactive authentication for this OAuth profile  where the configured groups claim wasn't found in the access token or the introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveIntrospectionMissingUsernameCount": {
          "description": "The number of introspection requests made from the broker during interactive authentication for this OAuth profile where the configured username claim wasn't found in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveIntrospectionRequestCount": {
          "description": "The number of requests made to the introspection endpoint during interactive authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveIntrospectionResponseInvalidCount": {
          "description": "The number of introspection responses during interactive authentication that couldn't be parsed.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveIntrospectionStatusOkCount": {
          "description": "The number of introspection requests made from the broker during interactive authentication for this OAuth profile with 200 status responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveIntrospectionStatusOtherCount": {
          "description": "The number of introspection requests made from the broker during interactive authentication for this OAuth profile with status responses other than 200.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveIntrospectionTokenNotActiveCount": {
          "description": "The number of introspection responses indicating that the provided token was not active.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactivePromptForExpiredSession": {
          "description": "The value of the prompt parameter provided to the OAuth authorization server for login requests where the session has expired.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "interactivePromptForNewSession": {
          "description": "The value of the prompt parameter provided to the OAuth authorization server for login requests where the session is new or the user has explicitly logged out.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "interactiveUserinfoMissingCount": {
          "description": "The number of failures due to missing Userinfo configuration (a Userinfo request was required but no Userinfo endpoint was configured) during interactive authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveUserinfoMissingGroupsCount": {
          "description": "The number of Userinfo request made from the broker during interactive authentication for this OAuth profile where the configured groups claim wasn't found in the ID token or the Userinfo response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveUserinfoMissingUsernameCount": {
          "description": "The number of Userinfo requests made from the broker during interactive authentication for this OAuth profile where the configured username claim wasn't found in the ID token or Userinfo response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveUserinfoRequestCount": {
          "description": "The number of requests made to the Userinfo endpoint during interactive authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveUserinfoResponseInvalidCount": {
          "description": "The number of Userinfo requests made from the broker during interactive authentication for this OAuth profile with responses that couldn't be parsed.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveUserinfoStatusOkCount": {
          "description": "The number of Userinfo requests made from the broker during interactive authentication for this OAuth profile with 200 status responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveUserinfoStatusOtherCount": {
          "description": "The number of Userinfo requests made from the broker during interactive authentication for this OAuth profile with status responses other than 200.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveUserinfoSubjectMismatchCount": {
          "description": "The number of Userinfo requests made from the broker during interactive authentication for this OAuth profile with subject claims that did not match the subject from the ID token.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "interactiveUsernameFoundInTokenCount": {
          "description": "The number of time the username was successfully found in the ID token or access token for interactive authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "introspectionAverageTime": {
          "description": "The one minute average of the time required to complete a token introspection, in milliseconds (ms).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "introspectionLastFailureReason": {
          "description": "The reason for the introspection endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "introspectionLastFailureTime": {
          "description": "The timestamp of the last introspection endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "issuer": {
          "description": "The Issuer Identifier for the OAuth provider.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "issuerOperational": {
          "description": "The operational Issuer Identifier for the OAuth provider.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "jwksLastRefreshFailureReason": {
          "description": "The reason for the last JWKS public key refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "jwksLastRefreshFailureTime": {
          "description": "The timestamp of the last JWKS public key refresh failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "jwksLastRefreshTime": {
          "description": "The timestamp of the last JWKS public key refresh success.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "jwksNextScheduledRefreshTime": {
          "description": "The timestamp of the next scheduled JWKS public key refresh.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "jwksRefreshFailureCount": {
          "description": "The number of JWKS public key refresh failures.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "oauthRole": {
          "description": "The OAuth role of the broker.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"client\" - The broker is in the OAuth client role.\n\"resource-server\" - The broker is in the OAuth resource server role.\n</pre>\n",
          "enum": [
            "client",
            "resource-server"
          ],
          "type": "string"
        },
        "proxyName": {
          "description": "The name of the proxy to use for discovery, user info, jwks, introspection, and token requests. Leave empty for no proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n Available since 2.41.",
          "type": "string"
        },
        "resourceServerParseAccessTokenEnabled": {
          "description": "Enable or disable parsing of the access token as a JWT.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "resourceServerRequiredAudience": {
          "description": "The required audience value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "resourceServerRequiredIssuer": {
          "description": "The required issuer value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "resourceServerRequiredScope": {
          "description": "A space-separated list of scopes that must be present in the scope claim.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "resourceServerRequiredType": {
          "description": "The required TYP value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "resourceServerValidateAudienceEnabled": {
          "description": "Enable or disable verification of the audience claim in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "resourceServerValidateIssuerEnabled": {
          "description": "Enable or disable verification of the issuer claim in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "resourceServerValidateScopeEnabled": {
          "description": "Enable or disable verification of the scope claim in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "resourceServerValidateTypeEnabled": {
          "description": "Enable or disable verification of the TYP field in the access token header.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "sempEnabled": {
          "description": "Enable or disable authentication of SEMP requests with OAuth tokens.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "sempExpiredTokenCount": {
          "description": "The number of SEMP requests with an expired OAuth token.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempGroupsFoundInTokenCount": {
          "description": "The number of times the groups were successfully found in the ID token or access token for SEMP request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempIntrospectionMissingCount": {
          "description": "The number of failures during SEMP request authentication due to missing introspection configuration (a introspection request was required but no introspection endpoint was configured).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempIntrospectionMissingGroupsCount": {
          "description": "The number of introspection request made from the broker during SEMP request authentication for this OAuth profile where the configured groups claim wasn't found in the access token or the introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempIntrospectionMissingUsernameCount": {
          "description": "The number of introspection requests made from the broker during SEMP request authentication for this OAuth profile where the configured username claim wasn't found in the access token or introspection response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempIntrospectionRequestCount": {
          "description": "The number of requests made to the introspection endpoint during SEMP request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempIntrospectionResponseInvalidCount": {
          "description": "The number of introspection responses during SEMP request authentication that couldn't be parsed.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempIntrospectionStatusOkCount": {
          "description": "The number of introspection requests made from the broker during SEMP request authentication for this OAuth profile with 200 status responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempIntrospectionStatusOtherCount": {
          "description": "The number of introspection requests made from the broker during SEMP request authentication for this OAuth profile with status responses other than 200.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempIntrospectionTokenNotActiveCount": {
          "description": "The number of introspection responses indicating that the provided token was not active.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempInvalidTokenCount": {
          "description": "The number of SEMP requests with an invalid OAuth token.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempRequestCount": {
          "description": "The number of SEMP requests (successful and unsuccessful) using this OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempSuccessCount": {
          "description": "The number of successful SEMP authentications using this OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUserinfoMissingCount": {
          "description": "The number of failures due to missing Userinfo configuration (a Userinfo request was required but no Userinfo endpoint was configured) during SEMP request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUserinfoMissingGroupsCount": {
          "description": "The number of Userinfo request made from the broker during SEMP request authentication for this OAuth profile where the configured groups claim wasn't found in the ID token or the Userinfo response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUserinfoMissingUsernameCount": {
          "description": "The number of Userinfo requests made from the broker during SEMP request authentication for this OAuth profile where the configured username claim wasn't found in the ID token or Userinfo response.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUserinfoRequestCount": {
          "description": "The number of requests made to the Userinfo endpoint during SEMP request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUserinfoResponseInvalidCount": {
          "description": "The number of Userinfo requests made from the broker during SEMP request authentication for this OAuth profile with responses that couldn't be parsed.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUserinfoStatusOkCount": {
          "description": "The number of Userinfo requests made from the broker during SEMP request authentication for this OAuth profile with 200 status responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUserinfoStatusOtherCount": {
          "description": "The number of Userinfo requests made from the broker during SEMP request authentication for this OAuth profile with status responses other than 200.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUserinfoSubjectMismatchCount": {
          "description": "The number of Userinfo requests made from the broker during SEMP request authentication for this OAuth profile with subject claims that did not match the subject from the ID token.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "sempUsernameFoundInTokenCount": {
          "description": "The number of time the username was successfully found in the ID token or access token for SEMP request authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "tokenEndpointAverageTime": {
          "description": "The one minute average of the time required to complete a token request, in milliseconds (ms).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "tokenEndpointInvalidTokenCount": {
          "description": "The number of token endpoint requests made from the broker for this OAuth profile that returned tokens that couldn't be verified.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "tokenEndpointLastFailureReason": {
          "description": "The reason for the last token endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "tokenEndpointLastFailureTime": {
          "description": "The timestamp of the last token endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "tokenEndpointOtherErrorCount": {
          "description": "The number of token endpoint requests made from the broker for this OAuth profile that returned an unexpected error not accounted for in the other failure statistics.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "tokenEndpointRequestCount": {
          "description": "The number of token endpoint requests made from the broker for this OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "tokenEndpointStatusBadRequestCount": {
          "description": "The number of token endpoint requests made from the broker for this OAuth profile with 400 status responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "tokenEndpointStatusOkCount": {
          "description": "The number of token endpoint requests made from the broker for this OAuth profile with 200 status responses.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "tokenEndpointStatusOtherCount": {
          "description": "The number of token endpoint requests made from the broker for this OAuth profile with status responses other than 200 or 400.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int64",
          "type": "integer"
        },
        "userinfoAverageTime": {
          "description": "The one minute average of the time required to complete a token userinfo request, in milliseconds (ms).\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "format": "int32",
          "type": "integer"
        },
        "userinfoLastFailureReason": {
          "description": "The reason for the userinfo endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "userinfoLastFailureTime": {
          "description": "The timestamp of the last userinfo endpoint request failure.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "usernameClaimName": {
          "description": "The name of the username claim.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileAccessLevelGroup": {
      "properties": {
        "description": {
          "description": "A description for the group.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "globalAccessLevel": {
          "description": "The global access level for this group.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - User has no access to global data.\n\"read-only\" - User has read-only access to global data.\n\"mesh-manager\" - User has read-write access to global data required to administer this broker as a member of a mesh of brokers.\n\"read-write\" - User has read-write access to most global data.\n\"admin\" - User has read-write access to all global data.\n</pre>\n",
          "enum": [
            "none",
            "read-only",
            "mesh-manager",
            "read-write",
            "admin"
          ],
          "type": "string"
        },
        "groupName": {
          "description": "The name of the group.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "msgVpnAccessLevel": {
          "description": "The default message VPN access level for this group.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - User has no access to a Message VPN.\n\"read-only\" - User has read-only access to a Message VPN.\n\"read-write\" - User has read-write access to most Message VPN settings.\n</pre>\n",
          "enum": [
            "none",
            "read-only",
            "read-write"
          ],
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileAccessLevelGroupCollections": {
      "properties": {
        "msgVpnAccessLevelExceptions": {
          "$ref": "#/definitions/OauthProfileAccessLevelGroupCollectionsMsgVpnAccessLevelExceptions"
        }
      },
      "type": "object"
    },
    "OauthProfileAccessLevelGroupCollectionsMsgVpnAccessLevelExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the msgVpnAccessLevelExceptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OauthProfileAccessLevelGroupLinks": {
      "properties": {
        "msgVpnAccessLevelExceptionsUri": {
          "description": "The URI of this Group Access Level's collection of Message VPN Access-Level Exception objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this Group Access Level object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileAccessLevelGroupMsgVpnAccessLevelException": {
      "properties": {
        "accessLevel": {
          "description": "The message VPN access level.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - User has no access to a Message VPN.\n\"read-only\" - User has read-only access to a Message VPN.\n\"read-write\" - User has read-write access to most Message VPN settings.\n</pre>\n",
          "enum": [
            "none",
            "read-only",
            "read-write"
          ],
          "type": "string"
        },
        "groupName": {
          "description": "The name of the group.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Message VPN Access-Level Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/OauthProfileAccessLevelGroupMsgVpnAccessLevelException"
        },
        "links": {
          "$ref": "#/definitions/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/OauthProfileAccessLevelGroupMsgVpnAccessLevelException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileAccessLevelGroupResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/OauthProfileAccessLevelGroupCollections"
        },
        "data": {
          "$ref": "#/definitions/OauthProfileAccessLevelGroup"
        },
        "links": {
          "$ref": "#/definitions/OauthProfileAccessLevelGroupLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileAccessLevelGroupsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/OauthProfileAccessLevelGroupCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/OauthProfileAccessLevelGroup"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/OauthProfileAccessLevelGroupLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileClientAllowedHost": {
      "properties": {
        "allowedHost": {
          "description": "An allowed value for the Host header.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileClientAllowedHostCollections": {
      "properties": {},
      "type": "object"
    },
    "OauthProfileClientAllowedHostLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Allowed Host Value object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileClientAllowedHostResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/OauthProfileClientAllowedHostCollections"
        },
        "data": {
          "$ref": "#/definitions/OauthProfileClientAllowedHost"
        },
        "links": {
          "$ref": "#/definitions/OauthProfileClientAllowedHostLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileClientAllowedHostsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientAllowedHostCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientAllowedHost"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientAllowedHostLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileClientAuthorizationParameter": {
      "properties": {
        "authorizationParameterName": {
          "description": "The name of the authorization parameter.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "authorizationParameterValue": {
          "description": "The authorization parameter value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileClientAuthorizationParameterCollections": {
      "properties": {},
      "type": "object"
    },
    "OauthProfileClientAuthorizationParameterLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Authorization Parameter object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileClientAuthorizationParameterResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/OauthProfileClientAuthorizationParameterCollections"
        },
        "data": {
          "$ref": "#/definitions/OauthProfileClientAuthorizationParameter"
        },
        "links": {
          "$ref": "#/definitions/OauthProfileClientAuthorizationParameterLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileClientAuthorizationParametersResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientAuthorizationParameterCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientAuthorizationParameter"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientAuthorizationParameterLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileClientRequiredClaim": {
      "properties": {
        "clientRequiredClaimName": {
          "description": "The name of the ID token claim to verify.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "clientRequiredClaimValue": {
          "description": "The required claim value, which must be a string containing a valid JSON value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileClientRequiredClaimCollections": {
      "properties": {},
      "type": "object"
    },
    "OauthProfileClientRequiredClaimLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Required Claim object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileClientRequiredClaimResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/OauthProfileClientRequiredClaimCollections"
        },
        "data": {
          "$ref": "#/definitions/OauthProfileClientRequiredClaim"
        },
        "links": {
          "$ref": "#/definitions/OauthProfileClientRequiredClaimLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileClientRequiredClaimsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientRequiredClaimCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientRequiredClaim"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/OauthProfileClientRequiredClaimLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileCollections": {
      "properties": {
        "accessLevelGroups": {
          "$ref": "#/definitions/OauthProfileCollectionsAccessLevelGroups"
        },
        "clientAllowedHosts": {
          "$ref": "#/definitions/OauthProfileCollectionsClientAllowedHosts"
        },
        "clientAuthorizationParameters": {
          "$ref": "#/definitions/OauthProfileCollectionsClientAuthorizationParameters"
        },
        "clientRequiredClaims": {
          "$ref": "#/definitions/OauthProfileCollectionsClientRequiredClaims"
        },
        "defaultMsgVpnAccessLevelExceptions": {
          "$ref": "#/definitions/OauthProfileCollectionsDefaultMsgVpnAccessLevelExceptions"
        },
        "resourceServerRequiredClaims": {
          "$ref": "#/definitions/OauthProfileCollectionsResourceServerRequiredClaims"
        }
      },
      "type": "object"
    },
    "OauthProfileCollectionsAccessLevelGroups": {
      "properties": {
        "count": {
          "description": "The total number of objects in the accessLevelGroups collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OauthProfileCollectionsClientAllowedHosts": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clientAllowedHosts collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OauthProfileCollectionsClientAuthorizationParameters": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clientAuthorizationParameters collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OauthProfileCollectionsClientRequiredClaims": {
      "properties": {
        "count": {
          "description": "The total number of objects in the clientRequiredClaims collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OauthProfileCollectionsDefaultMsgVpnAccessLevelExceptions": {
      "properties": {
        "count": {
          "description": "The total number of objects in the defaultMsgVpnAccessLevelExceptions collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OauthProfileCollectionsResourceServerRequiredClaims": {
      "properties": {
        "count": {
          "description": "The total number of objects in the resourceServerRequiredClaims collection.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OauthProfileDefaultMsgVpnAccessLevelException": {
      "properties": {
        "accessLevel": {
          "description": "The message VPN access level.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - User has no access to a Message VPN.\n\"read-only\" - User has read-only access to a Message VPN.\n\"read-write\" - User has read-write access to most Message VPN settings.\n</pre>\n",
          "enum": [
            "none",
            "read-only",
            "read-write"
          ],
          "type": "string"
        },
        "msgVpnName": {
          "description": "The name of the message VPN.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileDefaultMsgVpnAccessLevelExceptionCollections": {
      "properties": {},
      "type": "object"
    },
    "OauthProfileDefaultMsgVpnAccessLevelExceptionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Message VPN Access-Level Exception object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileDefaultMsgVpnAccessLevelExceptionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/OauthProfileDefaultMsgVpnAccessLevelExceptionCollections"
        },
        "data": {
          "$ref": "#/definitions/OauthProfileDefaultMsgVpnAccessLevelException"
        },
        "links": {
          "$ref": "#/definitions/OauthProfileDefaultMsgVpnAccessLevelExceptionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileDefaultMsgVpnAccessLevelExceptionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/OauthProfileDefaultMsgVpnAccessLevelExceptionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/OauthProfileDefaultMsgVpnAccessLevelException"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/OauthProfileDefaultMsgVpnAccessLevelExceptionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileLinks": {
      "properties": {
        "accessLevelGroupsUri": {
          "description": "The URI of this OAuth Profile's collection of Group Access Level objects.",
          "type": "string"
        },
        "clientAllowedHostsUri": {
          "description": "The URI of this OAuth Profile's collection of Allowed Host Value objects.",
          "type": "string"
        },
        "clientAuthorizationParametersUri": {
          "description": "The URI of this OAuth Profile's collection of Authorization Parameter objects.",
          "type": "string"
        },
        "clientRequiredClaimsUri": {
          "description": "The URI of this OAuth Profile's collection of Required Claim objects.",
          "type": "string"
        },
        "defaultMsgVpnAccessLevelExceptionsUri": {
          "description": "The URI of this OAuth Profile's collection of Message VPN Access-Level Exception objects.",
          "type": "string"
        },
        "resourceServerRequiredClaimsUri": {
          "description": "The URI of this OAuth Profile's collection of Required Claim objects.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of this OAuth Profile object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileResourceServerRequiredClaim": {
      "properties": {
        "oauthProfileName": {
          "description": "The name of the OAuth profile.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "resourceServerRequiredClaimName": {
          "description": "The name of the access token claim to verify.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "resourceServerRequiredClaimValue": {
          "description": "The required claim value, which must be a string containing a valid JSON value.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileResourceServerRequiredClaimCollections": {
      "properties": {},
      "type": "object"
    },
    "OauthProfileResourceServerRequiredClaimLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Required Claim object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OauthProfileResourceServerRequiredClaimResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/OauthProfileResourceServerRequiredClaimCollections"
        },
        "data": {
          "$ref": "#/definitions/OauthProfileResourceServerRequiredClaim"
        },
        "links": {
          "$ref": "#/definitions/OauthProfileResourceServerRequiredClaimLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileResourceServerRequiredClaimsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/OauthProfileResourceServerRequiredClaimCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/OauthProfileResourceServerRequiredClaim"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/OauthProfileResourceServerRequiredClaimLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfileResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/OauthProfileCollections"
        },
        "data": {
          "$ref": "#/definitions/OauthProfile"
        },
        "links": {
          "$ref": "#/definitions/OauthProfileLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "OauthProfilesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/OauthProfileCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/OauthProfile"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/OauthProfileLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "ProxiesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/ProxyCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/Proxy"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/ProxyLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "Proxy": {
      "properties": {
        "authenticationBasicUsername": {
          "description": "The username to use with basic authentication.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "authenticationScheme": {
          "description": "The authentication scheme used to connect to the proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"none\" - No authentication.\n\"basic\" - Username/password authentication.\n</pre>\n",
          "enum": [
            "none",
            "basic"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "Enable or disable the proxy. When disabled, no connections are initiated to this particular Proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "host": {
          "description": "The IP address or host name of the proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "port": {
          "description": "The port to connect to on the proxy host.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "format": "int32",
          "type": "integer"
        },
        "proxyName": {
          "description": "The name of the proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "proxyType": {
          "description": "The type of proxy.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n The allowed values and their meaning are:\n\n<pre>\n\"direct\" - Direct connection (no proxy).\n\"http\" - HTTP proxy.\n</pre>\n",
          "enum": [
            "direct",
            "http"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProxyCollections": {
      "properties": {},
      "type": "object"
    },
    "ProxyLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Proxy object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProxyResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/ProxyCollections"
        },
        "data": {
          "$ref": "#/definitions/Proxy"
        },
        "links": {
          "$ref": "#/definitions/ProxyLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "SempError": {
      "properties": {
        "code": {
          "description": "The error code which uniquely identifies the error that has occurred.",
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "description": "The verbose description of the problem.",
          "type": "string"
        },
        "status": {
          "description": "The terse status string associated with `code`.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "status",
        "description"
      ],
      "type": "object"
    },
    "SempMeta": {
      "properties": {
        "count": {
          "description": "The total number of objects requested, irrespective of page size. This may be a count of all objects in a collection or a filtered subset. It represents a snapshot in time and may change when paging through results.",
          "format": "int64",
          "type": "integer"
        },
        "error": {
          "$ref": "#/definitions/SempError"
        },
        "paging": {
          "$ref": "#/definitions/SempPaging"
        },
        "request": {
          "$ref": "#/definitions/SempRequest"
        },
        "responseCode": {
          "description": "The HTTP response code, one of 200 (success), 4xx (client error), or 5xx (server error).",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "request",
        "responseCode"
      ],
      "type": "object"
    },
    "SempMetaOnlyResponse": {
      "properties": {
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "SempPaging": {
      "properties": {
        "cursorQuery": {
          "description": "The cursor, or position, for the next page of objects. Use this as the `cursor` query parameter of the next request.",
          "type": "string"
        },
        "nextPageUri": {
          "description": "The URI of the next page of objects. `cursorQuery` is already embedded within this URI.",
          "type": "string"
        }
      },
      "required": [
        "cursorQuery",
        "nextPageUri"
      ],
      "type": "object"
    },
    "SempRequest": {
      "properties": {
        "method": {
          "description": "The HTTP method of the request which resulted in this response.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of the request which resulted in this response. The URI may be normalized.",
          "type": "string"
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "Session": {
      "properties": {
        "createTime": {
          "description": "The timestamp of when the session was created.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "lastActivityTime": {
          "description": "The timestamp of when the last activity on the session occurred.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". This value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).",
          "format": "int32",
          "type": "integer"
        },
        "sessionId": {
          "description": "The unique identifier for the session.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "sessionUsername": {
          "description": "The username used for authorization.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SessionCollections": {
      "properties": {},
      "type": "object"
    },
    "SessionLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this SEMP Session object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SessionResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/SessionCollections"
        },
        "data": {
          "$ref": "#/definitions/Session"
        },
        "links": {
          "$ref": "#/definitions/SessionLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "SessionsResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/SessionCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/Session"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/SessionLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "StandardDomainCertAuthoritiesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/StandardDomainCertAuthorityCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/StandardDomainCertAuthority"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/StandardDomainCertAuthorityLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "StandardDomainCertAuthority": {
      "properties": {
        "certAuthorityName": {
          "description": "The name of the Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        },
        "certContent": {
          "description": "The PEM formatted content for the trusted root certificate of a standard domain Certificate Authority.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StandardDomainCertAuthorityCollections": {
      "properties": {},
      "type": "object"
    },
    "StandardDomainCertAuthorityLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Standard Domain Certificate Authority object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StandardDomainCertAuthorityResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/StandardDomainCertAuthorityCollections"
        },
        "data": {
          "$ref": "#/definitions/StandardDomainCertAuthority"
        },
        "links": {
          "$ref": "#/definitions/StandardDomainCertAuthorityLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "VirtualHostname": {
      "properties": {
        "enabled": {
          "description": "Enable or disable Virtual Hostname to Message VPN mapping.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "boolean"
        },
        "msgVpnName": {
          "description": "The message VPN to which this virtual hostname is mapped.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\". (This description is taken from the corresponding attribute in the configuration API.)\n\n",
          "type": "string"
        },
        "virtualHostname": {
          "description": "The virtual hostname.\n\nThe minimum access scope/level required to retrieve this attribute is \"global/read-only\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualHostnameCollections": {
      "properties": {},
      "type": "object"
    },
    "VirtualHostnameLinks": {
      "properties": {
        "uri": {
          "description": "The URI of this Virtual Hostname object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualHostnameResponse": {
      "properties": {
        "collections": {
          "$ref": "#/definitions/VirtualHostnameCollections"
        },
        "data": {
          "$ref": "#/definitions/VirtualHostname"
        },
        "links": {
          "$ref": "#/definitions/VirtualHostnameLinks"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    },
    "VirtualHostnamesResponse": {
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/VirtualHostnameCollections"
          },
          "type": "array"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/VirtualHostname"
          },
          "type": "array"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/VirtualHostnameLinks"
          },
          "type": "array"
        },
        "meta": {
          "$ref": "#/definitions/SempMeta"
        }
      },
      "required": [
        "meta"
      ],
      "type": "object"
    }
  },
  "host": "www.solace.com",
  "info": {
    "contact": {
      "email": "support@solace.com",
      "name": "Solace",
      "url": "http://www.solace.com"
    },
    "description": "SEMP (starting in `v2`) is a RESTful API for configuring, monitoring, and administering a Solace PubSub+ broker. This specification defines the following API:\n\n\nAPI|Base Path|Purpose\n:---|:---|:---\nMonitoring|/SEMP/v2/monitor|Querying operational state\n\n\n\nThe following APIs are also available:\n\n\nAPI|Base Path|Purpose\n:---|:---|:---\nAction|/SEMP/v2/action|Performing actions\nConfiguration|/SEMP/v2/config|Reading and writing configuration\n\n\n\nFor tutorials, architectural and protocol design documentation, and other information about the SEMP API, consult the [SEMP documentation](https://docs.solace.com/Admin/SEMP/Using-SEMP.htm) on the Solace website. The SEMP API specifications are also [available for download](https://solace.com/downloads/).\n\nIf you need additional support, please contact us at [support@solace.com](mailto:support@solace.com).",
    "title": "SEMP (Solace Element Management Protocol)",
    "version": "2.46"
  },
  "parameters": {
    "countQuery": {
      "default": 10,
      "description": "Limit the count of objects in the response. See the documentation for the `count` parameter.",
      "in": "query",
      "minimum": 1,
      "name": "count",
      "required": false,
      "type": "integer"
    },
    "cursorQuery": {
      "description": "The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.",
      "in": "query",
      "name": "cursor",
      "required": false,
      "type": "string"
    },
    "selectQuery": {
      "collectionFormat": "csv",
      "description": "Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.",
      "in": "query",
      "items": {
        "type": "string"
      },
      "name": "select",
      "required": false,
      "type": "array"
    },
    "whereQuery": {
      "collectionFormat": "csv",
      "description": "Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.",
      "in": "query",
      "items": {
        "type": "string"
      },
      "name": "where",
      "required": false,
      "type": "array"
    }
  },
  "paths": {
    "/": {
      "get": {
        "description": "Get a Broker object.\n\nThis object contains global configuration for the message broker.\n\n\nAttribute|Deprecated\n:---|:---:\ntlsTicketLifetime|x\n\n\n\nThe minimum access scope/level required to perform this operation is determined by the attributes retrieved.\n\nThis has been available since 2.13.",
        "operationId": "getBroker",
        "parameters": [
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Broker object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/BrokerResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Broker object.",
        "tags": [
          "all"
        ]
      }
    },
    "/about": {
      "get": {
        "description": "Get an About object.\n\nThis provides metadata about the SEMP API, such as the version of the API supported by the broker.\n\n\n\nThe minimum access scope/level required to perform this operation is determined by the attributes retrieved.\n\nThis has been available since 2.13.",
        "operationId": "getAbout",
        "parameters": [
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The About object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/AboutResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an About object.",
        "tags": [
          "all",
          "about"
        ]
      }
    },
    "/about/api": {
      "get": {
        "description": "Get an API Description object.\n\nThe API Description object provides metadata about the SEMP API.\n\n\n\nThe minimum access scope/level required to perform this operation is determined by the attributes retrieved.\n\nThis has been available since 2.11.",
        "operationId": "getAboutApi",
        "parameters": [
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The API Description object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/AboutApiResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an API Description object.",
        "tags": [
          "all",
          "about"
        ]
      }
    },
    "/about/user": {
      "get": {
        "description": "Get a User object.\n\nSession and access level information about the user accessing the SEMP API.\n\n\n\nThe minimum access scope/level required to perform this operation is determined by the attributes retrieved.\n\nThis has been available since 2.11.",
        "operationId": "getAboutUser",
        "parameters": [
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The User object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/AboutUserResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a User object.",
        "tags": [
          "all",
          "about"
        ]
      }
    },
    "/about/user/msgVpns": {
      "get": {
        "description": "Get a list of User Message VPN objects.\n\nThis provides information about the Message VPN access level for the username used to access the SEMP API.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/none\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getAboutUserMsgVpns",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of User Message VPN objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/AboutUserMsgVpnsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of User Message VPN objects.",
        "tags": [
          "all",
          "about"
        ]
      }
    },
    "/about/user/msgVpns/{msgVpnName}": {
      "get": {
        "description": "Get a User Message VPN object.\n\nThis provides information about the Message VPN access level for the username used to access the SEMP API.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/none\".\n\nThis has been available since 2.11.",
        "operationId": "getAboutUserMsgVpn",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The User Message VPN object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/AboutUserMsgVpnResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a User Message VPN object.",
        "tags": [
          "all",
          "about"
        ]
      }
    },
    "/certAuthorities": {
      "get": {
        "deprecated": true,
        "description": "Get a list of Certificate Authority objects.\n\nClients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncertAuthorityName|x|x\ncertContent||x\ncrlDayList||x\ncrlLastDownloadTime||x\ncrlLastFailureReason||x\ncrlLastFailureTime||x\ncrlNextDownloadTime||x\ncrlTimeList||x\ncrlUp||x\ncrlUrl||x\nocspLastFailureReason||x\nocspLastFailureTime||x\nocspLastFailureUrl||x\nocspNonResponderCertEnabled||x\nocspOverrideUrl||x\nocspTimeout||x\nrevocationCheckEnabled||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.",
        "operationId": "getCertAuthorities",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Certificate Authority objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/CertAuthoritiesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Certificate Authority objects.",
        "tags": [
          "all",
          "certAuthority"
        ]
      }
    },
    "/certAuthorities/{certAuthorityName}": {
      "get": {
        "deprecated": true,
        "description": "Get a Certificate Authority object.\n\nClients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncertAuthorityName|x|x\ncertContent||x\ncrlDayList||x\ncrlLastDownloadTime||x\ncrlLastFailureReason||x\ncrlLastFailureTime||x\ncrlNextDownloadTime||x\ncrlTimeList||x\ncrlUp||x\ncrlUrl||x\nocspLastFailureReason||x\nocspLastFailureTime||x\nocspLastFailureUrl||x\nocspNonResponderCertEnabled||x\nocspOverrideUrl||x\nocspTimeout||x\nrevocationCheckEnabled||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.",
        "operationId": "getCertAuthority",
        "parameters": [
          {
            "description": "The name of the Certificate Authority.",
            "in": "path",
            "name": "certAuthorityName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Certificate Authority object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/CertAuthorityResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Certificate Authority object.",
        "tags": [
          "all",
          "certAuthority"
        ]
      }
    },
    "/certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames": {
      "get": {
        "deprecated": true,
        "description": "Get a list of OCSP Responder Trusted Common Name objects.\n\nWhen an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncertAuthorityName|x|x\nocspTlsTrustedCommonName|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been deprecated since 2.19. Replaced by clientCertAuthorities.",
        "operationId": "getCertAuthorityOcspTlsTrustedCommonNames",
        "parameters": [
          {
            "description": "The name of the Certificate Authority.",
            "in": "path",
            "name": "certAuthorityName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of OCSP Responder Trusted Common Name objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/CertAuthorityOcspTlsTrustedCommonNamesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of OCSP Responder Trusted Common Name objects.",
        "tags": [
          "all",
          "certAuthority"
        ]
      }
    },
    "/certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}": {
      "get": {
        "deprecated": true,
        "description": "Get an OCSP Responder Trusted Common Name object.\n\nWhen an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncertAuthorityName|x|x\nocspTlsTrustedCommonName|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been deprecated since 2.19. Replaced by clientCertAuthorities.",
        "operationId": "getCertAuthorityOcspTlsTrustedCommonName",
        "parameters": [
          {
            "description": "The name of the Certificate Authority.",
            "in": "path",
            "name": "certAuthorityName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The expected Trusted Common Name of the OCSP responder remote certificate.",
            "in": "path",
            "name": "ocspTlsTrustedCommonName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The OCSP Responder Trusted Common Name object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/CertAuthorityOcspTlsTrustedCommonNameResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an OCSP Responder Trusted Common Name object.",
        "tags": [
          "all",
          "certAuthority"
        ]
      }
    },
    "/clientCertAuthorities": {
      "get": {
        "description": "Get a list of Client Certificate Authority objects.\n\nClients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.\n\n\nAttribute|Identifying\n:---|:---:\ncertAuthorityName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.19.",
        "operationId": "getClientCertAuthorities",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Certificate Authority objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/ClientCertAuthoritiesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Certificate Authority objects.",
        "tags": [
          "all",
          "clientCertAuthority"
        ]
      }
    },
    "/clientCertAuthorities/{certAuthorityName}": {
      "get": {
        "description": "Get a Client Certificate Authority object.\n\nClients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.\n\n\nAttribute|Identifying\n:---|:---:\ncertAuthorityName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.19.",
        "operationId": "getClientCertAuthority",
        "parameters": [
          {
            "description": "The name of the Certificate Authority.",
            "in": "path",
            "name": "certAuthorityName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Certificate Authority object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/ClientCertAuthorityResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Certificate Authority object.",
        "tags": [
          "all",
          "clientCertAuthority"
        ]
      }
    },
    "/clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames": {
      "get": {
        "description": "Get a list of OCSP Responder Trusted Common Name objects.\n\nWhen an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.\n\n\nAttribute|Identifying\n:---|:---:\ncertAuthorityName|x\nocspTlsTrustedCommonName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.19.",
        "operationId": "getClientCertAuthorityOcspTlsTrustedCommonNames",
        "parameters": [
          {
            "description": "The name of the Certificate Authority.",
            "in": "path",
            "name": "certAuthorityName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of OCSP Responder Trusted Common Name objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/ClientCertAuthorityOcspTlsTrustedCommonNamesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of OCSP Responder Trusted Common Name objects.",
        "tags": [
          "all",
          "clientCertAuthority"
        ]
      }
    },
    "/clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}": {
      "get": {
        "description": "Get an OCSP Responder Trusted Common Name object.\n\nWhen an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.\n\n\nAttribute|Identifying\n:---|:---:\ncertAuthorityName|x\nocspTlsTrustedCommonName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.19.",
        "operationId": "getClientCertAuthorityOcspTlsTrustedCommonName",
        "parameters": [
          {
            "description": "The name of the Certificate Authority.",
            "in": "path",
            "name": "certAuthorityName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The expected Trusted Common Name of the OCSP responder remote certificate.",
            "in": "path",
            "name": "ocspTlsTrustedCommonName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The OCSP Responder Trusted Common Name object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/ClientCertAuthorityOcspTlsTrustedCommonNameResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an OCSP Responder Trusted Common Name object.",
        "tags": [
          "all",
          "clientCertAuthority"
        ]
      }
    },
    "/configSyncLocalDatabaseRows": {
      "get": {
        "description": "Get a list of Config Sync Local Database objects.\n\nConfig Sync Local Database Rows contains information about the status of the table for this Broker or a local Message VPN.\n\n\nAttribute|Identifying\n:---|:---:\nname|x\ntype|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\". A minimum access scope/level of global/read-only is required to view the router table.\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.22.",
        "operationId": "getConfigSyncLocalDatabaseRows",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Config Sync Local Database objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/ConfigSyncLocalDatabaseRowsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Config Sync Local Database objects.",
        "tags": [
          "all",
          "configSyncLocalDatabaseRow"
        ]
      }
    },
    "/configSyncLocalDatabaseRows/{type},{name}": {
      "get": {
        "description": "Get a Config Sync Local Database object.\n\nConfig Sync Local Database Rows contains information about the status of the table for this Broker or a local Message VPN.\n\n\nAttribute|Identifying\n:---|:---:\nname|x\ntype|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\". A minimum access scope/level of global/read-only is required to view the router table.\n\nThis has been available since 2.22.",
        "operationId": "getConfigSyncLocalDatabaseRow",
        "parameters": [
          {
            "description": "The type of the row. Can be one of \"router\" or \"vpn\". There is one \"router\" row and one row for each configured \"vpn\". Each row represents a table of information that is synchronized between Config Sync and replication mates.",
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name is \"site\" when the row type is \"router\", otherwise it is the Message VPN name.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Config Sync Local Database object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/ConfigSyncLocalDatabaseRowResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Config Sync Local Database object.",
        "tags": [
          "all",
          "configSyncLocalDatabaseRow"
        ]
      }
    },
    "/dmrClusters": {
      "get": {
        "description": "Get a list of Cluster objects.\n\nA Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ndmrClusterName|x|\ntlsServerCertEnforceTrustedCommonNameEnabled||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusters",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Cluster objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClustersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Cluster objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}": {
      "get": {
        "description": "Get a Cluster object.\n\nA Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ndmrClusterName|x|\ntlsServerCertEnforceTrustedCommonNameEnabled||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getDmrCluster",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Cluster object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Cluster object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/certMatchingRules": {
      "get": {
        "description": "Get a list of Certificate Matching Rule objects.\n\nA Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nruleName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.28.",
        "operationId": "getDmrClusterCertMatchingRules",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Certificate Matching Rule objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterCertMatchingRulesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Certificate Matching Rule objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}": {
      "get": {
        "description": "Get a Certificate Matching Rule object.\n\nA Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nruleName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.28.",
        "operationId": "getDmrClusterCertMatchingRule",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Certificate Matching Rule object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterCertMatchingRuleResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Certificate Matching Rule object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}/attributeFilters": {
      "get": {
        "description": "Get a list of Certificate Matching Rule Attribute Filter objects.\n\nA Cert Matching Rule Attribute Filter compares a link attribute to a string.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nfilterName|x\nruleName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.28.",
        "operationId": "getDmrClusterCertMatchingRuleAttributeFilters",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Certificate Matching Rule Attribute Filter objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterCertMatchingRuleAttributeFiltersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Certificate Matching Rule Attribute Filter objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}/attributeFilters/{filterName}": {
      "get": {
        "description": "Get a Certificate Matching Rule Attribute Filter object.\n\nA Cert Matching Rule Attribute Filter compares a link attribute to a string.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nfilterName|x\nruleName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.28.",
        "operationId": "getDmrClusterCertMatchingRuleAttributeFilter",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the filter.",
            "in": "path",
            "name": "filterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Certificate Matching Rule Attribute Filter object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterCertMatchingRuleAttributeFilterResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Certificate Matching Rule Attribute Filter object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}/conditions": {
      "get": {
        "description": "Get a list of Certificate Matching Rule Condition objects.\n\nA Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nruleName|x\nsource|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.28.",
        "operationId": "getDmrClusterCertMatchingRuleConditions",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Certificate Matching Rule Condition objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterCertMatchingRuleConditionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Certificate Matching Rule Condition objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}/conditions/{source}": {
      "get": {
        "description": "Get a Certificate Matching Rule Condition object.\n\nA Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nruleName|x\nsource|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.28.",
        "operationId": "getDmrClusterCertMatchingRuleCondition",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Certificate field to be compared with the Attribute.",
            "in": "path",
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Certificate Matching Rule Condition object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterCertMatchingRuleConditionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Certificate Matching Rule Condition object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links": {
      "get": {
        "description": "Get a list of Link objects.\n\nA Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusterLinks",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Link objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinksResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Link objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}": {
      "get": {
        "description": "Get a Link object.\n\nA Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusterLink",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Link object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Link object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}/attributes": {
      "get": {
        "description": "Get a list of Link Attribute objects.\n\nA Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.\n\n\nAttribute|Identifying\n:---|:---:\nattributeName|x\nattributeValue|x\ndmrClusterName|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.28.",
        "operationId": "getDmrClusterLinkAttributes",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Link Attribute objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkAttributesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Link Attribute objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}/attributes/{attributeName},{attributeValue}": {
      "get": {
        "description": "Get a Link Attribute object.\n\nA Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.\n\n\nAttribute|Identifying\n:---|:---:\nattributeName|x\nattributeValue|x\ndmrClusterName|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.28.",
        "operationId": "getDmrClusterLinkAttribute",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Attribute.",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The value of the Attribute.",
            "in": "path",
            "name": "attributeValue",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Link Attribute object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkAttributeResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Link Attribute object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}/channels": {
      "get": {
        "description": "Get a list of Cluster Link Channels objects.\n\nA Channel is a connection between this broker and a remote node in the Cluster.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nmsgVpnName|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusterLinkChannels",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Cluster Link Channels objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkChannelsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Cluster Link Channels objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}/channels/{msgVpnName}": {
      "get": {
        "description": "Get a Cluster Link Channels object.\n\nA Channel is a connection between this broker and a remote node in the Cluster.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nmsgVpnName|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusterLinkChannel",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Cluster Link Channels object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkChannelResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Cluster Link Channels object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses": {
      "get": {
        "description": "Get a list of Remote Address objects.\n\nEach Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nremoteAddress|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusterLinkRemoteAddresses",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Remote Address objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkRemoteAddressesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Remote Address objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses/{remoteAddress}": {
      "get": {
        "description": "Get a Remote Address object.\n\nEach Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\nremoteAddress|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusterLinkRemoteAddress",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The FQDN or IP address (and optional port) of the remote node. If a port is not provided, it will vary based on the transport encoding: 55555 (plain-text), 55443 (encrypted), or 55003 (compressed).",
            "in": "path",
            "name": "remoteAddress",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Remote Address object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkRemoteAddressResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Remote Address object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames": {
      "get": {
        "deprecated": true,
        "description": "Get a list of Trusted Common Name objects.\n\nThe Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ndmrClusterName|x|x\nremoteNodeName|x|x\ntlsTrustedCommonName|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
        "operationId": "getDmrClusterLinkTlsTrustedCommonNames",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Trusted Common Name objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkTlsTrustedCommonNamesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Trusted Common Name objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames/{tlsTrustedCommonName}": {
      "get": {
        "deprecated": true,
        "description": "Get a Trusted Common Name object.\n\nThe Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ndmrClusterName|x|x\nremoteNodeName|x|x\ntlsTrustedCommonName|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
        "operationId": "getDmrClusterLinkTlsTrustedCommonName",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the Link.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The expected trusted common name of the remote certificate.",
            "in": "path",
            "name": "tlsTrustedCommonName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Trusted Common Name object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterLinkTlsTrustedCommonNameResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Trusted Common Name object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/topologyIssues": {
      "get": {
        "description": "Get a list of Cluster Topology Issue objects.\n\nA Cluster Topology Issue indicates incorrect or inconsistent configuration within the DMR network. Such issues will cause messages to be undelivered or lost.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\ntopologyIssue|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusterTopologyIssues",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Cluster Topology Issue objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterTopologyIssuesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Cluster Topology Issue objects.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/dmrClusters/{dmrClusterName}/topologyIssues/{topologyIssue}": {
      "get": {
        "description": "Get a Cluster Topology Issue object.\n\nA Cluster Topology Issue indicates incorrect or inconsistent configuration within the DMR network. Such issues will cause messages to be undelivered or lost.\n\n\nAttribute|Identifying\n:---|:---:\ndmrClusterName|x\ntopologyIssue|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getDmrClusterTopologyIssue",
        "parameters": [
          {
            "description": "The name of the Cluster.",
            "in": "path",
            "name": "dmrClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topology issue discovered in the Cluster. A topology issue indicates incorrect or inconsistent configuration within the DMR network. Such issues will cause messages to be undelivered or lost.",
            "in": "path",
            "name": "topologyIssue",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Cluster Topology Issue object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DmrClusterTopologyIssueResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Cluster Topology Issue object.",
        "tags": [
          "all",
          "dmrCluster"
        ]
      }
    },
    "/domainCertAuthorities": {
      "get": {
        "description": "Get a list of Domain Certificate Authority objects.\n\nCertificate Authorities trusted for domain verification.\n\n\nAttribute|Identifying\n:---|:---:\ncertAuthorityName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.19.",
        "operationId": "getDomainCertAuthorities",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Domain Certificate Authority objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DomainCertAuthoritiesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Domain Certificate Authority objects.",
        "tags": [
          "all",
          "domainCertAuthority"
        ]
      }
    },
    "/domainCertAuthorities/{certAuthorityName}": {
      "get": {
        "description": "Get a Domain Certificate Authority object.\n\nCertificate Authorities trusted for domain verification.\n\n\nAttribute|Identifying\n:---|:---:\ncertAuthorityName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.19.",
        "operationId": "getDomainCertAuthority",
        "parameters": [
          {
            "description": "The name of the Certificate Authority.",
            "in": "path",
            "name": "certAuthorityName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Domain Certificate Authority object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/DomainCertAuthorityResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Domain Certificate Authority object.",
        "tags": [
          "all",
          "domainCertAuthority"
        ]
      }
    },
    "/msgVpns": {
      "get": {
        "description": "Get a list of Message VPN objects.\n\nMessage VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nauthenticationOauthDefaultProviderName||x\nbridgingTlsServerCertEnforceTrustedCommonNameEnabled||x\nconfigSyncLocalKey||x\nconfigSyncLocalLastResult||x\nconfigSyncLocalRole||x\nconfigSyncLocalState||x\nconfigSyncLocalTimeInState||x\ncounter.controlRxByteCount||x\ncounter.controlRxMsgCount||x\ncounter.controlTxByteCount||x\ncounter.controlTxMsgCount||x\ncounter.dataRxByteCount||x\ncounter.dataRxMsgCount||x\ncounter.dataTxByteCount||x\ncounter.dataTxMsgCount||x\ncounter.discardedRxMsgCount||x\ncounter.discardedTxMsgCount||x\ncounter.loginRxMsgCount||x\ncounter.loginTxMsgCount||x\ncounter.msgSpoolRxMsgCount||x\ncounter.msgSpoolTxMsgCount||x\ncounter.tlsRxByteCount||x\ncounter.tlsTxByteCount||x\ndistributedCacheManagementEnabled||x\nmsgVpnName|x|\nrate.averageRxByteRate||x\nrate.averageRxMsgRate||x\nrate.averageTxByteRate||x\nrate.averageTxMsgRate||x\nrate.rxByteRate||x\nrate.rxMsgRate||x\nrate.tlsAverageRxByteRate||x\nrate.tlsAverageTxByteRate||x\nrate.tlsRxByteRate||x\nrate.tlsTxByteRate||x\nrate.txByteRate||x\nrate.txMsgRate||x\nrestTlsServerCertEnforceTrustedCommonNameEnabled||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpns",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Message VPN objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Message VPN objects.",
        "tags": [
          "all",
          "msgVpn"
        ]
      }
    },
    "/msgVpns/{msgVpnName}": {
      "get": {
        "description": "Get a Message VPN object.\n\nMessage VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nauthenticationOauthDefaultProviderName||x\nbridgingTlsServerCertEnforceTrustedCommonNameEnabled||x\nconfigSyncLocalKey||x\nconfigSyncLocalLastResult||x\nconfigSyncLocalRole||x\nconfigSyncLocalState||x\nconfigSyncLocalTimeInState||x\ncounter.controlRxByteCount||x\ncounter.controlRxMsgCount||x\ncounter.controlTxByteCount||x\ncounter.controlTxMsgCount||x\ncounter.dataRxByteCount||x\ncounter.dataRxMsgCount||x\ncounter.dataTxByteCount||x\ncounter.dataTxMsgCount||x\ncounter.discardedRxMsgCount||x\ncounter.discardedTxMsgCount||x\ncounter.loginRxMsgCount||x\ncounter.loginTxMsgCount||x\ncounter.msgSpoolRxMsgCount||x\ncounter.msgSpoolTxMsgCount||x\ncounter.tlsRxByteCount||x\ncounter.tlsTxByteCount||x\ndistributedCacheManagementEnabled||x\nmsgVpnName|x|\nrate.averageRxByteRate||x\nrate.averageRxMsgRate||x\nrate.averageTxByteRate||x\nrate.averageTxMsgRate||x\nrate.rxByteRate||x\nrate.rxMsgRate||x\nrate.tlsAverageRxByteRate||x\nrate.tlsAverageTxByteRate||x\nrate.tlsRxByteRate||x\nrate.tlsTxByteRate||x\nrate.txByteRate||x\nrate.txMsgRate||x\nrestTlsServerCertEnforceTrustedCommonNameEnabled||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpn",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Message VPN object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Message VPN object.",
        "tags": [
          "all",
          "msgVpn"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles": {
      "get": {
        "description": "Get a list of ACL Profile objects.\n\nAn ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnAclProfiles",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of ACL Profile objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfilesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of ACL Profile objects.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}": {
      "get": {
        "description": "Get an ACL Profile object.\n\nAn ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnAclProfile",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The ACL Profile object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an ACL Profile object.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions": {
      "get": {
        "description": "Get a list of Client Connect Exception objects.\n\nA Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nclientConnectExceptionAddress|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnAclProfileClientConnectExceptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Connect Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileClientConnectExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Connect Exception objects.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}": {
      "get": {
        "description": "Get a Client Connect Exception object.\n\nA Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nclientConnectExceptionAddress|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnAclProfileClientConnectException",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The IP address/netmask of the client connect exception in canonical CIDR form.",
            "in": "path",
            "name": "clientConnectExceptionAddress",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Connect Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileClientConnectExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Connect Exception object.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions": {
      "get": {
        "deprecated": true,
        "description": "Get a list of Publish Topic Exception objects.\n\nA Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\naclProfileName|x|x\nmsgVpnName|x|x\npublishExceptionTopic|x|x\ntopicSyntax|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been deprecated since 2.14. Replaced by publishTopicExceptions.",
        "operationId": "getMsgVpnAclProfilePublishExceptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Publish Topic Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfilePublishExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Publish Topic Exception objects.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}": {
      "get": {
        "deprecated": true,
        "description": "Get a Publish Topic Exception object.\n\nA Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\naclProfileName|x|x\nmsgVpnName|x|x\npublishExceptionTopic|x|x\ntopicSyntax|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been deprecated since 2.14. Replaced by publishTopicExceptions.",
        "operationId": "getMsgVpnAclProfilePublishException",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The syntax of the topic for the exception to the default action taken.",
            "in": "path",
            "name": "topicSyntax",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic for the exception to the default action taken. May include wildcard characters.",
            "in": "path",
            "name": "publishExceptionTopic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Publish Topic Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfilePublishExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Publish Topic Exception object.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions": {
      "get": {
        "description": "Get a list of Publish Topic Exception objects.\n\nA Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nmsgVpnName|x\npublishTopicException|x\npublishTopicExceptionSyntax|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnAclProfilePublishTopicExceptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Publish Topic Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfilePublishTopicExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Publish Topic Exception objects.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions/{publishTopicExceptionSyntax},{publishTopicException}": {
      "get": {
        "description": "Get a Publish Topic Exception object.\n\nA Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nmsgVpnName|x\npublishTopicException|x\npublishTopicExceptionSyntax|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnAclProfilePublishTopicException",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The syntax of the topic for the exception to the default action taken.",
            "in": "path",
            "name": "publishTopicExceptionSyntax",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic for the exception to the default action taken. May include wildcard characters.",
            "in": "path",
            "name": "publishTopicException",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Publish Topic Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfilePublishTopicExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Publish Topic Exception object.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions": {
      "get": {
        "deprecated": true,
        "description": "Get a list of Subscribe Topic Exception objects.\n\nA Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\naclProfileName|x|x\nmsgVpnName|x|x\nsubscribeExceptionTopic|x|x\ntopicSyntax|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been deprecated since 2.14. Replaced by subscribeTopicExceptions.",
        "operationId": "getMsgVpnAclProfileSubscribeExceptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Subscribe Topic Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileSubscribeExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Subscribe Topic Exception objects.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}": {
      "get": {
        "deprecated": true,
        "description": "Get a Subscribe Topic Exception object.\n\nA Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\naclProfileName|x|x\nmsgVpnName|x|x\nsubscribeExceptionTopic|x|x\ntopicSyntax|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been deprecated since 2.14. Replaced by subscribeTopicExceptions.",
        "operationId": "getMsgVpnAclProfileSubscribeException",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The syntax of the topic for the exception to the default action taken.",
            "in": "path",
            "name": "topicSyntax",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic for the exception to the default action taken. May include wildcard characters.",
            "in": "path",
            "name": "subscribeExceptionTopic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Subscribe Topic Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileSubscribeExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Subscribe Topic Exception object.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions": {
      "get": {
        "description": "Get a list of Subscribe Share Name Exception objects.\n\nA Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nmsgVpnName|x\nsubscribeShareNameException|x\nsubscribeShareNameExceptionSyntax|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnAclProfileSubscribeShareNameExceptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Subscribe Share Name Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileSubscribeShareNameExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Subscribe Share Name Exception objects.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions/{subscribeShareNameExceptionSyntax},{subscribeShareNameException}": {
      "get": {
        "description": "Get a Subscribe Share Name Exception object.\n\nA Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nmsgVpnName|x\nsubscribeShareNameException|x\nsubscribeShareNameExceptionSyntax|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnAclProfileSubscribeShareNameException",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The syntax of the subscribe share name for the exception to the default action taken.",
            "in": "path",
            "name": "subscribeShareNameExceptionSyntax",
            "required": true,
            "type": "string"
          },
          {
            "description": "The subscribe share name exception to the default action taken. May include wildcard characters.",
            "in": "path",
            "name": "subscribeShareNameException",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Subscribe Share Name Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileSubscribeShareNameExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Subscribe Share Name Exception object.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions": {
      "get": {
        "description": "Get a list of Subscribe Topic Exception objects.\n\nA Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nmsgVpnName|x\nsubscribeTopicException|x\nsubscribeTopicExceptionSyntax|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnAclProfileSubscribeTopicExceptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Subscribe Topic Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileSubscribeTopicExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Subscribe Topic Exception objects.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions/{subscribeTopicExceptionSyntax},{subscribeTopicException}": {
      "get": {
        "description": "Get a Subscribe Topic Exception object.\n\nA Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.\n\n\nAttribute|Identifying\n:---|:---:\naclProfileName|x\nmsgVpnName|x\nsubscribeTopicException|x\nsubscribeTopicExceptionSyntax|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnAclProfileSubscribeTopicException",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ACL Profile.",
            "in": "path",
            "name": "aclProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The syntax of the topic for the exception to the default action taken.",
            "in": "path",
            "name": "subscribeTopicExceptionSyntax",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic for the exception to the default action taken. May include wildcard characters.",
            "in": "path",
            "name": "subscribeTopicException",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Subscribe Topic Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAclProfileSubscribeTopicExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Subscribe Topic Exception object.",
        "tags": [
          "all",
          "msgVpn",
          "aclProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationKerberosRealms": {
      "get": {
        "description": "Get a list of Realm objects.\n\nKerberos Realm.\n\n\nAttribute|Identifying\n:---|:---:\nkerberosRealmName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.40.",
        "operationId": "getMsgVpnAuthenticationKerberosRealms",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Realm objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationKerberosRealmsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Realm objects.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationKerberosRealm"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationKerberosRealms/{kerberosRealmName}": {
      "get": {
        "description": "Get a Realm object.\n\nKerberos Realm.\n\n\nAttribute|Identifying\n:---|:---:\nkerberosRealmName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.40.",
        "operationId": "getMsgVpnAuthenticationKerberosRealm",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Realm Name. Must start with \"@\", typically all uppercase.",
            "in": "path",
            "name": "kerberosRealmName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Realm object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationKerberosRealmResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Realm object.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationKerberosRealm"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationOauthProfiles": {
      "get": {
        "description": "Get a list of OAuth Profile objects.\n\nOAuth profiles specify how to securely authenticate to an OAuth provider.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.25.",
        "operationId": "getMsgVpnAuthenticationOauthProfiles",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of OAuth Profile objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationOauthProfilesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of OAuth Profile objects.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationOauthProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}": {
      "get": {
        "description": "Get an OAuth Profile object.\n\nOAuth profiles specify how to securely authenticate to an OAuth provider.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.25.",
        "operationId": "getMsgVpnAuthenticationOauthProfile",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The OAuth Profile object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an OAuth Profile object.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationOauthProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}/clientRequiredClaims": {
      "get": {
        "description": "Get a list of Required Claim objects.\n\nAdditional claims to be verified in the ID token.\n\n\nAttribute|Identifying\n:---|:---:\nclientRequiredClaimName|x\nmsgVpnName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.25.",
        "operationId": "getMsgVpnAuthenticationOauthProfileClientRequiredClaims",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Required Claim objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileClientRequiredClaimsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Required Claim objects.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationOauthProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}/clientRequiredClaims/{clientRequiredClaimName}": {
      "get": {
        "description": "Get a Required Claim object.\n\nAdditional claims to be verified in the ID token.\n\n\nAttribute|Identifying\n:---|:---:\nclientRequiredClaimName|x\nmsgVpnName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.25.",
        "operationId": "getMsgVpnAuthenticationOauthProfileClientRequiredClaim",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ID token claim to verify.",
            "in": "path",
            "name": "clientRequiredClaimName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Required Claim object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Required Claim object.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationOauthProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}/resourceServerRequiredClaims": {
      "get": {
        "description": "Get a list of Required Claim objects.\n\nAdditional claims to be verified in the access token.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\noauthProfileName|x\nresourceServerRequiredClaimName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.25.",
        "operationId": "getMsgVpnAuthenticationOauthProfileResourceServerRequiredClaims",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Required Claim objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Required Claim objects.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationOauthProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}/resourceServerRequiredClaims/{resourceServerRequiredClaimName}": {
      "get": {
        "description": "Get a Required Claim object.\n\nAdditional claims to be verified in the access token.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\noauthProfileName|x\nresourceServerRequiredClaimName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.25.",
        "operationId": "getMsgVpnAuthenticationOauthProfileResourceServerRequiredClaim",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the access token claim to verify.",
            "in": "path",
            "name": "resourceServerRequiredClaimName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Required Claim object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Required Claim object.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationOauthProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationOauthProviders": {
      "get": {
        "deprecated": true,
        "description": "Get a list of OAuth Provider objects.\n\nOAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\naudienceClaimName||x\naudienceClaimSource||x\naudienceClaimValue||x\naudienceValidationEnabled||x\nauthenticationSuccessCount||x\nauthorizationGroupClaimName||x\nauthorizationGroupClaimSource||x\nauthorizationGroupEnabled||x\ndisconnectOnTokenExpirationEnabled||x\nenabled||x\njwksLastRefreshFailureReason||x\njwksLastRefreshFailureTime||x\njwksLastRefreshTime||x\njwksNextScheduledRefreshTime||x\njwksRefreshFailureCount||x\njwksRefreshInterval||x\njwksUri||x\nloginFailureIncorrectAudienceValueCount||x\nloginFailureInvalidAudienceValueCount||x\nloginFailureInvalidAuthorizationGroupValueCount||x\nloginFailureInvalidJwtSignatureCount||x\nloginFailureInvalidUsernameValueCount||x\nloginFailureMismatchedUsernameCount||x\nloginFailureMissingAudienceCount||x\nloginFailureMissingJwkCount||x\nloginFailureMissingOrInvalidTokenCount||x\nloginFailureMissingUsernameCount||x\nloginFailureTokenExpiredCount||x\nloginFailureTokenIntrospectionErroredCount||x\nloginFailureTokenIntrospectionFailureCount||x\nloginFailureTokenIntrospectionHttpsErrorCount||x\nloginFailureTokenIntrospectionInvalidCount||x\nloginFailureTokenIntrospectionTimeoutCount||x\nloginFailureTokenNotValidYetCount||x\nloginFailureUnsupportedAlgCount||x\nmissingAuthorizationGroupCount||x\nmsgVpnName|x|x\noauthProviderName|x|x\ntokenIgnoreTimeLimitsEnabled||x\ntokenIntrospectionAverageTime||x\ntokenIntrospectionLastFailureReason||x\ntokenIntrospectionLastFailureTime||x\ntokenIntrospectionParameterName||x\ntokenIntrospectionSuccessCount||x\ntokenIntrospectionTimeout||x\ntokenIntrospectionUri||x\ntokenIntrospectionUsername||x\nusernameClaimName||x\nusernameClaimSource||x\nusernameValidateEnabled||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been deprecated since 2.25. Replaced by authenticationOauthProfiles.",
        "operationId": "getMsgVpnAuthenticationOauthProviders",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of OAuth Provider objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationOauthProvidersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of OAuth Provider objects.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationOauthProvider"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authenticationOauthProviders/{oauthProviderName}": {
      "get": {
        "deprecated": true,
        "description": "Get an OAuth Provider object.\n\nOAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\naudienceClaimName||x\naudienceClaimSource||x\naudienceClaimValue||x\naudienceValidationEnabled||x\nauthenticationSuccessCount||x\nauthorizationGroupClaimName||x\nauthorizationGroupClaimSource||x\nauthorizationGroupEnabled||x\ndisconnectOnTokenExpirationEnabled||x\nenabled||x\njwksLastRefreshFailureReason||x\njwksLastRefreshFailureTime||x\njwksLastRefreshTime||x\njwksNextScheduledRefreshTime||x\njwksRefreshFailureCount||x\njwksRefreshInterval||x\njwksUri||x\nloginFailureIncorrectAudienceValueCount||x\nloginFailureInvalidAudienceValueCount||x\nloginFailureInvalidAuthorizationGroupValueCount||x\nloginFailureInvalidJwtSignatureCount||x\nloginFailureInvalidUsernameValueCount||x\nloginFailureMismatchedUsernameCount||x\nloginFailureMissingAudienceCount||x\nloginFailureMissingJwkCount||x\nloginFailureMissingOrInvalidTokenCount||x\nloginFailureMissingUsernameCount||x\nloginFailureTokenExpiredCount||x\nloginFailureTokenIntrospectionErroredCount||x\nloginFailureTokenIntrospectionFailureCount||x\nloginFailureTokenIntrospectionHttpsErrorCount||x\nloginFailureTokenIntrospectionInvalidCount||x\nloginFailureTokenIntrospectionTimeoutCount||x\nloginFailureTokenNotValidYetCount||x\nloginFailureUnsupportedAlgCount||x\nmissingAuthorizationGroupCount||x\nmsgVpnName|x|x\noauthProviderName|x|x\ntokenIgnoreTimeLimitsEnabled||x\ntokenIntrospectionAverageTime||x\ntokenIntrospectionLastFailureReason||x\ntokenIntrospectionLastFailureTime||x\ntokenIntrospectionParameterName||x\ntokenIntrospectionSuccessCount||x\ntokenIntrospectionTimeout||x\ntokenIntrospectionUri||x\ntokenIntrospectionUsername||x\nusernameClaimName||x\nusernameClaimSource||x\nusernameValidateEnabled||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been deprecated since 2.25. Replaced by authenticationOauthProfiles.",
        "operationId": "getMsgVpnAuthenticationOauthProvider",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the OAuth Provider.",
            "in": "path",
            "name": "oauthProviderName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The OAuth Provider object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthenticationOauthProviderResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an OAuth Provider object.",
        "tags": [
          "all",
          "msgVpn",
          "authenticationOauthProvider"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authorizationGroups": {
      "get": {
        "description": "Get a list of Authorization Group objects.\n\nTo use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.\n\n\nAttribute|Identifying\n:---|:---:\nauthorizationGroupName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnAuthorizationGroups",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Authorization Group objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthorizationGroupsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Authorization Group objects.",
        "tags": [
          "all",
          "msgVpn",
          "authorizationGroup"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}": {
      "get": {
        "description": "Get an Authorization Group object.\n\nTo use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.\n\n\nAttribute|Identifying\n:---|:---:\nauthorizationGroupName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnAuthorizationGroup",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\\#,lab,com'.",
            "in": "path",
            "name": "authorizationGroupName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Authorization Group object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnAuthorizationGroupResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an Authorization Group object.",
        "tags": [
          "all",
          "msgVpn",
          "authorizationGroup"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges": {
      "get": {
        "description": "Get a list of Bridge objects.\n\nBridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nbridgeName|x|\nbridgeVirtualRouter|x|\ncounter.controlRxByteCount||x\ncounter.controlRxMsgCount||x\ncounter.controlTxByteCount||x\ncounter.controlTxMsgCount||x\ncounter.dataRxByteCount||x\ncounter.dataRxMsgCount||x\ncounter.dataTxByteCount||x\ncounter.dataTxMsgCount||x\ncounter.discardedRxMsgCount||x\ncounter.discardedTxMsgCount||x\ncounter.loginRxMsgCount||x\ncounter.loginTxMsgCount||x\ncounter.msgSpoolRxMsgCount||x\ncounter.rxByteCount||x\ncounter.rxMsgCount||x\ncounter.txByteCount||x\ncounter.txMsgCount||x\nmsgVpnName|x|\nrate.averageRxByteRate||x\nrate.averageRxMsgRate||x\nrate.averageTxByteRate||x\nrate.averageTxMsgRate||x\nrate.rxByteRate||x\nrate.rxMsgRate||x\nrate.txByteRate||x\nrate.txMsgRate||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnBridges",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Bridge objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Bridge objects.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}": {
      "get": {
        "description": "Get a Bridge object.\n\nBridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nbridgeName|x|\nbridgeVirtualRouter|x|\ncounter.controlRxByteCount||x\ncounter.controlRxMsgCount||x\ncounter.controlTxByteCount||x\ncounter.controlTxMsgCount||x\ncounter.dataRxByteCount||x\ncounter.dataRxMsgCount||x\ncounter.dataTxByteCount||x\ncounter.dataTxMsgCount||x\ncounter.discardedRxMsgCount||x\ncounter.discardedTxMsgCount||x\ncounter.loginRxMsgCount||x\ncounter.loginTxMsgCount||x\ncounter.msgSpoolRxMsgCount||x\ncounter.rxByteCount||x\ncounter.rxMsgCount||x\ncounter.txByteCount||x\ncounter.txMsgCount||x\nmsgVpnName|x|\nrate.averageRxByteRate||x\nrate.averageRxMsgRate||x\nrate.averageTxByteRate||x\nrate.averageTxMsgRate||x\nrate.rxByteRate||x\nrate.rxMsgRate||x\nrate.txByteRate||x\nrate.txMsgRate||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnBridge",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Bridge object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Bridge object.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/localSubscriptions": {
      "get": {
        "description": "Get a list of Bridge Local Subscriptions objects.\n\nA Local Subscription is a topic subscription used by a remote Message VPN Bridge to attract messages from this broker.\n\n\nAttribute|Identifying\n:---|:---:\nbridgeName|x\nbridgeVirtualRouter|x\nlocalSubscriptionTopic|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnBridgeLocalSubscriptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Bridge Local Subscriptions objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeLocalSubscriptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Bridge Local Subscriptions objects.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/localSubscriptions/{localSubscriptionTopic}": {
      "get": {
        "description": "Get a Bridge Local Subscriptions object.\n\nA Local Subscription is a topic subscription used by a remote Message VPN Bridge to attract messages from this broker.\n\n\nAttribute|Identifying\n:---|:---:\nbridgeName|x\nbridgeVirtualRouter|x\nlocalSubscriptionTopic|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnBridgeLocalSubscription",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic of the Bridge local subscription.",
            "in": "path",
            "name": "localSubscriptionTopic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Bridge Local Subscriptions object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeLocalSubscriptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Bridge Local Subscriptions object.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns": {
      "get": {
        "description": "Get a list of Remote Message VPN objects.\n\nThe Remote Message VPN is the Message VPN that the Bridge connects to.\n\n\nAttribute|Identifying\n:---|:---:\nbridgeName|x\nbridgeVirtualRouter|x\nmsgVpnName|x\nremoteMsgVpnInterface|x\nremoteMsgVpnLocation|x\nremoteMsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnBridgeRemoteMsgVpns",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Remote Message VPN objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeRemoteMsgVpnsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Remote Message VPN objects.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}": {
      "get": {
        "description": "Get a Remote Message VPN object.\n\nThe Remote Message VPN is the Message VPN that the Bridge connects to.\n\n\nAttribute|Identifying\n:---|:---:\nbridgeName|x\nbridgeVirtualRouter|x\nmsgVpnName|x\nremoteMsgVpnInterface|x\nremoteMsgVpnLocation|x\nremoteMsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnBridgeRemoteMsgVpn",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the remote Message VPN.",
            "in": "path",
            "name": "remoteMsgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with \"v:\").",
            "in": "path",
            "name": "remoteMsgVpnLocation",
            "required": true,
            "type": "string"
          },
          {
            "description": "The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.",
            "in": "path",
            "name": "remoteMsgVpnInterface",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Remote Message VPN object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeRemoteMsgVpnResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Remote Message VPN object.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions": {
      "get": {
        "description": "Get a list of Remote Subscription objects.\n\nA Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.\n\n\nAttribute|Identifying\n:---|:---:\nbridgeName|x\nbridgeVirtualRouter|x\nmsgVpnName|x\nremoteSubscriptionTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnBridgeRemoteSubscriptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Remote Subscription objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeRemoteSubscriptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Remote Subscription objects.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}": {
      "get": {
        "description": "Get a Remote Subscription object.\n\nA Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.\n\n\nAttribute|Identifying\n:---|:---:\nbridgeName|x\nbridgeVirtualRouter|x\nmsgVpnName|x\nremoteSubscriptionTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnBridgeRemoteSubscription",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic of the Bridge remote subscription.",
            "in": "path",
            "name": "remoteSubscriptionTopic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Remote Subscription object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeRemoteSubscriptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Remote Subscription object.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames": {
      "get": {
        "deprecated": true,
        "description": "Get a list of Trusted Common Name objects.\n\nThe Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nbridgeName|x|x\nbridgeVirtualRouter|x|x\nmsgVpnName|x|x\ntlsTrustedCommonName|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
        "operationId": "getMsgVpnBridgeTlsTrustedCommonNames",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Trusted Common Name objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeTlsTrustedCommonNamesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Trusted Common Name objects.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}": {
      "get": {
        "deprecated": true,
        "description": "Get a Trusted Common Name object.\n\nThe Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nbridgeName|x|x\nbridgeVirtualRouter|x|x\nmsgVpnName|x|x\ntlsTrustedCommonName|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.",
        "operationId": "getMsgVpnBridgeTlsTrustedCommonName",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Bridge.",
            "in": "path",
            "name": "bridgeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the Bridge.",
            "in": "path",
            "name": "bridgeVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "description": "The expected trusted common name of the remote certificate.",
            "in": "path",
            "name": "tlsTrustedCommonName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Trusted Common Name object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnBridgeTlsTrustedCommonNameResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Trusted Common Name object.",
        "tags": [
          "all",
          "msgVpn",
          "bridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/certMatchingRules": {
      "get": {
        "description": "Get a list of Certificate Matching Rule objects.\n\nA Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nruleName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.27.",
        "operationId": "getMsgVpnCertMatchingRules",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Certificate Matching Rule objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnCertMatchingRulesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Certificate Matching Rule objects.",
        "tags": [
          "all",
          "msgVpn",
          "certMatchingRule"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/certMatchingRules/{ruleName}": {
      "get": {
        "description": "Get a Certificate Matching Rule object.\n\nA Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nruleName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.27.",
        "operationId": "getMsgVpnCertMatchingRule",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Certificate Matching Rule object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnCertMatchingRuleResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Certificate Matching Rule object.",
        "tags": [
          "all",
          "msgVpn",
          "certMatchingRule"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/certMatchingRules/{ruleName}/attributeFilters": {
      "get": {
        "description": "Get a list of Certificate Matching Rule Attribute Filter objects.\n\nA Cert Matching Rule Attribute Filter compares a username attribute to a string.\n\n\nAttribute|Identifying\n:---|:---:\nfilterName|x\nmsgVpnName|x\nruleName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.28.",
        "operationId": "getMsgVpnCertMatchingRuleAttributeFilters",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Certificate Matching Rule Attribute Filter objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnCertMatchingRuleAttributeFiltersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Certificate Matching Rule Attribute Filter objects.",
        "tags": [
          "all",
          "msgVpn",
          "certMatchingRule"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/certMatchingRules/{ruleName}/attributeFilters/{filterName}": {
      "get": {
        "description": "Get a Certificate Matching Rule Attribute Filter object.\n\nA Cert Matching Rule Attribute Filter compares a username attribute to a string.\n\n\nAttribute|Identifying\n:---|:---:\nfilterName|x\nmsgVpnName|x\nruleName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.28.",
        "operationId": "getMsgVpnCertMatchingRuleAttributeFilter",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the filter.",
            "in": "path",
            "name": "filterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Certificate Matching Rule Attribute Filter object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnCertMatchingRuleAttributeFilterResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Certificate Matching Rule Attribute Filter object.",
        "tags": [
          "all",
          "msgVpn",
          "certMatchingRule"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/certMatchingRules/{ruleName}/conditions": {
      "get": {
        "description": "Get a list of Certificate Matching Rule Condition objects.\n\nA Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nruleName|x\nsource|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.27.",
        "operationId": "getMsgVpnCertMatchingRuleConditions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Certificate Matching Rule Condition objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnCertMatchingRuleConditionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Certificate Matching Rule Condition objects.",
        "tags": [
          "all",
          "msgVpn",
          "certMatchingRule"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/certMatchingRules/{ruleName}/conditions/{source}": {
      "get": {
        "description": "Get a Certificate Matching Rule Condition object.\n\nA Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nruleName|x\nsource|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.27.",
        "operationId": "getMsgVpnCertMatchingRuleCondition",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Certificate field to be compared with the Attribute.",
            "in": "path",
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Certificate Matching Rule Condition object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnCertMatchingRuleConditionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Certificate Matching Rule Condition object.",
        "tags": [
          "all",
          "msgVpn",
          "certMatchingRule"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clientProfiles": {
      "get": {
        "description": "Get a list of Client Profile objects.\n\nClient Profiles are used to assign common configuration properties to clients that have been successfully authorized.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nallowCutThroughForwardingEnabled||x\napiQueueManagementCopyFromOnCreateName||x\napiTopicEndpointManagementCopyFromOnCreateName||x\nclientProfileName|x|\nmsgVpnName|x|\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnClientProfiles",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Profile objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientProfilesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Profile objects.",
        "tags": [
          "all",
          "msgVpn",
          "clientProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}": {
      "get": {
        "description": "Get a Client Profile object.\n\nClient Profiles are used to assign common configuration properties to clients that have been successfully authorized.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nallowCutThroughForwardingEnabled||x\napiQueueManagementCopyFromOnCreateName||x\napiTopicEndpointManagementCopyFromOnCreateName||x\nclientProfileName|x|\nmsgVpnName|x|\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnClientProfile",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client Profile.",
            "in": "path",
            "name": "clientProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Profile object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientProfileResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Profile object.",
        "tags": [
          "all",
          "msgVpn",
          "clientProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clientUsernames": {
      "get": {
        "description": "Get a list of Client Username objects.\n\nA client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.\n\n\nAttribute|Identifying\n:---|:---:\nclientUsername|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnClientUsernames",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Username objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientUsernamesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Username objects.",
        "tags": [
          "all",
          "msgVpn",
          "clientUsername"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clientUsernames/{clientUsername}": {
      "get": {
        "description": "Get a Client Username object.\n\nA client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.\n\n\nAttribute|Identifying\n:---|:---:\nclientUsername|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnClientUsername",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client Username.",
            "in": "path",
            "name": "clientUsername",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Username object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientUsernameResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Username object.",
        "tags": [
          "all",
          "msgVpn",
          "clientUsername"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clientUsernames/{clientUsername}/attributes": {
      "get": {
        "description": "Get a list of Client Username Attribute objects.\n\nA ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.\n\n\nAttribute|Identifying\n:---|:---:\nattributeName|x\nattributeValue|x\nclientUsername|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.27.",
        "operationId": "getMsgVpnClientUsernameAttributes",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client Username.",
            "in": "path",
            "name": "clientUsername",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Username Attribute objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientUsernameAttributesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Username Attribute objects.",
        "tags": [
          "all",
          "msgVpn",
          "clientUsername"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clientUsernames/{clientUsername}/attributes/{attributeName},{attributeValue}": {
      "get": {
        "description": "Get a Client Username Attribute object.\n\nA ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.\n\n\nAttribute|Identifying\n:---|:---:\nattributeName|x\nattributeValue|x\nclientUsername|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.27.",
        "operationId": "getMsgVpnClientUsernameAttribute",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client Username.",
            "in": "path",
            "name": "clientUsername",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Attribute.",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The value of the Attribute.",
            "in": "path",
            "name": "attributeValue",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Username Attribute object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientUsernameAttributeResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Username Attribute object.",
        "tags": [
          "all",
          "msgVpn",
          "clientUsername"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients": {
      "get": {
        "description": "Get a list of Client objects.\n\nApplications or devices that connect to message brokers to send and/or receive messages are represented as Clients.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClients",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client objects.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}": {
      "get": {
        "description": "Get a Client object.\n\nApplications or devices that connect to message brokers to send and/or receive messages are represented as Clients.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClient",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client object.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/connections": {
      "get": {
        "description": "Get a list of Client Connection objects.\n\nA Client Connection represents the Transmission Control Protocol (TCP) connection the Client uses to communicate with the message broker.\n\n\nAttribute|Identifying\n:---|:---:\nclientAddress|x\nclientName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientConnections",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Connection objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientConnectionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Connection objects.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/connections/{clientAddress}": {
      "get": {
        "description": "Get a Client Connection object.\n\nA Client Connection represents the Transmission Control Protocol (TCP) connection the Client uses to communicate with the message broker.\n\n\nAttribute|Identifying\n:---|:---:\nclientAddress|x\nclientName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientConnection",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The IP address and TCP port on the Client side of the Client Connection.",
            "in": "path",
            "name": "clientAddress",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Connection object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientConnectionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Connection object.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/rxFlows": {
      "get": {
        "description": "Get a list of Client Receive Flow objects.\n\nClient Receive Flows are used by clients to publish Guaranteed messages to a message broker.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nflowId|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientRxFlows",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Receive Flow objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientRxFlowsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Receive Flow objects.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/rxFlows/{flowId}": {
      "get": {
        "description": "Get a Client Receive Flow object.\n\nClient Receive Flows are used by clients to publish Guaranteed messages to a message broker.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nflowId|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientRxFlow",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the flow.",
            "in": "path",
            "name": "flowId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Receive Flow object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientRxFlowResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Receive Flow object.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/subscriptions": {
      "get": {
        "description": "Get a list of Client Subscription objects.\n\nOnce clients are authenticated on the message broker they can add and remove Client Subscriptions for Direct messages published to the Message VPN to which they have connected.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nmsgVpnName|x\nsubscriptionTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientSubscriptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Subscription objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientSubscriptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Subscription objects.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/subscriptions/{subscriptionTopic}": {
      "get": {
        "description": "Get a Client Subscription object.\n\nOnce clients are authenticated on the message broker they can add and remove Client Subscriptions for Direct messages published to the Message VPN to which they have connected.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nmsgVpnName|x\nsubscriptionTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientSubscription",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic of the Subscription.",
            "in": "path",
            "name": "subscriptionTopic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Subscription object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientSubscriptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Subscription object.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/transactedSessions": {
      "get": {
        "description": "Get a list of Client Transacted Session objects.\n\nTransacted Sessions enable clients to group multiple message send and/or receive operations together in single, atomic units known as local transactions.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nmsgVpnName|x\nsessionName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientTransactedSessions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Transacted Session objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientTransactedSessionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Transacted Session objects.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/transactedSessions/{sessionName}": {
      "get": {
        "description": "Get a Client Transacted Session object.\n\nTransacted Sessions enable clients to group multiple message send and/or receive operations together in single, atomic units known as local transactions.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nmsgVpnName|x\nsessionName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientTransactedSession",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Transacted Session.",
            "in": "path",
            "name": "sessionName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Transacted Session object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientTransactedSessionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Transacted Session object.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/txFlows": {
      "get": {
        "description": "Get a list of Client Transmit Flow objects.\n\nClient Transmit Flows are used by clients to consume Guaranteed messages from a message broker.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nflowId|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientTxFlows",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Client Transmit Flow objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientTxFlowsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Client Transmit Flow objects.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/clients/{clientName}/txFlows/{flowId}": {
      "get": {
        "description": "Get a Client Transmit Flow object.\n\nClient Transmit Flows are used by clients to consume Guaranteed messages from a message broker.\n\n\nAttribute|Identifying\n:---|:---:\nclientName|x\nflowId|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnClientTxFlow",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Client.",
            "in": "path",
            "name": "clientName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the flow.",
            "in": "path",
            "name": "flowId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Client Transmit Flow object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnClientTxFlowResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Client Transmit Flow object.",
        "tags": [
          "all",
          "msgVpn",
          "client"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/configSyncRemoteNodes": {
      "get": {
        "deprecated": true,
        "description": "Get a list of Config Sync Remote Node objects.\n\nA Config Sync Remote Node object contains information about the status of the table for this Message VPN with respect to a remote node.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nlastMsgRxTime||x\nmsgVpnName|x|x\nremoteNodeName|x|x\nrole||x\nstale||x\nstate||x\ntimeInState||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been deprecated since 2.22. This attribute has been deprecated.",
        "operationId": "getMsgVpnConfigSyncRemoteNodes",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Config Sync Remote Node objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnConfigSyncRemoteNodesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Config Sync Remote Node objects.",
        "tags": [
          "all",
          "msgVpn",
          "configSyncRemoteNode"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/configSyncRemoteNodes/{remoteNodeName}": {
      "get": {
        "deprecated": true,
        "description": "Get a Config Sync Remote Node object.\n\nA Config Sync Remote Node object contains information about the status of the table for this Message VPN with respect to a remote node.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nlastMsgRxTime||x\nmsgVpnName|x|x\nremoteNodeName|x|x\nrole||x\nstale||x\nstate||x\ntimeInState||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been deprecated since 2.22. This attribute has been deprecated.",
        "operationId": "getMsgVpnConfigSyncRemoteNode",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Config Sync Remote Node.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Config Sync Remote Node object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnConfigSyncRemoteNodeResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Config Sync Remote Node object.",
        "tags": [
          "all",
          "msgVpn",
          "configSyncRemoteNode"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches": {
      "get": {
        "description": "Get a list of Distributed Cache objects.\n\nA Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCaches",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Distributed Cache objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCachesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Distributed Cache objects.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}": {
      "get": {
        "description": "Get a Distributed Cache object.\n\nA Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCache",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Distributed Cache object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Distributed Cache object.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters": {
      "get": {
        "description": "Get a list of Cache Cluster objects.\n\nA Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusters",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Cache Cluster objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClustersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Cache Cluster objects.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}": {
      "get": {
        "description": "Get a Cache Cluster object.\n\nA Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheCluster",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Cache Cluster object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Cache Cluster object.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters": {
      "get": {
        "description": "Get a list of Home Cache Cluster objects.\n\nA Home Cache Cluster is a Cache Cluster that is the \"definitive\" Cache Cluster for a given topic in the context of the Global Caching feature.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nhomeClusterName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterGlobalCachingHomeClusters",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Home Cache Cluster objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Home Cache Cluster objects.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}": {
      "get": {
        "description": "Get a Home Cache Cluster object.\n\nA Home Cache Cluster is a Cache Cluster that is the \"definitive\" Cache Cluster for a given topic in the context of the Global Caching feature.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nhomeClusterName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterGlobalCachingHomeCluster",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the remote Home Cache Cluster.",
            "in": "path",
            "name": "homeClusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Home Cache Cluster object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Home Cache Cluster object.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes": {
      "get": {
        "description": "Get a list of Topic Prefix objects.\n\nA Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nhomeClusterName|x\nmsgVpnName|x\ntopicPrefix|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixes",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the remote Home Cache Cluster.",
            "in": "path",
            "name": "homeClusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic Prefix objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic Prefix objects.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes/{topicPrefix}": {
      "get": {
        "description": "Get a Topic Prefix object.\n\nA Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nhomeClusterName|x\nmsgVpnName|x\ntopicPrefix|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the remote Home Cache Cluster.",
            "in": "path",
            "name": "homeClusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "A topic prefix for global topics available from the remote Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.",
            "in": "path",
            "name": "topicPrefix",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic Prefix object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic Prefix object.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances": {
      "get": {
        "description": "Get a list of Cache Instance objects.\n\nA Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncacheName|x|\nclusterName|x|\ncounter.msgCount||x\ncounter.msgPeakCount||x\ncounter.requestQueueDepthCount||x\ncounter.requestQueueDepthPeakCount||x\ncounter.topicCount||x\ncounter.topicPeakCount||x\ninstanceName|x|\nmsgVpnName|x|\nrate.averageDataRxBytePeakRate||x\nrate.averageDataRxByteRate||x\nrate.averageDataRxMsgPeakRate||x\nrate.averageDataRxMsgRate||x\nrate.averageDataTxMsgPeakRate||x\nrate.averageDataTxMsgRate||x\nrate.averageRequestRxPeakRate||x\nrate.averageRequestRxRate||x\nrate.dataRxBytePeakRate||x\nrate.dataRxByteRate||x\nrate.dataRxMsgPeakRate||x\nrate.dataRxMsgRate||x\nrate.dataTxMsgPeakRate||x\nrate.dataTxMsgRate||x\nrate.requestRxPeakRate||x\nrate.requestRxRate||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterInstances",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Cache Instance objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstancesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Cache Instance objects.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}": {
      "get": {
        "description": "Get a Cache Instance object.\n\nA Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncacheName|x|\nclusterName|x|\ncounter.msgCount||x\ncounter.msgPeakCount||x\ncounter.requestQueueDepthCount||x\ncounter.requestQueueDepthPeakCount||x\ncounter.topicCount||x\ncounter.topicPeakCount||x\ninstanceName|x|\nmsgVpnName|x|\nrate.averageDataRxBytePeakRate||x\nrate.averageDataRxByteRate||x\nrate.averageDataRxMsgPeakRate||x\nrate.averageDataRxMsgRate||x\nrate.averageDataTxMsgPeakRate||x\nrate.averageDataTxMsgRate||x\nrate.averageRequestRxPeakRate||x\nrate.averageRequestRxRate||x\nrate.dataRxBytePeakRate||x\nrate.dataRxByteRate||x\nrate.dataRxMsgPeakRate||x\nrate.dataRxMsgRate||x\nrate.dataTxMsgPeakRate||x\nrate.dataTxMsgRate||x\nrate.requestRxPeakRate||x\nrate.requestRxRate||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterInstance",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Instance.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Cache Instance object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Cache Instance object.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteGlobalCachingHomeClusters": {
      "get": {
        "description": "Get a list of Remote Home Cache Cluster objects.\n\nA Remote Home Cache Cluster is a Home Cache Cluster that the Cache Instance is communicating with in the context of the Global Caching feature.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nhomeClusterName|x\ninstanceName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusters",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Instance.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Remote Home Cache Cluster objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClustersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Remote Home Cache Cluster objects.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteGlobalCachingHomeClusters/{homeClusterName}": {
      "get": {
        "description": "Get a Remote Home Cache Cluster object.\n\nA Remote Home Cache Cluster is a Home Cache Cluster that the Cache Instance is communicating with in the context of the Global Caching feature.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nhomeClusterName|x\ninstanceName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Instance.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the remote Home Cache Cluster.",
            "in": "path",
            "name": "homeClusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Remote Home Cache Cluster object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Remote Home Cache Cluster object.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteTopics": {
      "get": {
        "description": "Get a list of Remote Topic objects.\n\nA Remote Topic is a topic for which the Cache Instance has cached messages.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\ninstanceName|x\nmsgVpnName|x\ntopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterInstanceRemoteTopics",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Instance.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Remote Topic objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Remote Topic objects.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteTopics/{topic}": {
      "get": {
        "description": "Get a Remote Topic object.\n\nA Remote Topic is a topic for which the Cache Instance has cached messages.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\ninstanceName|x\nmsgVpnName|x\ntopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterInstanceRemoteTopic",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Instance.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The value of the remote Topic.",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Remote Topic object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Remote Topic object.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics": {
      "get": {
        "description": "Get a list of Topic objects.\n\nThe Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nmsgVpnName|x\ntopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterTopics",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterTopicsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic objects.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics/{topic}": {
      "get": {
        "description": "Get a Topic object.\n\nThe Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nclusterName|x\nmsgVpnName|x\ntopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDistributedCacheClusterTopic",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Distributed Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Cache Cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The value of the Topic in the form a/b/c.",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDistributedCacheClusterTopicResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic object.",
        "tags": [
          "all",
          "msgVpn",
          "distributedCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/dmrBridges": {
      "get": {
        "description": "Get a list of DMR Bridge objects.\n\nA DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDmrBridges",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of DMR Bridge objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDmrBridgesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of DMR Bridge objects.",
        "tags": [
          "all",
          "msgVpn",
          "dmrBridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/dmrBridges/{remoteNodeName}": {
      "get": {
        "description": "Get a DMR Bridge object.\n\nA DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nremoteNodeName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnDmrBridge",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the node at the remote end of the DMR Bridge.",
            "in": "path",
            "name": "remoteNodeName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The DMR Bridge object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnDmrBridgeResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a DMR Bridge object.",
        "tags": [
          "all",
          "msgVpn",
          "dmrBridge"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/jndiConnectionFactories": {
      "get": {
        "description": "Get a list of JNDI Connection Factory objects.\n\nThe message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.\n\n\nAttribute|Identifying\n:---|:---:\nconnectionFactoryName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnJndiConnectionFactories",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of JNDI Connection Factory objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnJndiConnectionFactoriesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of JNDI Connection Factory objects.",
        "tags": [
          "all",
          "msgVpn",
          "jndi"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}": {
      "get": {
        "description": "Get a JNDI Connection Factory object.\n\nThe message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.\n\n\nAttribute|Identifying\n:---|:---:\nconnectionFactoryName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnJndiConnectionFactory",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the JMS Connection Factory.",
            "in": "path",
            "name": "connectionFactoryName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The JNDI Connection Factory object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnJndiConnectionFactoryResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a JNDI Connection Factory object.",
        "tags": [
          "all",
          "msgVpn",
          "jndi"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/jndiQueues": {
      "get": {
        "description": "Get a list of JNDI Queue objects.\n\nThe message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nqueueName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnJndiQueues",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of JNDI Queue objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnJndiQueuesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of JNDI Queue objects.",
        "tags": [
          "all",
          "msgVpn",
          "jndi"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/jndiQueues/{queueName}": {
      "get": {
        "description": "Get a JNDI Queue object.\n\nThe message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nqueueName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnJndiQueue",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The JNDI name of the JMS Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The JNDI Queue object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnJndiQueueResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a JNDI Queue object.",
        "tags": [
          "all",
          "msgVpn",
          "jndi"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/jndiTopics": {
      "get": {
        "description": "Get a list of JNDI Topic objects.\n\nThe message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\ntopicName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnJndiTopics",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of JNDI Topic objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnJndiTopicsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of JNDI Topic objects.",
        "tags": [
          "all",
          "msgVpn",
          "jndi"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/jndiTopics/{topicName}": {
      "get": {
        "description": "Get a JNDI Topic object.\n\nThe message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\ntopicName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnJndiTopic",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The JNDI name of the JMS Topic.",
            "in": "path",
            "name": "topicName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The JNDI Topic object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnJndiTopicResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a JNDI Topic object.",
        "tags": [
          "all",
          "msgVpn",
          "jndi"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaReceivers": {
      "get": {
        "description": "Get a list of Kafka Receiver objects.\n\nA Kafka Receiver receives messages from a Kafka Cluster.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nkafkaReceiverName|x|\nmsgVpnName|x|\nuptime||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaReceivers",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Kafka Receiver objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaReceiversResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Kafka Receiver objects.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaReceiver"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaReceivers/{kafkaReceiverName}": {
      "get": {
        "description": "Get a Kafka Receiver object.\n\nA Kafka Receiver receives messages from a Kafka Cluster.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nkafkaReceiverName|x|\nmsgVpnName|x|\nuptime||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaReceiver",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Receiver.",
            "in": "path",
            "name": "kafkaReceiverName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Kafka Receiver object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaReceiverResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Kafka Receiver object.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaReceiver"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaReceivers/{kafkaReceiverName}/keytabEntries": {
      "get": {
        "description": "Get a list of Kerberos Keytab Entries objects.\n\nKerberos Keytab entries configured for the Kafka Receiver.\n\n\nAttribute|Identifying\n:---|:---:\nencryptionType|x\nkafkaReceiverName|x\nkeyVersionNumber|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.40.",
        "operationId": "getMsgVpnKafkaReceiverKeytabEntries",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Receiver.",
            "in": "path",
            "name": "kafkaReceiverName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Kerberos Keytab Entries objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaReceiverKeytabEntriesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Kerberos Keytab Entries objects.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaReceiver"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaReceivers/{kafkaReceiverName}/keytabEntries/{encryptionType},{keyVersionNumber}": {
      "get": {
        "description": "Get a Kerberos Keytab Entries object.\n\nKerberos Keytab entries configured for the Kafka Receiver.\n\n\nAttribute|Identifying\n:---|:---:\nencryptionType|x\nkafkaReceiverName|x\nkeyVersionNumber|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.40.",
        "operationId": "getMsgVpnKafkaReceiverKeytabEntry",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Receiver.",
            "in": "path",
            "name": "kafkaReceiverName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Encryption type used by the keytab entry.",
            "in": "path",
            "name": "encryptionType",
            "required": true,
            "type": "string"
          },
          {
            "description": "Key Version Number (KVNO) of the keytab entry.",
            "in": "path",
            "name": "keyVersionNumber",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Kerberos Keytab Entries object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaReceiverKeytabEntryResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Kerberos Keytab Entries object.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaReceiver"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaReceivers/{kafkaReceiverName}/remoteBrokers": {
      "get": {
        "description": "Get a list of Remote Kafka Brokers objects.\n\nA remote Kafka broker used by the Kafka Receiver.\n\n\nAttribute|Identifying\n:---|:---:\nkafkaReceiverName|x\nmsgVpnName|x\nremoteBroker|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaReceiverRemoteBrokers",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Receiver.",
            "in": "path",
            "name": "kafkaReceiverName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Remote Kafka Brokers objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaReceiverRemoteBrokersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Remote Kafka Brokers objects.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaReceiver"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaReceivers/{kafkaReceiverName}/remoteBrokers/{remoteBroker}": {
      "get": {
        "description": "Get a Remote Kafka Brokers object.\n\nA remote Kafka broker used by the Kafka Receiver.\n\n\nAttribute|Identifying\n:---|:---:\nkafkaReceiverName|x\nmsgVpnName|x\nremoteBroker|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaReceiverRemoteBroker",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Receiver.",
            "in": "path",
            "name": "kafkaReceiverName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Kafka remote broker name.",
            "in": "path",
            "name": "remoteBroker",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Remote Kafka Brokers object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaReceiverRemoteBrokerResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Remote Kafka Brokers object.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaReceiver"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaReceivers/{kafkaReceiverName}/topicBindings": {
      "get": {
        "description": "Get a list of Topic Binding objects.\n\nA Topic Binding receives messages from a remote Kafka Topic.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nkafkaReceiverName|x|\nmsgVpnName|x|\ntopicName|x|\nuptime||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaReceiverTopicBindings",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Receiver.",
            "in": "path",
            "name": "kafkaReceiverName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic Binding objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaReceiverTopicBindingsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic Binding objects.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaReceiver"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaReceivers/{kafkaReceiverName}/topicBindings/{topicName}": {
      "get": {
        "description": "Get a Topic Binding object.\n\nA Topic Binding receives messages from a remote Kafka Topic.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nkafkaReceiverName|x|\nmsgVpnName|x|\ntopicName|x|\nuptime||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaReceiverTopicBinding",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Receiver.",
            "in": "path",
            "name": "kafkaReceiverName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic or a POSIX.2 regular expression starting with '^'.",
            "in": "path",
            "name": "topicName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic Binding object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaReceiverTopicBindingResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic Binding object.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaReceiver"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaSenders": {
      "get": {
        "description": "Get a list of Kafka Sender objects.\n\nA Kafka Sender sends messages to a Kafka Cluster.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nkafkaSenderName|x|\nmsgVpnName|x|\nuptime||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaSenders",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Kafka Sender objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaSendersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Kafka Sender objects.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaSender"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaSenders/{kafkaSenderName}": {
      "get": {
        "description": "Get a Kafka Sender object.\n\nA Kafka Sender sends messages to a Kafka Cluster.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nkafkaSenderName|x|\nmsgVpnName|x|\nuptime||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaSender",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Sender.",
            "in": "path",
            "name": "kafkaSenderName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Kafka Sender object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaSenderResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Kafka Sender object.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaSender"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaSenders/{kafkaSenderName}/keytabEntries": {
      "get": {
        "description": "Get a list of Kerberos Keytab Entries objects.\n\nKerberos Keytab entries configured for the Kafka Sender.\n\n\nAttribute|Identifying\n:---|:---:\nencryptionType|x\nkafkaSenderName|x\nkeyVersionNumber|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.40.",
        "operationId": "getMsgVpnKafkaSenderKeytabEntries",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Sender.",
            "in": "path",
            "name": "kafkaSenderName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Kerberos Keytab Entries objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaSenderKeytabEntriesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Kerberos Keytab Entries objects.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaSender"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaSenders/{kafkaSenderName}/keytabEntries/{encryptionType},{keyVersionNumber}": {
      "get": {
        "description": "Get a Kerberos Keytab Entries object.\n\nKerberos Keytab entries configured for the Kafka Sender.\n\n\nAttribute|Identifying\n:---|:---:\nencryptionType|x\nkafkaSenderName|x\nkeyVersionNumber|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.40.",
        "operationId": "getMsgVpnKafkaSenderKeytabEntry",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Sender.",
            "in": "path",
            "name": "kafkaSenderName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Encryption type used by the keytab entry.",
            "in": "path",
            "name": "encryptionType",
            "required": true,
            "type": "string"
          },
          {
            "description": "Key Version Number (KVNO) of the keytab entry.",
            "in": "path",
            "name": "keyVersionNumber",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Kerberos Keytab Entries object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaSenderKeytabEntryResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Kerberos Keytab Entries object.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaSender"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaSenders/{kafkaSenderName}/queueBindings": {
      "get": {
        "description": "Get a list of Queue Binding objects.\n\nA Queue Binding sends messages from a local Solace Queue to a remote Kafka topic.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nkafkaSenderName|x|\nmsgVpnName|x|\nqueueName|x|\nuptime||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaSenderQueueBindings",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Sender.",
            "in": "path",
            "name": "kafkaSenderName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Queue Binding objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaSenderQueueBindingsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Queue Binding objects.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaSender"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaSenders/{kafkaSenderName}/queueBindings/{queueName}": {
      "get": {
        "description": "Get a Queue Binding object.\n\nA Queue Binding sends messages from a local Solace Queue to a remote Kafka topic.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nkafkaSenderName|x|\nmsgVpnName|x|\nqueueName|x|\nuptime||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaSenderQueueBinding",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Sender.",
            "in": "path",
            "name": "kafkaSenderName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Queue Binding object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaSenderQueueBindingResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Queue Binding object.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaSender"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaSenders/{kafkaSenderName}/remoteBrokers": {
      "get": {
        "description": "Get a list of Remote Kafka Brokers objects.\n\nA remote Kafka broker used by the Kafka Sender.\n\n\nAttribute|Identifying\n:---|:---:\nkafkaSenderName|x\nmsgVpnName|x\nremoteBroker|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaSenderRemoteBrokers",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Sender.",
            "in": "path",
            "name": "kafkaSenderName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Remote Kafka Brokers objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaSenderRemoteBrokersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Remote Kafka Brokers objects.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaSender"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/kafkaSenders/{kafkaSenderName}/remoteBrokers/{remoteBroker}": {
      "get": {
        "description": "Get a Remote Kafka Brokers object.\n\nA remote Kafka broker used by the Kafka Sender.\n\n\nAttribute|Identifying\n:---|:---:\nkafkaSenderName|x\nmsgVpnName|x\nremoteBroker|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnKafkaSenderRemoteBroker",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Kafka Sender.",
            "in": "path",
            "name": "kafkaSenderName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Kafka remote broker name.",
            "in": "path",
            "name": "remoteBroker",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Remote Kafka Brokers object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnKafkaSenderRemoteBrokerResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Remote Kafka Brokers object.",
        "tags": [
          "all",
          "msgVpn",
          "kafkaSender"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/mqttRetainCaches": {
      "get": {
        "description": "Get a list of MQTT Retain Cache objects.\n\nUsing MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnMqttRetainCaches",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of MQTT Retain Cache objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnMqttRetainCachesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of MQTT Retain Cache objects.",
        "tags": [
          "all",
          "msgVpn",
          "mqttRetainCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/mqttRetainCaches/{cacheName}": {
      "get": {
        "description": "Get an MQTT Retain Cache object.\n\nUsing MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.\n\n\nAttribute|Identifying\n:---|:---:\ncacheName|x\nmsgVpnName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnMqttRetainCache",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the MQTT Retain Cache.",
            "in": "path",
            "name": "cacheName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The MQTT Retain Cache object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnMqttRetainCacheResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an MQTT Retain Cache object.",
        "tags": [
          "all",
          "msgVpn",
          "mqttRetainCache"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/mqttSessions": {
      "get": {
        "description": "Get a list of MQTT Session objects.\n\nAn MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncounter.mqttConnackErrorTxCount||x\ncounter.mqttConnackTxCount||x\ncounter.mqttConnectRxCount||x\ncounter.mqttDisconnectRxCount||x\ncounter.mqttPubcompTxCount||x\ncounter.mqttPublishQos0RxCount||x\ncounter.mqttPublishQos0TxCount||x\ncounter.mqttPublishQos1RxCount||x\ncounter.mqttPublishQos1TxCount||x\ncounter.mqttPublishQos2RxCount||x\ncounter.mqttPubrecTxCount||x\ncounter.mqttPubrelRxCount||x\nmqttSessionClientId|x|\nmqttSessionVirtualRouter|x|\nmsgVpnName|x|\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnMqttSessions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of MQTT Session objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnMqttSessionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of MQTT Session objects.",
        "tags": [
          "all",
          "msgVpn",
          "mqttSession"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}": {
      "get": {
        "description": "Get an MQTT Session object.\n\nAn MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncounter.mqttConnackErrorTxCount||x\ncounter.mqttConnackTxCount||x\ncounter.mqttConnectRxCount||x\ncounter.mqttDisconnectRxCount||x\ncounter.mqttPubcompTxCount||x\ncounter.mqttPublishQos0RxCount||x\ncounter.mqttPublishQos0TxCount||x\ncounter.mqttPublishQos1RxCount||x\ncounter.mqttPublishQos1TxCount||x\ncounter.mqttPublishQos2RxCount||x\ncounter.mqttPubrecTxCount||x\ncounter.mqttPubrelRxCount||x\nmqttSessionClientId|x|\nmqttSessionVirtualRouter|x|\nmsgVpnName|x|\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnMqttSession",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.",
            "in": "path",
            "name": "mqttSessionClientId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the MQTT Session.",
            "in": "path",
            "name": "mqttSessionVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The MQTT Session object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnMqttSessionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an MQTT Session object.",
        "tags": [
          "all",
          "msgVpn",
          "mqttSession"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions": {
      "get": {
        "description": "Get a list of Subscription objects.\n\nAn MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.\n\n\nAttribute|Identifying\n:---|:---:\nmqttSessionClientId|x\nmqttSessionVirtualRouter|x\nmsgVpnName|x\nsubscriptionTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnMqttSessionSubscriptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.",
            "in": "path",
            "name": "mqttSessionClientId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the MQTT Session.",
            "in": "path",
            "name": "mqttSessionVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Subscription objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnMqttSessionSubscriptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Subscription objects.",
        "tags": [
          "all",
          "msgVpn",
          "mqttSession"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}": {
      "get": {
        "description": "Get a Subscription object.\n\nAn MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.\n\n\nAttribute|Identifying\n:---|:---:\nmqttSessionClientId|x\nmqttSessionVirtualRouter|x\nmsgVpnName|x\nsubscriptionTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnMqttSessionSubscription",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.",
            "in": "path",
            "name": "mqttSessionClientId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The virtual router of the MQTT Session.",
            "in": "path",
            "name": "mqttSessionVirtualRouter",
            "required": true,
            "type": "string"
          },
          {
            "description": "The MQTT subscription topic.",
            "in": "path",
            "name": "subscriptionTopic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Subscription object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnMqttSessionSubscriptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Subscription object.",
        "tags": [
          "all",
          "msgVpn",
          "mqttSession"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/proxies": {
      "get": {
        "description": "Get a list of Proxy objects.\n\nProxy objects define the connection parameters for a proxy server. To use a proxy for a particular connection such as a REST Consumer, select the proxy by name in the configuration for that object.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nproxyName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnProxies",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Proxy objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnProxiesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Proxy objects.",
        "tags": [
          "all",
          "msgVpn",
          "proxy"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/proxies/{proxyName}": {
      "get": {
        "description": "Get a Proxy object.\n\nProxy objects define the connection parameters for a proxy server. To use a proxy for a particular connection such as a REST Consumer, select the proxy by name in the configuration for that object.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nproxyName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.36.",
        "operationId": "getMsgVpnProxy",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the proxy.",
            "in": "path",
            "name": "proxyName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Proxy object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnProxyResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Proxy object.",
        "tags": [
          "all",
          "msgVpn",
          "proxy"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queueTemplates": {
      "get": {
        "description": "Get a list of Queue Template objects.\n\nA Queue Template provides a mechanism for specifying the initial state for client created queues.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nqueueTemplateName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnQueueTemplates",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Queue Template objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueTemplatesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Queue Template objects.",
        "tags": [
          "all",
          "msgVpn",
          "queueTemplate"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queueTemplates/{queueTemplateName}": {
      "get": {
        "description": "Get a Queue Template object.\n\nA Queue Template provides a mechanism for specifying the initial state for client created queues.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nqueueTemplateName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnQueueTemplate",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue Template.",
            "in": "path",
            "name": "queueTemplateName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Queue Template object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueTemplateResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Queue Template object.",
        "tags": [
          "all",
          "msgVpn",
          "queueTemplate"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues": {
      "get": {
        "description": "Get a list of Queue objects.\n\nA Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nmsgVpnName|x|\nqueueName|x|\nvirtualRouter||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueues",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Queue objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueuesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Queue objects.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}": {
      "get": {
        "description": "Get a Queue object.\n\nA Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nmsgVpnName|x|\nqueueName|x|\nvirtualRouter||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueue",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Queue object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Queue object.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}/msgs": {
      "get": {
        "description": "Get a list of Queue Message objects.\n\nA Queue Message is a packet of information sent from producers to consumers using the Queue.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\nqueueName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueueMsgs",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Queue Message objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueMsgsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Queue Message objects.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}/msgs/{msgId}": {
      "get": {
        "description": "Get a Queue Message object.\n\nA Queue Message is a packet of information sent from producers to consumers using the Queue.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\nqueueName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueueMsg",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Message.",
            "in": "path",
            "name": "msgId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Queue Message object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueMsgResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Queue Message object.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}/priorities": {
      "get": {
        "description": "Get a list of Queue Priority objects.\n\nQueues can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Queue.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\npriority|x\nqueueName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 10.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueuePriorities",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Queue Priority objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueuePrioritiesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Queue Priority objects.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}/priorities/{priority}": {
      "get": {
        "description": "Get a Queue Priority object.\n\nQueues can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Queue.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\npriority|x\nqueueName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueuePriority",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The level of the Priority, from 9 (highest) to 0 (lowest).",
            "in": "path",
            "name": "priority",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Queue Priority object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueuePriorityResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Queue Priority object.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}/subscriptions": {
      "get": {
        "description": "Get a list of Queue Subscription objects.\n\nOne or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nqueueName|x\nsubscriptionTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueueSubscriptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Queue Subscription objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueSubscriptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Queue Subscription objects.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}": {
      "get": {
        "description": "Get a Queue Subscription object.\n\nOne or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nqueueName|x\nsubscriptionTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueueSubscription",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic of the Subscription.",
            "in": "path",
            "name": "subscriptionTopic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Queue Subscription object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueSubscriptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Queue Subscription object.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}/txFlows": {
      "get": {
        "description": "Get a list of Queue Transmit Flow objects.\n\nQueue Transmit Flows are used by clients to consume Guaranteed messages from a Queue.\n\n\nAttribute|Identifying\n:---|:---:\nflowId|x\nmsgVpnName|x\nqueueName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueueTxFlows",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Queue Transmit Flow objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueTxFlowsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Queue Transmit Flow objects.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/queues/{queueName}/txFlows/{flowId}": {
      "get": {
        "description": "Get a Queue Transmit Flow object.\n\nQueue Transmit Flows are used by clients to consume Guaranteed messages from a Queue.\n\n\nAttribute|Identifying\n:---|:---:\nflowId|x\nmsgVpnName|x\nqueueName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnQueueTxFlow",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Queue.",
            "in": "path",
            "name": "queueName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Flow.",
            "in": "path",
            "name": "flowId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Queue Transmit Flow object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnQueueTxFlowResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Queue Transmit Flow object.",
        "tags": [
          "all",
          "msgVpn",
          "queue"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/replayLogs": {
      "get": {
        "description": "Get a list of Replay Log objects.\n\nWhen the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nreplayLogName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnReplayLogs",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Replay Log objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnReplayLogsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Replay Log objects.",
        "tags": [
          "all",
          "msgVpn",
          "replayLog"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}": {
      "get": {
        "description": "Get a Replay Log object.\n\nWhen the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nreplayLogName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnReplayLog",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Replay Log.",
            "in": "path",
            "name": "replayLogName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Replay Log object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnReplayLogResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Replay Log object.",
        "tags": [
          "all",
          "msgVpn",
          "replayLog"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}/msgs": {
      "get": {
        "description": "Get a list of Message objects.\n\nA Message is a packet of information sent from producers to consumers. Messages are the central units of information that clients exchange using the message broker and which are cached in the Replay Log.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\nreplayLogName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnReplayLogMsgs",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Replay Log.",
            "in": "path",
            "name": "replayLogName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Message objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnReplayLogMsgsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Message objects.",
        "tags": [
          "all",
          "msgVpn",
          "replayLog"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}/msgs/{msgId}": {
      "get": {
        "description": "Get a Message object.\n\nA Message is a packet of information sent from producers to consumers. Messages are the central units of information that clients exchange using the message broker and which are cached in the Replay Log.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\nreplayLogName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnReplayLogMsg",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Replay Log.",
            "in": "path",
            "name": "replayLogName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the message.",
            "in": "path",
            "name": "msgId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Message object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnReplayLogMsgResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Message object.",
        "tags": [
          "all",
          "msgVpn",
          "replayLog"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}/topicFilterSubscriptions": {
      "get": {
        "description": "Get a list of Topic Filter Subscription objects.\n\nOne or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nreplayLogName|x\ntopicFilterSubscription|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.27.",
        "operationId": "getMsgVpnReplayLogTopicFilterSubscriptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Replay Log.",
            "in": "path",
            "name": "replayLogName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic Filter Subscription objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnReplayLogTopicFilterSubscriptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic Filter Subscription objects.",
        "tags": [
          "all",
          "msgVpn",
          "replayLog"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}/topicFilterSubscriptions/{topicFilterSubscription}": {
      "get": {
        "description": "Get a Topic Filter Subscription object.\n\nOne or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nreplayLogName|x\ntopicFilterSubscription|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.27.",
        "operationId": "getMsgVpnReplayLogTopicFilterSubscription",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Replay Log.",
            "in": "path",
            "name": "replayLogName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic of the Subscription.",
            "in": "path",
            "name": "topicFilterSubscription",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic Filter Subscription object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnReplayLogTopicFilterSubscriptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic Filter Subscription object.",
        "tags": [
          "all",
          "msgVpn",
          "replayLog"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/replicatedTopics": {
      "get": {
        "description": "Get a list of Replicated Topic objects.\n\nTo indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nreplicatedTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnReplicatedTopics",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Replicated Topic objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnReplicatedTopicsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Replicated Topic objects.",
        "tags": [
          "all",
          "msgVpn",
          "replicatedTopic"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}": {
      "get": {
        "description": "Get a Replicated Topic object.\n\nTo indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nreplicatedTopic|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnReplicatedTopic",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The topic for applying replication. Published messages matching this topic will be replicated to the standby site.",
            "in": "path",
            "name": "replicatedTopic",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Replicated Topic object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnReplicatedTopicResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Replicated Topic object.",
        "tags": [
          "all",
          "msgVpn",
          "replicatedTopic"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints": {
      "get": {
        "description": "Get a list of REST Delivery Point objects.\n\nA REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnRestDeliveryPoints",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of REST Delivery Point objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of REST Delivery Point objects.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}": {
      "get": {
        "description": "Get a REST Delivery Point object.\n\nA REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnRestDeliveryPoint",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The REST Delivery Point object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a REST Delivery Point object.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings": {
      "get": {
        "description": "Get a list of Queue Binding objects.\n\nA Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nqueueBindingName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnRestDeliveryPointQueueBindings",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Queue Binding objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Queue Binding objects.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}": {
      "get": {
        "description": "Get a Queue Binding object.\n\nA Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nqueueBindingName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnRestDeliveryPointQueueBinding",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of a queue in the Message VPN.",
            "in": "path",
            "name": "queueBindingName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Queue Binding object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Queue Binding object.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}/protectedRequestHeaders": {
      "get": {
        "description": "Get a list of Protected Request Header objects.\n\nA protected request header to be added to the HTTP request. Unlike a non-protected request header, the header value cannot be displayed after it is set.\n\n\nAttribute|Identifying\n:---|:---:\nheaderName|x\nmsgVpnName|x\nqueueBindingName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.30.",
        "operationId": "getMsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaders",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of a queue in the Message VPN.",
            "in": "path",
            "name": "queueBindingName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Protected Request Header objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeadersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Protected Request Header objects.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}/protectedRequestHeaders/{headerName}": {
      "get": {
        "description": "Get a Protected Request Header object.\n\nA protected request header to be added to the HTTP request. Unlike a non-protected request header, the header value cannot be displayed after it is set.\n\n\nAttribute|Identifying\n:---|:---:\nheaderName|x\nmsgVpnName|x\nqueueBindingName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.30.",
        "operationId": "getMsgVpnRestDeliveryPointQueueBindingProtectedRequestHeader",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of a queue in the Message VPN.",
            "in": "path",
            "name": "queueBindingName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the protected HTTP request header.",
            "in": "path",
            "name": "headerName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Protected Request Header object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Protected Request Header object.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}/requestHeaders": {
      "get": {
        "description": "Get a list of Request Header objects.\n\nA request header to be added to the HTTP request.\n\n\nAttribute|Identifying\n:---|:---:\nheaderName|x\nmsgVpnName|x\nqueueBindingName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.23.",
        "operationId": "getMsgVpnRestDeliveryPointQueueBindingRequestHeaders",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of a queue in the Message VPN.",
            "in": "path",
            "name": "queueBindingName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Request Header objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingRequestHeadersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Request Header objects.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}/requestHeaders/{headerName}": {
      "get": {
        "description": "Get a Request Header object.\n\nA request header to be added to the HTTP request.\n\n\nAttribute|Identifying\n:---|:---:\nheaderName|x\nmsgVpnName|x\nqueueBindingName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.23.",
        "operationId": "getMsgVpnRestDeliveryPointQueueBindingRequestHeader",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of a queue in the Message VPN.",
            "in": "path",
            "name": "queueBindingName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the HTTP request header.",
            "in": "path",
            "name": "headerName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Request Header object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Request Header object.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers": {
      "get": {
        "description": "Get a list of REST Consumer objects.\n\nREST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncounter.httpRequestConnectionCloseTxMsgCount||x\ncounter.httpRequestOutstandingTxMsgCount||x\ncounter.httpRequestTimedOutTxMsgCount||x\ncounter.httpRequestTxByteCount||x\ncounter.httpRequestTxMsgCount||x\ncounter.httpResponseErrorRxMsgCount||x\ncounter.httpResponseRxByteCount||x\ncounter.httpResponseRxMsgCount||x\ncounter.httpResponseSuccessRxMsgCount||x\nmsgVpnName|x|\nrestConsumerName|x|\nrestDeliveryPointName|x|\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnRestDeliveryPointRestConsumers",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of REST Consumer objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of REST Consumer objects.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}": {
      "get": {
        "description": "Get a REST Consumer object.\n\nREST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncounter.httpRequestConnectionCloseTxMsgCount||x\ncounter.httpRequestOutstandingTxMsgCount||x\ncounter.httpRequestTimedOutTxMsgCount||x\ncounter.httpRequestTxByteCount||x\ncounter.httpRequestTxMsgCount||x\ncounter.httpResponseErrorRxMsgCount||x\ncounter.httpResponseRxByteCount||x\ncounter.httpResponseRxMsgCount||x\ncounter.httpResponseSuccessRxMsgCount||x\nmsgVpnName|x|\nrestConsumerName|x|\nrestDeliveryPointName|x|\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.11.",
        "operationId": "getMsgVpnRestDeliveryPointRestConsumer",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Consumer.",
            "in": "path",
            "name": "restConsumerName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The REST Consumer object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a REST Consumer object.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims": {
      "get": {
        "description": "Get a list of Claim objects.\n\nA Claim is added to the JWT sent to the OAuth token request endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\noauthJwtClaimName|x\nrestConsumerName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.21.",
        "operationId": "getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaims",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Consumer.",
            "in": "path",
            "name": "restConsumerName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Claim objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Claim objects.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims/{oauthJwtClaimName}": {
      "get": {
        "description": "Get a Claim object.\n\nA Claim is added to the JWT sent to the OAuth token request endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\noauthJwtClaimName|x\nrestConsumerName|x\nrestDeliveryPointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.21.",
        "operationId": "getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Consumer.",
            "in": "path",
            "name": "restConsumerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the additional claim. Cannot be \"exp\", \"iat\", or \"jti\".",
            "in": "path",
            "name": "oauthJwtClaimName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Claim object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Claim object.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames": {
      "get": {
        "deprecated": true,
        "description": "Get a list of Trusted Common Name objects.\n\nThe Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nmsgVpnName|x|x\nrestConsumerName|x|x\nrestDeliveryPointName|x|x\ntlsTrustedCommonName|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
        "operationId": "getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Consumer.",
            "in": "path",
            "name": "restConsumerName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Trusted Common Name objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Trusted Common Name objects.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}": {
      "get": {
        "deprecated": true,
        "description": "Get a Trusted Common Name object.\n\nThe Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nmsgVpnName|x|x\nrestConsumerName|x|x\nrestDeliveryPointName|x|x\ntlsTrustedCommonName|x|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.",
        "operationId": "getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Delivery Point.",
            "in": "path",
            "name": "restDeliveryPointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the REST Consumer.",
            "in": "path",
            "name": "restConsumerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The expected trusted common name of the remote certificate.",
            "in": "path",
            "name": "tlsTrustedCommonName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Trusted Common Name object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Trusted Common Name object.",
        "tags": [
          "all",
          "msgVpn",
          "restDeliveryPoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/telemetryProfiles": {
      "get": {
        "description": "Get a list of Telemetry Profile objects.\n\nUsing the Telemetry Profile allows trace spans to be generated as messages are processed by the broker. The generated spans are stored persistently on the broker and may be consumed by the Solace receiver component of an OpenTelemetry Collector.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\ntelemetryProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.31.",
        "operationId": "getMsgVpnTelemetryProfiles",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Telemetry Profile objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTelemetryProfilesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Telemetry Profile objects.",
        "tags": [
          "all",
          "msgVpn",
          "telemetryProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}": {
      "get": {
        "description": "Get a Telemetry Profile object.\n\nUsing the Telemetry Profile allows trace spans to be generated as messages are processed by the broker. The generated spans are stored persistently on the broker and may be consumed by the Solace receiver component of an OpenTelemetry Collector.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\ntelemetryProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.31.",
        "operationId": "getMsgVpnTelemetryProfile",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Telemetry Profile.",
            "in": "path",
            "name": "telemetryProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Telemetry Profile object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTelemetryProfileResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Telemetry Profile object.",
        "tags": [
          "all",
          "msgVpn",
          "telemetryProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/receiverAclConnectExceptions": {
      "get": {
        "description": "Get a list of Receiver ACL Connect Exception objects.\n\nA Receiver ACL Connect Exception is an exception to the default action to take when a receiver connects to the broker. Exceptions must be expressed as an IP address/netmask in CIDR form.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nreceiverAclConnectExceptionAddress|x\ntelemetryProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.31.",
        "operationId": "getMsgVpnTelemetryProfileReceiverAclConnectExceptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Telemetry Profile.",
            "in": "path",
            "name": "telemetryProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Receiver ACL Connect Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverAclConnectExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Receiver ACL Connect Exception objects.",
        "tags": [
          "all",
          "msgVpn",
          "telemetryProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/receiverAclConnectExceptions/{receiverAclConnectExceptionAddress}": {
      "get": {
        "description": "Get a Receiver ACL Connect Exception object.\n\nA Receiver ACL Connect Exception is an exception to the default action to take when a receiver connects to the broker. Exceptions must be expressed as an IP address/netmask in CIDR form.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nreceiverAclConnectExceptionAddress|x\ntelemetryProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.31.",
        "operationId": "getMsgVpnTelemetryProfileReceiverAclConnectException",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Telemetry Profile.",
            "in": "path",
            "name": "telemetryProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The IP address/netmask of the receiver connect exception in CIDR form.",
            "in": "path",
            "name": "receiverAclConnectExceptionAddress",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Receiver ACL Connect Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTelemetryProfileReceiverAclConnectExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Receiver ACL Connect Exception object.",
        "tags": [
          "all",
          "msgVpn",
          "telemetryProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/traceFilters": {
      "get": {
        "description": "Get a list of Trace Filter objects.\n\nA Trace Filter controls which messages received by the broker will be traced. If an incoming message matches an enabled tracing filter's subscription, the message will be traced as it passes through the broker.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\ntelemetryProfileName|x\ntraceFilterName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.31.",
        "operationId": "getMsgVpnTelemetryProfileTraceFilters",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Telemetry Profile.",
            "in": "path",
            "name": "telemetryProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Trace Filter objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFiltersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Trace Filter objects.",
        "tags": [
          "all",
          "msgVpn",
          "telemetryProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/traceFilters/{traceFilterName}": {
      "get": {
        "description": "Get a Trace Filter object.\n\nA Trace Filter controls which messages received by the broker will be traced. If an incoming message matches an enabled tracing filter's subscription, the message will be traced as it passes through the broker.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\ntelemetryProfileName|x\ntraceFilterName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.31.",
        "operationId": "getMsgVpnTelemetryProfileTraceFilter",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Telemetry Profile.",
            "in": "path",
            "name": "telemetryProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "A name used to identify the trace filter. Consider a name that describes the subscriptions contained within the filter, such as the name of the application and/or the scenario in which the trace filter might be enabled, such as \"appNameDebug\".",
            "in": "path",
            "name": "traceFilterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Trace Filter object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Trace Filter object.",
        "tags": [
          "all",
          "msgVpn",
          "telemetryProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/traceFilters/{traceFilterName}/subscriptions": {
      "get": {
        "description": "Get a list of Telemetry Trace Filter Subscription objects.\n\nTrace filter subscriptions control which messages will be attracted by the tracing filter.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nsubscription|x\nsubscriptionSyntax|x\ntelemetryProfileName|x\ntraceFilterName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.31.",
        "operationId": "getMsgVpnTelemetryProfileTraceFilterSubscriptions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Telemetry Profile.",
            "in": "path",
            "name": "telemetryProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "A name used to identify the trace filter. Consider a name that describes the subscriptions contained within the filter, such as the name of the application and/or the scenario in which the trace filter might be enabled, such as \"appNameDebug\".",
            "in": "path",
            "name": "traceFilterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Telemetry Trace Filter Subscription objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterSubscriptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Telemetry Trace Filter Subscription objects.",
        "tags": [
          "all",
          "msgVpn",
          "telemetryProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/traceFilters/{traceFilterName}/subscriptions/{subscription},{subscriptionSyntax}": {
      "get": {
        "description": "Get a Telemetry Trace Filter Subscription object.\n\nTrace filter subscriptions control which messages will be attracted by the tracing filter.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nsubscription|x\nsubscriptionSyntax|x\ntelemetryProfileName|x\ntraceFilterName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.31.",
        "operationId": "getMsgVpnTelemetryProfileTraceFilterSubscription",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Telemetry Profile.",
            "in": "path",
            "name": "telemetryProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "A name used to identify the trace filter. Consider a name that describes the subscriptions contained within the filter, such as the name of the application and/or the scenario in which the trace filter might be enabled, such as \"appNameDebug\".",
            "in": "path",
            "name": "traceFilterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Messages matching this subscription will follow this filter's configuration.",
            "in": "path",
            "name": "subscription",
            "required": true,
            "type": "string"
          },
          {
            "description": "The syntax of the trace filter subscription.",
            "in": "path",
            "name": "subscriptionSyntax",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Telemetry Trace Filter Subscription object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTelemetryProfileTraceFilterSubscriptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Telemetry Trace Filter Subscription object.",
        "tags": [
          "all",
          "msgVpn",
          "telemetryProfile"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpointTemplates": {
      "get": {
        "description": "Get a list of Topic Endpoint Template objects.\n\nA Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\ntopicEndpointTemplateName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnTopicEndpointTemplates",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic Endpoint Template objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointTemplatesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic Endpoint Template objects.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpointTemplate"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpointTemplates/{topicEndpointTemplateName}": {
      "get": {
        "description": "Get a Topic Endpoint Template object.\n\nA Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\ntopicEndpointTemplateName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.14.",
        "operationId": "getMsgVpnTopicEndpointTemplate",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic Endpoint Template.",
            "in": "path",
            "name": "topicEndpointTemplateName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic Endpoint Template object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointTemplateResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic Endpoint Template object.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpointTemplate"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpoints": {
      "get": {
        "description": "Get a list of Topic Endpoint objects.\n\nA Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nmsgVpnName|x|\ntopicEndpointName|x|\nvirtualRouter||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTopicEndpoints",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic Endpoint objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic Endpoint objects.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}": {
      "get": {
        "description": "Get a Topic Endpoint object.\n\nA Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nmsgVpnName|x|\ntopicEndpointName|x|\nvirtualRouter||x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTopicEndpoint",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic Endpoint.",
            "in": "path",
            "name": "topicEndpointName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic Endpoint object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic Endpoint object.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/msgs": {
      "get": {
        "description": "Get a list of Topic Endpoint Message objects.\n\nA Topic Endpoint Message is a packet of information sent from producers to consumers using the Topic Endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\ntopicEndpointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTopicEndpointMsgs",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic Endpoint.",
            "in": "path",
            "name": "topicEndpointName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic Endpoint Message objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointMsgsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic Endpoint Message objects.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/msgs/{msgId}": {
      "get": {
        "description": "Get a Topic Endpoint Message object.\n\nA Topic Endpoint Message is a packet of information sent from producers to consumers using the Topic Endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\ntopicEndpointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTopicEndpointMsg",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic Endpoint.",
            "in": "path",
            "name": "topicEndpointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Message.",
            "in": "path",
            "name": "msgId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic Endpoint Message object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointMsgResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic Endpoint Message object.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/priorities": {
      "get": {
        "description": "Get a list of Topic Endpoint Priority objects.\n\nTopic Endpoints can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Topic Endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\npriority|x\ntopicEndpointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 10.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTopicEndpointPriorities",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic Endpoint.",
            "in": "path",
            "name": "topicEndpointName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic Endpoint Priority objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointPrioritiesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic Endpoint Priority objects.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/priorities/{priority}": {
      "get": {
        "description": "Get a Topic Endpoint Priority object.\n\nTopic Endpoints can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Topic Endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\npriority|x\ntopicEndpointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTopicEndpointPriority",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic Endpoint.",
            "in": "path",
            "name": "topicEndpointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The level of the Priority, from 9 (highest) to 0 (lowest).",
            "in": "path",
            "name": "priority",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic Endpoint Priority object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointPriorityResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic Endpoint Priority object.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/txFlows": {
      "get": {
        "description": "Get a list of Topic Endpoint Transmit Flow objects.\n\nTopic Endpoint Transmit Flows are used by clients to consume Guaranteed messages from a Topic Endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nflowId|x\nmsgVpnName|x\ntopicEndpointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTopicEndpointTxFlows",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic Endpoint.",
            "in": "path",
            "name": "topicEndpointName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Topic Endpoint Transmit Flow objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointTxFlowsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Topic Endpoint Transmit Flow objects.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/txFlows/{flowId}": {
      "get": {
        "description": "Get a Topic Endpoint Transmit Flow object.\n\nTopic Endpoint Transmit Flows are used by clients to consume Guaranteed messages from a Topic Endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nflowId|x\nmsgVpnName|x\ntopicEndpointName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTopicEndpointTxFlow",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Topic Endpoint.",
            "in": "path",
            "name": "topicEndpointName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Flow.",
            "in": "path",
            "name": "flowId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Topic Endpoint Transmit Flow object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTopicEndpointTxFlowResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Topic Endpoint Transmit Flow object.",
        "tags": [
          "all",
          "msgVpn",
          "topicEndpoint"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/transactions": {
      "get": {
        "description": "Get a list of Replicated Local Transaction or XA Transaction objects.\n\nTransactions can be used to group a set of Guaranteed messages to be published or consumed or both as an atomic unit of work.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nxid|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTransactions",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Replicated Local Transaction or XA Transaction objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTransactionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Replicated Local Transaction or XA Transaction objects.",
        "tags": [
          "all",
          "msgVpn",
          "transaction"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/transactions/{xid}": {
      "get": {
        "description": "Get a Replicated Local Transaction or XA Transaction object.\n\nTransactions can be used to group a set of Guaranteed messages to be published or consumed or both as an atomic unit of work.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\nxid|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTransaction",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Transaction.",
            "in": "path",
            "name": "xid",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Replicated Local Transaction or XA Transaction object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTransactionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Replicated Local Transaction or XA Transaction object.",
        "tags": [
          "all",
          "msgVpn",
          "transaction"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/transactions/{xid}/consumerMsgs": {
      "get": {
        "description": "Get a list of Transaction Consumer Message objects.\n\nA Transaction Consumer Message is a message that will be consumed as part of this Transaction once the Transaction is committed.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\nxid|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTransactionConsumerMsgs",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Transaction.",
            "in": "path",
            "name": "xid",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Transaction Consumer Message objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTransactionConsumerMsgsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Transaction Consumer Message objects.",
        "tags": [
          "all",
          "msgVpn",
          "transaction"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/transactions/{xid}/consumerMsgs/{msgId}": {
      "get": {
        "description": "Get a Transaction Consumer Message object.\n\nA Transaction Consumer Message is a message that will be consumed as part of this Transaction once the Transaction is committed.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\nxid|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTransactionConsumerMsg",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Transaction.",
            "in": "path",
            "name": "xid",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Message.",
            "in": "path",
            "name": "msgId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Transaction Consumer Message object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTransactionConsumerMsgResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Transaction Consumer Message object.",
        "tags": [
          "all",
          "msgVpn",
          "transaction"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/transactions/{xid}/publisherMsgs": {
      "get": {
        "description": "Get a list of Transaction Publisher Message objects.\n\nA Transaction Publisher Message is a message that will be published as part of this Transaction once the Transaction is committed.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\nxid|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTransactionPublisherMsgs",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Transaction.",
            "in": "path",
            "name": "xid",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Transaction Publisher Message objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTransactionPublisherMsgsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Transaction Publisher Message objects.",
        "tags": [
          "all",
          "msgVpn",
          "transaction"
        ]
      }
    },
    "/msgVpns/{msgVpnName}/transactions/{xid}/publisherMsgs/{msgId}": {
      "get": {
        "description": "Get a Transaction Publisher Message object.\n\nA Transaction Publisher Message is a message that will be published as part of this Transaction once the Transaction is committed.\n\n\nAttribute|Identifying\n:---|:---:\nmsgId|x\nmsgVpnName|x\nxid|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"vpn/read-only\".\n\nThis has been available since 2.12.",
        "operationId": "getMsgVpnTransactionPublisherMsg",
        "parameters": [
          {
            "description": "The name of the Message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Transaction.",
            "in": "path",
            "name": "xid",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier (ID) of the Message.",
            "in": "path",
            "name": "msgId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Transaction Publisher Message object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/MsgVpnTransactionPublisherMsgResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Transaction Publisher Message object.",
        "tags": [
          "all",
          "msgVpn",
          "transaction"
        ]
      }
    },
    "/oauthProfiles": {
      "get": {
        "description": "Get a list of OAuth Profile objects.\n\nOAuth profiles specify how to securely authenticate to an OAuth provider.\n\n\nAttribute|Identifying\n:---|:---:\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfiles",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of OAuth Profile objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfilesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of OAuth Profile objects.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}": {
      "get": {
        "description": "Get an OAuth Profile object.\n\nOAuth profiles specify how to securely authenticate to an OAuth provider.\n\n\nAttribute|Identifying\n:---|:---:\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfile",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The OAuth Profile object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an OAuth Profile object.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/accessLevelGroups": {
      "get": {
        "description": "Get a list of Group Access Level objects.\n\nThe name of a group as it exists on the OAuth server being used to authenticate SEMP users.\n\n\nAttribute|Identifying\n:---|:---:\ngroupName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileAccessLevelGroups",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Group Access Level objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileAccessLevelGroupsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Group Access Level objects.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/accessLevelGroups/{groupName}": {
      "get": {
        "description": "Get a Group Access Level object.\n\nThe name of a group as it exists on the OAuth server being used to authenticate SEMP users.\n\n\nAttribute|Identifying\n:---|:---:\ngroupName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileAccessLevelGroup",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the group.",
            "in": "path",
            "name": "groupName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Group Access Level object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileAccessLevelGroupResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Group Access Level object.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/accessLevelGroups/{groupName}/msgVpnAccessLevelExceptions": {
      "get": {
        "description": "Get a list of Message VPN Access-Level Exception objects.\n\nMessage VPN access-level exceptions for members of this group.\n\n\nAttribute|Identifying\n:---|:---:\ngroupName|x\nmsgVpnName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptions",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the group.",
            "in": "path",
            "name": "groupName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Message VPN Access-Level Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Message VPN Access-Level Exception objects.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/accessLevelGroups/{groupName}/msgVpnAccessLevelExceptions/{msgVpnName}": {
      "get": {
        "description": "Get a Message VPN Access-Level Exception object.\n\nMessage VPN access-level exceptions for members of this group.\n\n\nAttribute|Identifying\n:---|:---:\ngroupName|x\nmsgVpnName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileAccessLevelGroupMsgVpnAccessLevelException",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the group.",
            "in": "path",
            "name": "groupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Message VPN Access-Level Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Message VPN Access-Level Exception object.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/clientAllowedHosts": {
      "get": {
        "description": "Get a list of Allowed Host Value objects.\n\nA valid hostname for this broker in OAuth redirects.\n\n\nAttribute|Identifying\n:---|:---:\nallowedHost|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileClientAllowedHosts",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Allowed Host Value objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileClientAllowedHostsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Allowed Host Value objects.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/clientAllowedHosts/{allowedHost}": {
      "get": {
        "description": "Get an Allowed Host Value object.\n\nA valid hostname for this broker in OAuth redirects.\n\n\nAttribute|Identifying\n:---|:---:\nallowedHost|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileClientAllowedHost",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "An allowed value for the Host header.",
            "in": "path",
            "name": "allowedHost",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Allowed Host Value object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileClientAllowedHostResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an Allowed Host Value object.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/clientAuthorizationParameters": {
      "get": {
        "description": "Get a list of Authorization Parameter objects.\n\nAdditional parameters to be passed to the OAuth authorization endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nauthorizationParameterName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileClientAuthorizationParameters",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Authorization Parameter objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileClientAuthorizationParametersResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Authorization Parameter objects.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/clientAuthorizationParameters/{authorizationParameterName}": {
      "get": {
        "description": "Get an Authorization Parameter object.\n\nAdditional parameters to be passed to the OAuth authorization endpoint.\n\n\nAttribute|Identifying\n:---|:---:\nauthorizationParameterName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileClientAuthorizationParameter",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the authorization parameter.",
            "in": "path",
            "name": "authorizationParameterName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Authorization Parameter object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileClientAuthorizationParameterResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get an Authorization Parameter object.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/clientRequiredClaims": {
      "get": {
        "description": "Get a list of Required Claim objects.\n\nAdditional claims to be verified in the ID token.\n\n\nAttribute|Identifying\n:---|:---:\nclientRequiredClaimName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileClientRequiredClaims",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Required Claim objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileClientRequiredClaimsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Required Claim objects.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/clientRequiredClaims/{clientRequiredClaimName}": {
      "get": {
        "description": "Get a Required Claim object.\n\nAdditional claims to be verified in the ID token.\n\n\nAttribute|Identifying\n:---|:---:\nclientRequiredClaimName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileClientRequiredClaim",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the ID token claim to verify.",
            "in": "path",
            "name": "clientRequiredClaimName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Required Claim object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileClientRequiredClaimResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Required Claim object.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/defaultMsgVpnAccessLevelExceptions": {
      "get": {
        "description": "Get a list of Message VPN Access-Level Exception objects.\n\nDefault message VPN access-level exceptions.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileDefaultMsgVpnAccessLevelExceptions",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Message VPN Access-Level Exception objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileDefaultMsgVpnAccessLevelExceptionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Message VPN Access-Level Exception objects.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/defaultMsgVpnAccessLevelExceptions/{msgVpnName}": {
      "get": {
        "description": "Get a Message VPN Access-Level Exception object.\n\nDefault message VPN access-level exceptions.\n\n\nAttribute|Identifying\n:---|:---:\nmsgVpnName|x\noauthProfileName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileDefaultMsgVpnAccessLevelException",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the message VPN.",
            "in": "path",
            "name": "msgVpnName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Message VPN Access-Level Exception object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileDefaultMsgVpnAccessLevelExceptionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Message VPN Access-Level Exception object.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/resourceServerRequiredClaims": {
      "get": {
        "description": "Get a list of Required Claim objects.\n\nAdditional claims to be verified in the access token.\n\n\nAttribute|Identifying\n:---|:---:\noauthProfileName|x\nresourceServerRequiredClaimName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileResourceServerRequiredClaims",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Required Claim objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileResourceServerRequiredClaimsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Required Claim objects.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/oauthProfiles/{oauthProfileName}/resourceServerRequiredClaims/{resourceServerRequiredClaimName}": {
      "get": {
        "description": "Get a Required Claim object.\n\nAdditional claims to be verified in the access token.\n\n\nAttribute|Identifying\n:---|:---:\noauthProfileName|x\nresourceServerRequiredClaimName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.24.",
        "operationId": "getOauthProfileResourceServerRequiredClaim",
        "parameters": [
          {
            "description": "The name of the OAuth profile.",
            "in": "path",
            "name": "oauthProfileName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the access token claim to verify.",
            "in": "path",
            "name": "resourceServerRequiredClaimName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Required Claim object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/OauthProfileResourceServerRequiredClaimResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Required Claim object.",
        "tags": [
          "all",
          "oauthProfile"
        ]
      }
    },
    "/proxies": {
      "get": {
        "description": "Get a list of Proxy objects.\n\nProxy objects define the connection parameters for a proxy server. To use a proxy for a particular connection such as a OAuth Provider, select the proxy by name in the configuration for that object.\n\n\nAttribute|Identifying\n:---|:---:\nproxyName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.41.",
        "operationId": "getProxies",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Proxy objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/ProxiesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Proxy objects.",
        "tags": [
          "all",
          "proxy"
        ]
      }
    },
    "/proxies/{proxyName}": {
      "get": {
        "description": "Get a Proxy object.\n\nProxy objects define the connection parameters for a proxy server. To use a proxy for a particular connection such as a OAuth Provider, select the proxy by name in the configuration for that object.\n\n\nAttribute|Identifying\n:---|:---:\nproxyName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.41.",
        "operationId": "getProxy",
        "parameters": [
          {
            "description": "The name of the proxy.",
            "in": "path",
            "name": "proxyName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Proxy object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/ProxyResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Proxy object.",
        "tags": [
          "all",
          "proxy"
        ]
      }
    },
    "/sessions": {
      "get": {
        "description": "Get a list of SEMP Session objects.\n\nAdministrative sessions for configuration and monitoring.\n\n\nAttribute|Identifying\n:---|:---:\nsessionId|x\nsessionUsername|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.21.",
        "operationId": "getSessions",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of SEMP Session objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/SessionsResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of SEMP Session objects.",
        "tags": [
          "all",
          "session"
        ]
      }
    },
    "/sessions/{sessionUsername},{sessionId}": {
      "get": {
        "description": "Get a SEMP Session object.\n\nAdministrative sessions for configuration and monitoring.\n\n\nAttribute|Identifying\n:---|:---:\nsessionId|x\nsessionUsername|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.21.",
        "operationId": "getSession",
        "parameters": [
          {
            "description": "The username used for authorization.",
            "in": "path",
            "name": "sessionUsername",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique identifier for the session.",
            "in": "path",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The SEMP Session object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/SessionResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a SEMP Session object.",
        "tags": [
          "all",
          "session"
        ]
      }
    },
    "/standardDomainCertAuthorities": {
      "get": {
        "description": "Get a list of Standard Domain Certificate Authority objects.\n\nStandard Certificate Authorities trusted for domain verification.\n\n\nAttribute|Identifying\n:---|:---:\ncertAuthorityName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 100.\n\nThis has been available since 2.19.",
        "operationId": "getStandardDomainCertAuthorities",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Standard Domain Certificate Authority objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/StandardDomainCertAuthoritiesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Standard Domain Certificate Authority objects.",
        "tags": [
          "all",
          "standardDomainCertAuthority"
        ]
      }
    },
    "/standardDomainCertAuthorities/{certAuthorityName}": {
      "get": {
        "description": "Get a Standard Domain Certificate Authority object.\n\nStandard Certificate Authorities trusted for domain verification.\n\n\nAttribute|Identifying\n:---|:---:\ncertAuthorityName|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.19.",
        "operationId": "getStandardDomainCertAuthority",
        "parameters": [
          {
            "description": "The name of the Certificate Authority.",
            "in": "path",
            "name": "certAuthorityName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Standard Domain Certificate Authority object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/StandardDomainCertAuthorityResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Standard Domain Certificate Authority object.",
        "tags": [
          "all",
          "standardDomainCertAuthority"
        ]
      }
    },
    "/virtualHostnames": {
      "get": {
        "description": "Get a list of Virtual Hostname objects.\n\nA Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.\n\nClients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.\n\nThis mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.\n\n\nAttribute|Identifying\n:---|:---:\nvirtualHostname|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThe maximum number of objects that can be returned in a single page is 500.\n\nThis has been available since 2.17.",
        "operationId": "getVirtualHostnames",
        "parameters": [
          {
            "$ref": "#/parameters/countQuery"
          },
          {
            "$ref": "#/parameters/cursorQuery"
          },
          {
            "$ref": "#/parameters/whereQuery"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Virtual Hostname objects' attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/VirtualHostnamesResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a list of Virtual Hostname objects.",
        "tags": [
          "all",
          "virtualHostname"
        ]
      }
    },
    "/virtualHostnames/{virtualHostname}": {
      "get": {
        "description": "Get a Virtual Hostname object.\n\nA Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.\n\nClients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.\n\nThis mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.\n\n\nAttribute|Identifying\n:---|:---:\nvirtualHostname|x\n\n\n\nThe minimum access scope/level required to perform this operation is \"global/read-only\".\n\nThis has been available since 2.17.",
        "operationId": "getVirtualHostname",
        "parameters": [
          {
            "description": "The virtual hostname.",
            "in": "path",
            "name": "virtualHostname",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/selectQuery"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Virtual Hostname object's attributes, and the request metadata.",
            "schema": {
              "$ref": "#/definitions/VirtualHostnameResponse"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/SempMetaOnlyResponse"
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get a Virtual Hostname object.",
        "tags": [
          "all",
          "virtualHostname"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "basicAuth": {
      "description": "basic authentication",
      "type": "basic"
    }
  },
  "swagger": "2.0",
  "tags": []
}